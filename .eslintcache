[{"D:\\dev\\JS\\taglead_react\\src\\store\\index.js":"1","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js":"2","D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js":"3","D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js":"4","D:\\dev\\JS\\taglead_react\\src\\actions\\index.js":"5","D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js":"6","D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js":"7","D:\\dev\\JS\\taglead_react\\src\\pages\\SingleButtonPage.js":"8","D:\\dev\\JS\\taglead_react\\src\\pages\\LogoutPage.js":"9","D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js":"10","D:\\dev\\JS\\taglead_react\\src\\pages\\ErrorPage.js":"11","D:\\dev\\JS\\taglead_react\\src\\PageBase.js":"12","D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js":"13","D:\\dev\\JS\\taglead_react\\src\\components\\FormedTagPutModal.js":"14","D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js":"15","D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js":"16","D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js":"17","D:\\dev\\JS\\taglead_react\\src\\components\\FeedbackSnackBar.js":"18","D:\\dev\\JS\\taglead_react\\src\\components\\SideDrawer.js":"19","D:\\dev\\JS\\taglead_react\\src\\reportWebVitals.js":"20","D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js":"21","D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js":"22","D:\\dev\\JS\\taglead_react\\src\\test\\TestTagPutModal.js":"23","D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js":"24","D:\\dev\\JS\\taglead_react\\src\\App.js":"25","D:\\dev\\JS\\taglead_react\\src\\lib\\ActionTypeString.js":"26","D:\\dev\\JS\\taglead_react\\src\\components\\TagInputList.js":"27","D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js":"28","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumns.js":"29","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js":"30","D:\\dev\\JS\\taglead_react\\src\\test\\TestMemoColumn.js":"31","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js":"32","D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js":"33","D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js":"34","D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js":"35","D:\\dev\\JS\\taglead_react\\src\\components\\FreeTagInputModal.js":"36","D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js":"37","D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js":"38","D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js":"39","D:\\dev\\JS\\taglead_react\\src\\routers.js":"40","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js":"41","D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js":"42","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ShowInfoSet.js":"43","D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js":"44","D:\\dev\\JS\\taglead_react\\src\\test\\TestFreeTagPutModal.js":"45","D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js":"46","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js":"47","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumnList.js":"48","D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js":"49","D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js":"50","D:\\dev\\JS\\taglead_react\\src\\lib\\ServiceConfig.js":"51","D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js":"52","D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js":"53","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js":"54","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\SummaryMemo.js":"55","D:\\dev\\JS\\taglead_react\\src\\test\\TestLoading.js":"56","D:\\dev\\JS\\taglead_react\\src\\index.js":"57","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js":"58","D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js":"59","D:\\dev\\JS\\taglead_react\\src\\pages\\FirstLoginEndPage.js":"60"},{"size":629,"mtime":1608112287878,"results":"61","hashOfConfig":"62"},{"size":831,"mtime":1630241866793,"results":"63","hashOfConfig":"62"},{"size":13422,"mtime":1638967591335,"results":"64","hashOfConfig":"62"},{"size":2726,"mtime":1639490519256,"results":"65","hashOfConfig":"62"},{"size":8232,"mtime":1639749906571,"results":"66","hashOfConfig":"62"},{"size":3963,"mtime":1637327798651,"results":"67","hashOfConfig":"62"},{"size":1206,"mtime":1639922966640,"results":"68","hashOfConfig":"62"},{"size":1347,"mtime":1639922009466,"results":"69","hashOfConfig":"62"},{"size":657,"mtime":1635512955730,"results":"70","hashOfConfig":"62"},{"size":736,"mtime":1635513014440,"results":"71","hashOfConfig":"62"},{"size":1128,"mtime":1636015857034,"results":"72","hashOfConfig":"62"},{"size":4179,"mtime":1639889585286,"results":"73","hashOfConfig":"62"},{"size":1949,"mtime":1638882178426,"results":"74","hashOfConfig":"62"},{"size":13138,"mtime":1638802419612,"results":"75","hashOfConfig":"62"},{"size":4133,"mtime":1626508415759,"results":"76","hashOfConfig":"62"},{"size":608,"mtime":1608113414217,"results":"77","hashOfConfig":"62"},{"size":1418,"mtime":1635551732984,"results":"78","hashOfConfig":"62"},{"size":543,"mtime":1638802353262,"results":"79","hashOfConfig":"62"},{"size":1983,"mtime":1635768204681,"results":"80","hashOfConfig":"62"},{"size":362,"mtime":1608110817498,"results":"81","hashOfConfig":"82"},{"size":3576,"mtime":1638966235429,"results":"83","hashOfConfig":"62"},{"size":2204,"mtime":1638778006318,"results":"84","hashOfConfig":"62"},{"size":2826,"mtime":1633508682534,"results":"85","hashOfConfig":"82"},{"size":11893,"mtime":1639643870811,"results":"86","hashOfConfig":"62"},{"size":1390,"mtime":1639888983249,"results":"87","hashOfConfig":"62"},{"size":2664,"mtime":1639749987847,"results":"88","hashOfConfig":"62"},{"size":5724,"mtime":1636896525951,"results":"89","hashOfConfig":"62"},{"size":2093,"mtime":1638080443908,"results":"90","hashOfConfig":"62"},{"size":7582,"mtime":1638777272633,"results":"91","hashOfConfig":"62"},{"size":4023,"mtime":1637238377007,"results":"92","hashOfConfig":"62"},{"size":1764,"mtime":1626698918356,"results":"93","hashOfConfig":"82"},{"size":2107,"mtime":1638801993972,"results":"94","hashOfConfig":"62"},{"size":742,"mtime":1636015804423,"results":"95","hashOfConfig":"62"},{"size":865,"mtime":1635283732731,"results":"96","hashOfConfig":"62"},{"size":1761,"mtime":1624076656491,"results":"97","hashOfConfig":"62"},{"size":5578,"mtime":1638778749416,"results":"98","hashOfConfig":"62"},{"size":3037,"mtime":1638779013292,"results":"99","hashOfConfig":"62"},{"size":694,"mtime":1633504141508,"results":"100","hashOfConfig":"62"},{"size":2673,"mtime":1638777506163,"results":"101","hashOfConfig":"62"},{"size":2523,"mtime":1639889058039,"results":"102","hashOfConfig":"62"},{"size":9357,"mtime":1638777368385,"results":"103","hashOfConfig":"62"},{"size":3611,"mtime":1638777324928,"results":"104","hashOfConfig":"62"},{"size":807,"mtime":1630855281762,"results":"105","hashOfConfig":"62"},{"size":697,"mtime":1633426374627,"results":"106","hashOfConfig":"62"},{"size":851,"mtime":1633508725140,"results":"107","hashOfConfig":"62"},{"size":890,"mtime":1637042313118,"results":"108","hashOfConfig":"62"},{"size":5591,"mtime":1639922990839,"results":"109","hashOfConfig":"62"},{"size":2013,"mtime":1638948694336,"results":"110","hashOfConfig":"62"},{"size":381,"mtime":1608118434578,"results":"111","hashOfConfig":"62"},{"size":1587,"mtime":1634390355401,"results":"112","hashOfConfig":"62"},{"size":121,"mtime":1639231880524,"results":"113","hashOfConfig":"62"},{"size":1056,"mtime":1637328471555,"results":"114","hashOfConfig":"62"},{"size":2952,"mtime":1638953185422,"results":"115","hashOfConfig":"62"},{"size":2341,"mtime":1638777257314,"results":"116","hashOfConfig":"62"},{"size":1145,"mtime":1630328918497,"results":"117","hashOfConfig":"62"},{"size":1090,"mtime":1633677651670,"results":"118","hashOfConfig":"82"},{"size":781,"mtime":1639895698680,"results":"119","hashOfConfig":"62"},{"size":1782,"mtime":1630108056249,"results":"120","hashOfConfig":"62"},{"size":1101,"mtime":1638187297824,"results":"121","hashOfConfig":"62"},{"size":1194,"mtime":1639895158016,"results":"122","hashOfConfig":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"m51bgq",{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"148"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"1j3t54r",{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"129"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"174"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"129"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"211"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"216"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"129"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"129"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\JS\\taglead_react\\src\\store\\index.js",[],["277","278"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js",["279","280","281","282"],"import { TAG_TEXT_INPUT } from \"../../lib/TagTypeNames\";\r\n\r\nimport React  from 'react';\r\nimport {useSelector } from 'react-redux';\r\n\r\nconst TagText=({tagtextarray})=>{\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n\r\n    let ss=\"\";\r\n\r\n    return tagtextarray.split(\",\").map((d)=>{\r\n\r\n        if (d.includes(\":\")){\r\n            const sd=d.split(\":\");\r\n            const tagname=tag_list.find(el=> el.id==sd[0]);\r\n            if( !tagname ) return  (<span> タグ不明 {d} :</span>)\r\n            \r\n            return tagname.strTagName+\":\"+sd[1];\r\n        }\r\n\r\n        const tagname=tag_list.find(el=> el.id==d );\r\n        //console.log(tagname);\r\n        if( !tagname ) return  <span> タグ不明 {d} :</span>\r\n\r\n        return  <span>{tagname.strTagName} :</span> \r\n    });\r\n};\r\n\r\nexport default  TagText;",["283","284"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js",["285","286"],"D:\\dev\\JS\\taglead_react\\src\\actions\\index.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js",["287"],"D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js",["288"],"D:\\dev\\JS\\taglead_react\\src\\pages\\SingleButtonPage.js",["289","290","291","292"],"D:\\dev\\JS\\taglead_react\\src\\pages\\LogoutPage.js",[],["293","294"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js",["295"],"import React, {useEffect} from 'react';\r\nimport {useSelector}  from 'react-redux';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport TagSearchList from \"../components/TagSearchList\";\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n//テスト表示用\r\n\r\n\r\n//メインページの画面メイン\r\nconst TaggedSearchPage=(props)=>{\r\n\r\n    //const tag_list=useSelector(state=>state.auth_login.all_tag,[]);\r\n    \r\n    useEffect(() => {        \r\n        APICallController.setView(\"tag\");\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\" >\r\n            <TagSearchList />\r\n            <CirculerLoading isModal={false} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  TaggedSearchPage;",["296","297"],"D:\\dev\\JS\\taglead_react\\src\\pages\\ErrorPage.js",["298","299"],"import { Button } from '@material-ui/core';\r\nimport React ,{ useState,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { LogOutButton } from '../components/parts/AuthButtons';\r\nimport {Card} from \"@material-ui/core\";\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst ErrorPage=(props)=>{\r\n\r\n    const error=useSelector(state=>state.error_control);\r\n    const [errorCode,setErrorCode] =useState(\"\");\r\n    const [errorMsg,setErrorMsg] =useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setErrorCode(error.errorCode);\r\n        setErrorMsg(error.errorMsg);\r\n        \r\n    }, [error]);\r\n\r\n    const Content=()=>{\r\n        return(\r\n            <div>\r\n                <div> エラーが発生しました。　一度ログアウトしてください。</div>\r\n                <div>状況： {errorMsg}</div>\r\n                <div>コード:　{errorCode}</div>\r\n            </div>\r\n    )};\r\n    \r\n    return (\r\n        <SingleButtonPage\r\n            Content={Content()}\r\n            ButtonAction={<LogOutButton/>}\r\n            Footer={<div/>}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default  ErrorPage;\r\n","D:\\dev\\JS\\taglead_react\\src\\PageBase.js",["300","301"],"D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js",[],["302","303"],"D:\\dev\\JS\\taglead_react\\src\\components\\FormedTagPutModal.js",["304","305"],"import {useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Button,TextField, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewFormedMemo} from '../actions';\r\n\r\nimport {TAG_DATE_INPUT,\r\n        TAG_NUMBER_INPUT, \r\n        TAG_TEXT_INPUT,\r\n        TAG_TIME_INPUT,\r\n        TAG_MULTILINE_INPUT\r\n    } from  '../lib/TagTypeNames';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left-end',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n      \r\n    modal:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      \r\n    },\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        borderRadius:\"10px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\n\r\n\r\nconst FormedTagPutModal=(props)=>{\r\n\r\n    const classes=useStyles();\r\n    //今まで設定したタグ\r\n\r\n    //現在選択中のタグ\r\n    const [selected,setSelected]=useState([]);\r\n    //最後以外の選択中のタグ\r\n    const [defs,setDefs]=useState([]);\r\n    //最後のタグ\r\n    const [lastOne,setLastOne]= useState({});\r\n\r\n    const textRef=useRef(null);\r\n    const textRefMain=useRef(null);\r\n    const tag_source=useSelector(state=>state.auth_login.formatted);\r\n    const [tagArray,setTagArray]=useState([]);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(()=>{\r\n        searchTagArray();\r\n    },[selected,tag_source]);\r\n\r\n    //Setを利用した積集合作成関数\r\n    const  intersection = (setA, setB)=> {\r\n        let _intersection = new Set();\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem);\r\n            }\r\n        }\r\n        return _intersection;\r\n    };\r\n\r\n\r\n    const searchTagArray=()=>{\r\n        if(!tag_source || tag_source.length===0) return;\r\n        \r\n        //現在取得しているリストをSetに変換、比較に使う\r\n        const nowTag=new Set(selected.map((d)=>{return d.keyTagMain.id;}));\r\n\r\n        const nowGroup=new Set(selected.map((d)=>{return d.strGroup;}));\r\n\r\n        const newTagArray=[];\r\n        let phaseNow=selected.reduce((acc,value)=>(acc<value.numTagPhase ? value.numTagPhase : acc),0);\r\n\r\n        const showArray=(str)=>{\r\n            const s=str.split(\",\")\r\n            if (s===[]) return [];\r\n            return s.map((d)=>parseInt(d));\r\n        }\r\n  \r\n        tag_source.forEach(element => {\r\n            //要素のdelに現在\r\n            let showFlg=false;\r\n            //新規タグの表示条件に選択中のタグが入っていたら表示候補にする\r\n            const hasEl=new Set(showArray(element.strShow));\r\n            if(intersection(hasEl,nowTag).size>0)  showFlg=true;\r\n\r\n            //自分自身がすでに選択されていたら候補に入れない\r\n            if(nowTag.has(element.id))  showFlg=false;  \r\n            //すでにグループの項目が設定されていたら候補に入れない\r\n            if(element.strGroup && nowGroup.has(element.strGroup)){\r\n                showFlg=false;\r\n            }               \r\n\r\n            //表示条件に該当したら選択候補に追加する\r\n            if(showFlg) newTagArray.push(element);\r\n        \r\n        });\r\n\r\n        //選択候補があったらそのまま選択候補を表示に回す\r\n        if(newTagArray.length>0){\r\n            setTagArray(newTagArray);\r\n            return;    \r\n        }\r\n        \r\n        //選択肢がなかった場合、一度Phaseを上げて再度探してみる\r\n        phaseNow+=1;\r\n        //この際はフェーズが合えば非表示でなければすべて表示する\r\n        tag_source.forEach(element => {\r\n            if(element.numTagPhase===phaseNow){\r\n                const delEl=new Set(element.del);    \r\n                if(intersection(delEl,nowTag).size===0) newTagArray.push(element);\r\n            }\r\n\r\n        });\r\n        setTagArray(newTagArray);\r\n    };\r\n\r\n    //selectedの新規内容をstateの書く場所に設置する\r\n    const putSelectedInPlace=(data)=>{\r\n        const ss=Object.assign([],data);\r\n        setSelected(data);\r\n        if (data.length===0){\r\n            setDefs([]);\r\n            setLastOne({});\r\n            return;\r\n        }\r\n        const la=ss.pop();\r\n        setDefs(ss);\r\n        setLastOne(la);\r\n\r\n    };\r\n\r\n\r\n    const onClick=(data)=>{\r\n        let nowselected=[...selected,data];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDelete=()=>{\r\n        let nowselected=Object.assign([],selected);\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDecide=(data,txt)=>{\r\n        let copy=Object.assign({},data);\r\n        //console.log(\"copy\",copy);\r\n        copy.keyTagMain.strTagName=copy.keyTagMain.strTagName+\":\"+txt;\r\n        let nowselected=[...selected,copy];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const sendAction=(text)=>{\r\n        const restagarray=selected.map((d)=>{\r\n            if (d.keyTagMain.strTagName.includes(\":\")){\r\n                const st=d.keyTagMain.strTagName.replace(/.+\\:/, \":\");\r\n                return d.keyTagMain.id+st; \r\n            }else{\r\n                return d.keyTagMain.id;\r\n            }\r\n        });\r\n\r\n        //console.log(\"restagarray\",restagarray);\r\n        dispatch(pushNewFormedMemo(restagarray.join(\",\"),text));\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n    }\r\n\r\n    const onEnd=(text)=>{\r\n        //console.log(\" ここで終わり　処理をDispatchする \");\r\n        sendAction(text);\r\n        closeAction();\r\n        \r\n        props.onClose();\r\n    };\r\n    \r\n    const onContinue=(text)=>{\r\n        sendAction(text);\r\n        closeAction();    };\r\n\r\n    const handleClose=()=>{\r\n        closeAction();\r\n        props.onClose();\r\n    }\r\n\r\n\r\n    const TagButton=(data)=>{\r\n       return (\r\n            <Chip    \r\n                variant={selected.some((el)=>el===data) ? 'outlined': 'default' }\r\n                color={ secondarySet.includes(data.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(data.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        \r\n                label={data.keyTagMain.strTagName}\r\n                clickable\r\n                onClick={(e)=>onClick(data)}\r\n            />\r\n\r\n       )\r\n    };\r\n\r\n    //複数行入力のテキストボックスが分岐で作成できなかったので別関数にする\r\n    const multilineText=(data)=>{\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n                    type={\"text\"}\r\n                    multiline\r\n                    rows= {4} \r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={\"\"}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CheckSpecialTag=(data)=>{\r\n        let inputType=\"none\";\r\n        let defaultValue=\"none\";\r\n        \r\n        const date=new Date();\r\n        switch (data.keyTagMain.numTagType){\r\n            case TAG_NUMBER_INPUT:\r\n                inputType=\"number\";\r\n                defaultValue=0;\r\n                break;\r\n            case TAG_TEXT_INPUT:\r\n                inputType=\"text\";\r\n                defaultValue=\"\";\r\n                break;\r\n        \r\n            case TAG_MULTILINE_INPUT:\r\n                return multilineText(data);\r\n\r\n            case TAG_DATE_INPUT:\r\n                inputType=\"date\";\r\n                defaultValue=date.getFullYear()+\"-\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"-\"+(\"0\"+date.getDate()).slice(-2);\r\n                break;\r\n\r\n            case TAG_TIME_INPUT:\r\n                \r\n                inputType=\"time\";\r\n                defaultValue=(\"0\"+(date.getHours())).slice(-2)+\":\"+(\"0\"+date.getMinutes()).slice(-2);\r\n                break;\r\n            default :\r\n                return (\r\n                    TagButton(data)\r\n                );\r\n        }\r\n\r\n\r\n        //MULTILINE以外は納めることが出来るのでまとめておく\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n\r\n                    type={inputType}\r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={defaultValue}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    const secondarySet=[1]\r\n    const primarySet=[2,3,4,11]\r\n\r\n    return (\r\n        <Modal\r\n\r\n            className={classes.modal}\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n        >\r\n            <div className={classes.paper}>\r\n            \r\n            <div className={classes.root}>\r\n                <div><Typography variant='h6' >簡単情報入力フォーム</Typography> </div>\r\n                <hr/>\r\n                <div>\r\n                {defs.length>0 ?\r\n                    defs.map((d)=>{\r\n                        \r\n                    //console.log(d);\r\n                        return (\r\n                            <Chip    \r\n                                variant='default' \r\n                                color={ secondarySet.includes(d.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　d.keyTagMain.numTagType) ? \"primary\" : \"default\" }\r\n                                label={d.keyTagMain.strTagName}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                    <div/>\r\n                }\r\n                </div>\r\n                { Object.keys(lastOne).length>0 ?    \r\n                    <Chip    \r\n                        variant='outlined'\r\n                        color={ secondarySet.includes(lastOne.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　lastOne.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        label={lastOne.keyTagMain.strTagName}\r\n                        clickable\r\n                        onClick={(e)=>onDelete(lastOne)}\r\n                    />\r\n                    :\r\n                    \r\n                    <div>登録内容を選択してください</div>\r\n\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className={classes.root}>\r\n\r\n            {\r\n            tagArray.length===1 ?\r\n                \r\n                CheckSpecialTag(tagArray[0])\r\n            :tagArray.length>0 ?\r\n                tagArray.map((d)=>{\r\n                    return (\r\n                        TagButton(d)    \r\n                    )\r\n                })\r\n            :\r\n                // 次への選択肢が一切なくなったら\r\n                <div>\r\n                    <div>\r\n                        {/* 最後に文章を書けるようにしておく */}\r\n                        <TextField\r\n                        //id=\"standard-number\"\r\n                        inputRef={textRefMain}\r\n                        className={classes.textField}\r\n\r\n                        label=\"補足\"\r\n                        placeholder=\"特に書くことがなければ登録ボタンを押してください\"\r\n                        InputLabelProps={{\r\n                            shrink: true, }}\r\n                        //onChange={(e)=>onInput(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n\r\n\r\n                        <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onEnd(textRefMain.current.value)}>登録</Button>\r\n                        <Button size={\"small\"} variant='contained' color=\"secondary\" onClick={()=>onContinue()}>さらに登録</Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default FormedTagPutModal;","D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js",["306"],"import React from 'react';\r\nimport {throttle} from 'lodash';\r\n\r\nexport const ScrollUpdater=(props)=>{\r\n\r\n    //実行関数　setNewTimeLine\r\n\r\n    //監視パラメータ　timeline\r\n    \r\n\r\n    const checkInEnd=throttle(() => {\r\n        const m1=Math.round(window.innerHeight + document.documentElement.scrollTop);\r\n        const m2=Math.round(document.documentElement.scrollHeight);\r\n        //console.log(\"m1 \",m1,\"m2 \",m2);\r\n\r\n        if (\r\n            //ブラウザによってずれが起きるためトリガーに少しだけ範囲を作る\r\n            Math.abs(m1-m2)>5\r\n        ) {\r\n            return;\r\n        }\r\n        if (!props.endflg)  props.scrollFunc();\r\n    \r\n        }, 200\r\n    );\r\n    \r\n    \r\n    React.useEffect(()=>{\r\n        //画面を切り替えたらとりあえずトップに戻す\r\n        document.documentElement.scrollTop=0;\r\n        props.scrollFunc();\r\n    },[]);\r\n    \r\n    React.useEffect(() => {\r\n        \r\n        window.removeEventListener('scroll', checkInEnd);\r\n        window.addEventListener('scroll', checkInEnd);\r\n        \r\n    \r\n        return () => {\r\n        window.removeEventListener('scroll', checkInEnd);\r\n        \r\n        };\r\n        //propsの中身は随時更新しないと同じ初期値を使いまわすことになる\r\n    }, [props.checkParam]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return (\r\n        <div/>\r\n    )\r\n\r\n}\r\n\r\n",["307","308"],"D:\\dev\\JS\\taglead_react\\src\\components\\FeedbackSnackBar.js",["309"],"import {useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport  {useSnackbar} from 'notistack';\r\n\r\n\r\nconst FeedbackSnackbar=()=> {\r\n\r\n    const {enqueueSnackbar}= useSnackbar();\r\n    const snacklist=useSelector(state=>state.notice_main.snack);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"SNACK!!\");\r\n        if(snacklist.length>0){\r\n           enqueueSnackbar(snacklist.slice(-1)[0],{ variant: 'info',autoHideDuration:1000});\r\n        }\r\n    }, [snacklist]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default FeedbackSnackbar;","D:\\dev\\JS\\taglead_react\\src\\components\\SideDrawer.js",["310","311","312","313","314","315","316","317","318","319","320","321"],"import React,{useEffect,useState} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SideMenu from './SideMenu';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Drawer  from '@material-ui/core/Drawer';\r\nimport {OPEN_PASSWORD}  from '../lib/ActionTypeString';\r\nimport {LogOutButton} from './parts/AuthButtons';\r\n\r\n\r\nconst drawerWidth=240;\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n  \r\n  \r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideDrawer=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n\r\n    //console.log(\" props.ismobile in drawer\",props.isMobile);\r\n\r\n    return (\r\n        <Drawer \r\n          anchor={\"left\"}\r\n          width={200}          \r\n          variant={ props.mobile ? \"temporary\" :\"permanent\" }\r\n          open={props.open} \r\n          onClose={props.onClose}\r\n          >\r\n            {props.mobile &&\r\n              <IconButton onClick={()=>props.onClose()} ><ArrowBackIcon/></IconButton>\r\n            }\r\n            <SideMenu  onClose={ props.mobile &&  props.onClose }/>\r\n      </Drawer>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideDrawer;\r\n        ",["322","323"],"D:\\dev\\JS\\taglead_react\\src\\reportWebVitals.js",[],["324","325"],"D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js",["326","327"],"import React, {useEffect} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport  {getReplyData} from '../actions';\r\nimport ReplyColumnList  from '../components/ReplyColumnList';\r\nimport ReplyColumn from '../components/ReplyColumns';\r\nimport MemoColumn from '../components/MemoColumn';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst ReplyThreadPage=(props)=>{\r\n    const reply_main=useSelector(state=>state.reply_main);\r\n    console.log(\"reply_main\",reply_main);\r\n    const dispatch=useDispatch();\r\n\r\n    const classes=listStyles();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getReplyData(props.match.params.id));\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"reply_main\",reply_main);\r\n        \r\n    }, [reply_main]);\r\n\r\n    const normalSceane=()=>{\r\n        return (\r\n            <div >\r\n                \r\n                {reply_main.past_thread.length!==0 ?\r\n                　　<div>\r\n                        <div> 過去の履歴 <div/>\r\n                        <ReplyColumnList   \r\n                            data={ reply_main.past_thread } \r\n                            fav={ reply_main.fav}  \r\n                            read={reply_main.read}  \r\n                            boxstyle={\"thread\"} \r\n                            mark={\"a\"} /></div></div> \r\n                    :\r\n                     <div/> \r\n                }\r\n    \r\n                {Object.keys(reply_main.parent_data).length!==0 ? \r\n                     <div><div> 直近の応答</div><ReplyColumn  data={ reply_main.parent_data } mark={\"b\"}/></div> \r\n                :\r\n                     <div/> \r\n                }\r\n                <div>\r\n                    <MemoColumn data={reply_main.self_data } fav={ reply_main.fav} read={reply_main.read} rep={true} mark={\"e\"} />\r\n                </div>\r\n                {reply_main.child_data.length!==0 ?\r\n                    <div>\r\n                        <div> 関連する応答 </div>\r\n                        <div>\r\n                            <ReplyColumnList   \r\n                                data={ reply_main.child_data } \r\n                                fav={ reply_main.fav}  \r\n                                read={reply_main.read}                              \r\n                                boxstyle={\"thread\"} \r\n                                mark={\"c\"}/>\r\n                        </div>\r\n                    </div> \r\n                    : <div/> \r\n                }\r\n                {reply_main.future_thread.length!==0 ?\r\n                    <div>\r\n                        <div> その後の履歴 </div>\r\n                        <div>\r\n                            <ReplyColumnList   \r\n                                data={ reply_main.future_thread } \r\n                                fav={ reply_main.fav}  \r\n                                read={reply_main.read}                              \r\n                                boxstyle={\"thread\"} \r\n                                mark={\"c\"}/>\r\n                        </div>\r\n                    </div> \r\n                    : <div/> \r\n                }\r\n\r\n\r\n            </div>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        reply_main.load_flg ? normalSceane() :<LinearProgress/> \r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default  ReplyThreadPage;","D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js",["328"],"D:\\dev\\JS\\taglead_react\\src\\test\\TestTagPutModal.js",["329"],"import React,{useEffect,useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Button} from '@material-ui/core'\r\nimport FormedTagPutModal from '../components/FormedTagPutModal';\r\n//import {tag_start} from '../actions';\r\n\r\nexport const TestTagPutModal=(props)=>{\r\n    const dispatch = useDispatch();\r\n    \r\n    const [open,setOpen] =useState(false);\r\n\r\n\r\n    const TagData=[\r\n        {id:1,type:1,name:\"7番街\",phase:1,　group:\"unit\",  show:[],del:[] },\r\n        {id:2,type:1,name:\"1番街\",phase:1, 　group:\"unit\", show:[],del:[] },\r\n\r\n        {id:42,type:1,name:\"長谷川\",phase:-1,　group:\"user\", show:[1],del:[] },\r\n        {id:43,type:1,name:\"山上\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:54,type:1,name:\"山本\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:66,type:1,name:\"小林\" ,phase:-1, 　group:\"user\",show:[2],del:[] },\r\n        {id:102,type:14,name:\"登録時間\" , phase:-1,show:[42,43],del:[] },\r\n        \r\n\r\n        {id:8,type:2,name:\"排泄\"  , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:10,type:2,name:\"入浴\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:11,type:2,name:\"食事\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:12,type:2,name:\"自力\" , group:\"meel_style\", phase:-1,show:[11],del:[13]},\r\n        {id:13,type:2,name:\"介助\" ,group:\"meel_style\",phase:-1,show:[11],del:[12]},\r\n        \r\n        {id:15,type:2,name:\"徘徊\" ,group:\"action\",phase:2,show:[],del:[8,10,11]},\r\n        {id:19,type:3,name:\"少し\" , group:\"meel_amount\", phase:-1,show:[12,13],del:[20,21]},\r\n        {id:20,type:3,name:\"半分\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,21]},\r\n        {id:21,type:3,name:\"全て\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,20]},\r\n        {id:34,type:3,name:\"シャワー\",  group:\"bath_style\",phase:-1,show:[10],del:[46]},\r\n        {id:46,type:3,name:\"洗身\", group:\"bath_style\", phase:-1,show:[10],del:[34]},\r\n        {id:70,type:2,name:\"バイタル\", group:\"action\", phase:2,show:[],del:[8,10,11,15]},\r\n        {id:71,type:2,name:\"血圧\", group:\"bytal_type\", phase:-1,show:[70],del:[72]},\r\n        {id:72,type:2,name:\"脈拍\",  group:\"bytal_type\", phase:-1,show:[70],del:[71]},\r\n        \r\n        {id:73,type:11,name:\"最高\",phase:-1,show:[71],del:[]},\r\n        {id:74,type:11,name:\"最低\",phase:-1,show:[73],del:[]},\r\n    ];\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n    //    dispatch(tag_start());\r\n        \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>setOpen(true)}>開く</Button>\r\n            \r\n            <hr/>\r\n                <FormedTagPutModal data={TagData} open={open} onClose={()=>setOpen(false)} />\r\n\r\n            \r\n            <hr/>   \r\n        </div>\r\n    )\r\n\r\n}",["330","331"],"D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js",["332","333","334","335","336","337"],"D:\\dev\\JS\\taglead_react\\src\\App.js",["338","339"],"D:\\dev\\JS\\taglead_react\\src\\lib\\ActionTypeString.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\TagInputList.js",["340","341","342"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js",["343","344"],"D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumns.js",["345","346","347"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\nimport  {useSelector} from 'react-redux'\r\nimport {Collapse,IconButton,Box}  from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\n\r\n\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport  {getDateMessage,getUserName} from  '../lib/UtilityLibrary';\r\n\r\n//重要\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoSub:{            \r\n        width: '80%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoChild:{            \r\n        width: '85%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n    memoParent:{            \r\n        width: '85%',\r\n        //right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #555555',\r\n      },\r\n\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n\r\n\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n        \r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",\r\n        \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    textarea:{\r\n       // width:\"100%\",\r\n       // height:100\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst ReplyColumn=({data,boxstyle,mark})=>{\r\n    const TEXT_LIMIT=40;\r\n    const dd=data;\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        //if (typeof txt ===\"undefined\") console.log(\"txt undefined \");\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    const classes=useStyles();\r\n    //const [maintext,setMainText] =useState(setHeaderText(dd.strMainText));\r\n    const [maintext,setMainText] =useState(dd.strMainText);\r\n\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n    const tag_list = useSelector(state => state.auth_login.all_tag,[]);\r\n    const hasRead=useSelector(state=>state.memo_main.read);\r\n    const favorite=useSelector(state=>state.memo_main.fav);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [hasStar, setHasStar] = useState(favorite.includes(data.id));\r\n    const [read, setRead] = useState(hasRead.includes(data.id));\r\n    const [bstyle,setBoxStyle]=useState(classes.memo);\r\n\r\n    const checkText=(exp)=>{\r\n        if(exp){\r\n            setMainText(dd.strMainText);\r\n        }else{\r\n            setMainText(setHeaderText(dd.strMainText) );\r\n        }\r\n    }\r\n\r\n    const onExpanded=()=>{\r\n        // if(!expanded){\r\n        //     setMainText(dd.strMainText);\r\n        // }else{\r\n        //     setMainText(setHeaderText(dd.strMainText) );\r\n        // }\r\n        checkText(!expanded);\r\n\r\n        setExpanded(!expanded);\r\n\r\n    };\r\n\r\n    const onStarClick=()=>{\r\n        setHasStar(!hasStar);\r\n        //後はidとstar情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!read);\r\n        //後はidとread情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const getNames=(arr)=>{\r\n        const ars=String(arr).split(\",\");\r\n        const names=ars.map((d)=>{\r\n           const tg=user_list.find((el)=>el.id===parseInt(d))\r\n           return tg.strName;\r\n        })\r\n        \r\n        return names.reduce((acc,value)=>acc+\",\"+value)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //setMainText(dd.strMainText);\r\n       // setMainText(setHeaderText(dd.strMainText) );\r\n       checkText(expanded);\r\n        switch(boxstyle){\r\n            case \"thread\":\r\n                 setBoxStyle(classes.memoSub);\r\n                break;\r\n            case \"parent\":\r\n\r\n                setBoxStyle(classes.memoParent);\r\n                break;\r\n            \r\n            case \"child\" :\r\n                setBoxStyle(classes.memoChild);\r\n                break;\r\n            default:\r\n                setBoxStyle(classes.memo);\r\n                break;\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box  className={bstyle}>\r\n                    <div className={classes.ulbutton} >\r\n                        <span className={classes.headertext}>\r\n                        <div> { getDateMessage(data.datePublish) }</div> <div>{getNames(data.keySender)}より </div> \r\n                        </span>\r\n                        <span className={classes.icons}>\r\n                            <IconButton onClick={onStarClick}>\r\n                                {hasStar ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                            </IconButton>\r\n                            \r\n                        </ span>\r\n                      \r\n                        <span className={classes.icons} >\r\n                            <IconButton onClick={onReadClick} >\r\n                                {read ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                            </IconButton>\r\n                        \r\n                        </span>\r\n\r\n                        <div className={classes.icons} >\r\n                                <IconButton onClick={onExpanded} >\r\n                                    {expanded ? ( <ExpandLessIcon/> ):( <ExpandMoreIcon/> )}\r\n                                </IconButton>    \r\n                            </div>\r\n                          \r\n    \r\n                    </div>\r\n                          \r\n                    <Collapse in={expanded} collapsedHeight={30}> \r\n                        <div onClick={onExpanded} className={classes.ulbutton}>\r\n                            <div className={classes.textarea}>{maintext}</div>\r\n                            \r\n                        </div>\r\n                        <div className={classes.ulbutton} >\r\n                            <div>\r\n                                <IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} ><ReplyTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" ize=\"small\" color=\"inherit\"  ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" size=\"small\" color=\"inherit\"  ><DeleteOutlinedIcon size=\"small\"/></IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n     \r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ReplyColumn;","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js",["348","349","350","351","352","353","354","355","356","357","358"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TYPE_TAG_GUEST,TYPE_TAG_MENBER} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport {loadUserConfig,changeUserConfig,resetUserConfig} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nexport const UserTagConfigColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.tag_list);\r\n    const [status,setStatus]=useState(props.data.numTagStatus);\r\n    const [isShow,setIsShow]=useState(props.data.boolIsShownInList);\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n    const onChangeTabSearch=(e,id)=>{\r\n        //変更はSnackBarのみで知らせる\r\n        const stnow=e.target.value;\r\n\r\n        setStatus(stnow);\r\n        dispatch(changeUserConfig(id,stnow,isShow));\r\n\r\n\r\n    };\r\n\r\n    const onChangeListView=(id)=>{\r\n        setIsShow(!isShow);        \r\n        dispatch(changeUserConfig(id,status,!isShow));\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div  >\r\n        <span> <GetTagName id={props.data.keyTag}/> </span>\r\n        <span>\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                value={status}\r\n                onChange={(e)=>onChangeTabSearch(e,props.data.keyTag)}\r\n                name=\"status\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option　defaultChecked value=\"1\">メインリスト</option>\r\n                    <option value=\"2\">サブリスト</option>\r\n                    <option value=\"-1\">検索のみ</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n\r\n        </span>\r\n        <span>\r\n          <FormControlLabel\r\n                control={\r\n                <Checkbox\r\n                    checked={isShow}\r\n                    onChange={(e)=>onChangeListView(props.data.keyTag)}\r\n                    //name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n                }\r\n                label=\"一覧表示\"\r\n            />\r\n          </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst UserTagConfigList=()=>{\r\n    \r\n\r\n    const uConfigList=useSelector(state=>state.auth_login.user_config,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n    const classes=useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserConfig());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get config change\");\r\n    }, [uConfigList]);\r\n\r\n    const onResetClick=()=>{\r\n        dispatch(resetUserConfig()); \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button \r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    onClick={onResetClick} \r\n                    >全タグリセット</Button>\r\n            </div>\r\n\r\n        {uConfigList.length>0 &&\r\n            uConfigList.map((d)=>{\r\n                return ( <UserTagConfigColumn\r\n                    data={d}/>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagConfigList;\r\n","D:\\dev\\JS\\taglead_react\\src\\test\\TestMemoColumn.js",[],["359","360"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js",["361","362","363","364"],"D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js",["365","366","367","368","369","370"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagConfigList from '../components/UserTagConfigList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst UserConfigListPage=(props)=>{\r\n    \r\n    const classes=listStyles();\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagConfigList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  UserConfigListPage;",["371","372"],"D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js",["373","374","375"],"D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js",[],["376","377"],"D:\\dev\\JS\\taglead_react\\src\\components\\FreeTagInputModal.js",["378","379","380"],"import {useState,useEffect,useRef} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Modal,\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewMemo,setReplyData} from '../actions';\r\nimport {getTimeStampNow,checkHasContent} from '../lib/UtilityLibrary';\r\nimport TagInputList from './TagInputList';\r\nimport SummaryMemo from './parts/SummaryMemo';\r\nimport { DELETE_NEWFOLLOW_MODAL,DELETE_NEW_REPLY_MODAL } from '../lib/ActionTypeString';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    asummary:{\r\n        borderRadius:5,\r\n        backgroundColor:\"lightblue\",\r\n        borderColor:\"gray\",\r\n        border:\"2px\"\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    \r\n\r\n}));\r\n\r\n\r\nconst FreeTagInputModal=(props)=>{\r\n    \r\n\r\n    const classes=useStyles();\r\n    const [selected,setSelected]=useState([]);\r\n    const [end,setEnd]=useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    const[hasTime,setHasTime ]=useState(false);\r\n    const [registTime,setRegistTime]=useState(\"\");\r\n    const [canSubmit,setCanSubmit]=useState(false);\r\n    const [mainText,setMainText]=useState(\"\");\r\n    const textRef=useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if ( selected.length===0||mainText.length===0 || (hasTime && registTime===\"\") ){\r\n            setCanSubmit(false);\r\n        }else{\r\n            setCanSubmit(true);\r\n        }\r\n    });\r\n\r\n    const inputCheck=(text)=>{\r\n        setMainText(text);\r\n    };\r\n\r\n    const onSubmit=(text)=>{\r\n        const tagArray= selected.map((d)=>d.id);\r\n        let timeS=getTimeStampNow();\r\n        if (hasTime) timeS=registTime;\r\n        console.log(timeS,hasTime);\r\n        let follow=-1;\r\n        if(checkHasContent(props.reply_source)){\r\n\r\n            dispatch(setReplyData(tagArray.join(','),text,timeS,props.reply_source ));\r\n        }else{\r\n            if (checkHasContent(props.follow_data)) follow=props.follow_data.id;\r\n\r\n            dispatch(pushNewMemo(tagArray.join(','),text,timeS,follow ));    \r\n        }\r\n\r\n        //画面けし処理も追加する\r\n        closeAction();\r\n\r\n    };\r\n\r\n    const onClose=()=>{\r\n        closeAction();\r\n    };\r\n\r\n    const setRegistTimeManual=(str)=>{\r\n        console.log(\"time change\"+str);\r\n        setRegistTime(str);\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setRegistTime(\"\");\r\n        setHasTime(false);\r\n        setCanSubmit(false);\r\n        setMainText(\"\");\r\n        props.onClose();\r\n\r\n        if(checkHasContent( props.follow_data )) dispatch({type:DELETE_NEWFOLLOW_MODAL});\r\n        if(checkHasContent(props.reply_source)) dispatch({type:DELETE_NEW_REPLY_MODAL});\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n        \r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={props.open }\r\n            className={classes.modal}\r\n            onClose={()=>onClose()}\r\n            closeAfterTransition\r\n        >\r\n        <Fade in={props.open}>\r\n            \r\n            <Card className={classes.root}>\r\n                { checkHasContent( props.reply_source ) && \r\n                    <div>\r\n                        <SummaryMemo data={props.reply_source}/>\r\n                        <div>下矢印</div>\r\n\r\n                    </div>\r\n                }\r\n                \r\n\r\n                <TagInputList setSelected={setSelected} end={end} />\r\n                { checkHasContent( props.follow_data ) && \r\n                    <div>\r\n                    <div>転送</div>\r\n                    <SummaryMemo data={props.follow_data}/>\r\n                    </div>\r\n                }\r\n                \r\n                <TextField\r\n                    id=\"filled-textarea\"\r\n                    label=\"入力内容\"\r\n                    inputRef={textRef}\r\n                    placeholder=\"タグは1種類以上選択しましょう\"\r\n                    multiline\r\n                    minRows={3}\r\n                    fullWidth\r\n                    onChange={(e)=>inputCheck(e.target.value)}\r\n                />\r\n                <div>\r\n                    <span>\r\n                        <Button color=\"primary\" variant=\"outlined\" onClick={()=>setHasTime(!hasTime)} > \r\n                            {!hasTime ? <span>時刻を入れる</span>  :  <span>時刻は外す</span> }  \r\n                        </Button>\r\n                    </span>\r\n                    {hasTime &&\r\n                        <span> <TextField  className={classes.textField} type=\"datetime-local\" onChange={(e)=> setRegistTimeManual(e.target.value) } /> </span>\r\n\r\n                    }\r\n                    {canSubmit ?\r\n                        <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onSubmit(textRef.current.value)} >投稿</Button> </span>\r\n                        :\r\n                        <span><Button color=\"primary\" variant=\"contained\" disabled  >投稿</Button> </span>\r\n\r\n                    }\r\n                    \r\n                </div>\r\n            </Card>\r\n        </Fade>\r\n        </Modal>\r\n\r\n    )\r\n        \r\n\r\n\r\n\r\n};\r\n\r\nexport default FreeTagInputModal;","D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js",["381"],"import React,{useState} from 'react';\r\nimport {Fab,Popover,Breadcrumbs,Link,Typography}  from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from '../lib/ActionTypeString';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    fabButton:{\r\n        position:\"fixed\",\r\n        bottom:10,\r\n        right:10,\r\n        zIndex:100\r\n\r\n    },\r\n    Iconspace:{\r\n      marginRight:theme.spacing(2),\r\n      marginLeft:theme.spacing(2),\r\n\r\n    }\r\n\r\n\r\n  }));\r\n  \r\n\r\nconst MemoInsertButton=(props)=>{\r\n\r\n    //どこをクリックしても消せるようにしたいのでstateはreduxに振る\r\n    const [bmenu,showMenu]=React.useState(null);\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n\r\n    const onClick=(event)=>{\r\n        showMenu(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuPushEvent =(action,e )=>{\r\n        e.preventDefault();\r\n        setAnchorEl(null);\r\n        \r\n        showMenu(null);\r\n        props.onModalOpen(action);\r\n    };\r\n    const onClose=(event)=>{\r\n        showMenu(null);\r\n        setAnchorEl(null);\r\n    };\r\n   \r\n    const modalIcons=[\r\n      {action: FREE_MODAL_OPEN ,icon: <MailOutlineIcon fontSize=\"large\" />},\r\n      {action: \"dm\" ,icon: <RecordVoiceOverIcon fontSize=\"large\" />},\r\n      {action: FORMED_MODAL_OPEN ,icon: <CreateIcon fontSize=\"large\" />},\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div >\r\n            <Fab \r\n            className={classes.fabButton}\r\n            onClick={onClick}\r\n            color=\"primary\" \r\n            aria-label=\"add\"\r\n            aria-haspopup=\"true\">\r\n                <AddIcon/>\r\n            </Fab>\r\n            <Popover\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                open={Boolean(bmenu)}\r\n                anchorOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'right',\r\n                }}\r\n            >\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                {\r\n                  modalIcons.map((d)=>{\r\n                    return (\r\n                        <Link color=\"inherit\" href=\"/\" onClick={(e)=>menuPushEvent(d.action,e)}>\r\n                          <div className={classes.Iconspace}>{d.icon}</div>\r\n                      </Link>\r\n                    )\r\n                  })\r\n                }\r\n\r\n            </Breadcrumbs>\r\n          </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoInsertButton;\r\n\r\n","D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js",["382","383","384","385","386","387","388"],"D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js",[],"D:\\dev\\JS\\taglead_react\\src\\routers.js",["389","390","391","392"],"D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Collapse,\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    RadioGroup,\r\n    Radio,\r\n    FormControlLabel,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TAG_TYPES,TAG_RANKS} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport { showTagAdmin, makeNewTagByAdmin, modifyTagByAdmin} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\nconst tagRanks={\r\n    1000:\"最重要\",\r\n    100:\"重要\",\r\n    10:\"通常\",\r\n    1:\"表示用(現在利用せず）\"\r\n};\r\n\r\n\r\n\r\n\r\nexport const UserTagAdminColumn=(props)=>{\r\n    const [viewmode,setViewMode]=useState(true);\r\n    \r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [tagName,setTagName]=useState(\"\");\r\n    const [tagRank,setTagRank]=useState(-1);\r\n    const [tagType,setTagType]=useState(-1);\r\n    const [errorMsg,setErrorMsg]=useState(\"\");\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const onSelect=()=>{\r\n        props.onSelect(props.data.id);\r\n        \r\n    };\r\n\r\n    const onColumnCancel=()=>{\r\n        //console.log(\"onCancel Done\",props.data.id);\r\n        //setViewMode(true);\r\n        props.onCancel();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTagName(props.data.strTagName);\r\n        setTagRank(props.data.numTagRank);\r\n        setTagType(props.data.numTagType);\r\n\r\n    }, [props.data]);\r\n\r\n    \r\n    const rank=(tr)=>(TAG_RANKS.find(el=>el.id==tr));\r\n    const type=(tt)=>(TAG_TYPES.find(el=>el.id==tt));\r\n\r\n    const modeView=()=>{\r\n        return (\r\n            <div>\r\n                <span>{props.data.strTagName}</span>\r\n                <span>{rank(tagRank).name}</span>\r\n                <span>{type(tagType).name}</span>\r\n\r\n                <span>\r\n                    <Button onClick={()=>onSelect()}\r\n                        variant='contained'\r\n                        label=\"登録\">編集\r\n                    </Button>\r\n                 </span>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const onSubmit=()=>{\r\n\r\n        if (tagName==\"\"){\r\n            setErrorMsg(\"タグ名がありません\");\r\n            return;\r\n        }\r\n\r\n        if (tagRank==-1 || tagRank==0){\r\n            setErrorMsg(\"タグの重要度が未設定です\"+ String(tagRank));\r\n            return;\r\n        }\r\n\r\n        if (tagType==-1 || tagType==0){\r\n            setErrorMsg(\"タグの種類が未設定です\"+ String(tagType) );\r\n            return;\r\n        }\r\n\r\n        let dispatcher=modifyTagByAdmin;\r\n        if (props.data.id==-1){\r\n            dispatcher=makeNewTagByAdmin;\r\n        }\r\n\r\n        dispatch(dispatcher(\r\n            props.data.id,\r\n            tagName,\r\n            tagRank,\r\n            tagType\r\n        ));\r\n        setErrorMsg(\"\");\r\n    }\r\n\r\n    const modeEdit=()=>{\r\n        return(\r\n            \r\n            <div>\r\n                {errorMsg!=\"\" ?\r\n                    <div>{errorMsg}</div>\r\n                :\r\n                    <div/>\r\n                }\r\n                <div>\r\n                <span>\r\n                    <TextField \r\n                        //label=\"タグ名\"\r\n                        placeholder=\"タグの名称を入力\"\r\n                        onChange={(e)=>setTagName(e.target.value)}\r\n                        defaultValue={tagName}\r\n                        //value={props.data.strTagName}\r\n                        variant=\"outlined\"\r\n                        disabled={false}\r\n                        />\r\n                </span>\r\n                <span>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagRank}\r\n                        defaultValue={tagRank}\r\n                        onChange={(e)=>setTagRank(e.target.value)}\r\n                        name=\"tagrank\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                            {TAG_RANKS.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagType}\r\n                        onChange={(e)=>setTagType(e.target.value)}\r\n                        defaultValue={tagType}\r\n                        name=\"status\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                             {TAG_TYPES.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                            \r\n                        </NativeSelect>\r\n                    </FormControl>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onSubmit}\r\n                    variant='contained'\r\n                    label=\"登録\"\r\n                    >登録</Button>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onColumnCancel}\r\n                    variant='contained'\r\n                    label=\"キャンセル\"\r\n                    >キャンセル</Button>\r\n                </span>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {tagType==-1 ?\r\n            <div/>\r\n        :props.add ?\r\n            modeEdit()\r\n        :props.open ?\r\n            modeEdit()\r\n        :\r\n            modeView()\r\n        }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst UserTagAdminList=()=>{\r\n    //const [funcCancel,setFuncCancel]=useState(null)\r\n    \r\n    const classes=useStyles();\r\n    const tag_list=useSelector(state=>state.tag_admin.tag_list,[]);\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [openid,setOpenId]=useState(-1);\r\n    const [add,setAdd]=useState(false);\r\n\r\n    const changeViewList=(id=4)=>{\r\n        return tag_list.filter(data=>data.numTagType==id)\r\n    };\r\n    const [viewtype,setViewType]=useState(4)\r\n\r\n    const [showArray,setShowArray]=useState(changeViewList());\r\n\r\n\r\n    //const uConfigList=useSelector(state=>state.admin.tag_list,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(showTagAdmin());\r\n        setOpenId(-1);\r\n    }, [changFlg]);\r\n\r\n    const onColumnSelect=(id)=>{\r\n        setAdd(false)\r\n        setOpenId(id);\r\n    };\r\n\r\n    const onCancel=()=>{\r\n        setOpenId(-1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(showArray);\r\n        setShowArray(changeViewList(viewtype));\r\n        setAdd(false);\r\n        \r\n    }, [viewtype,tag_list]);\r\n\r\n    const onAddClick=()=>{\r\n        setAdd(true);\r\n        setOpenId(-1);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button\r\n                    label=\"タグ追加\"\r\n                    onClick={()=>onAddClick()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={add}\r\n                >タグ追加</Button>\r\n            </div>\r\n            <div>\r\n                <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                    row\r\n                    defaultValue={viewtype}\r\n                    >\r\n                    {TAG_TYPES.map((d)=>{\r\n                        return (<FormControlLabel \r\n                            value={d.id}\r\n                            checked={d.id==viewtype}\r\n                            onChange={()=>setViewType(d.id)} \r\n                            control={<Radio />} \r\n                            label={d.name} \r\n                            />)\r\n                        })\r\n                    }                    \r\n                </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            <hr/>\r\n            { add ?\r\n                <UserTagAdminColumn add={true} open={true} onCancel={()=>setAdd(false)} onSelect={onColumnSelect}  \r\n                data={{ id:-1,strTagName:\"\",numTagRank:0,numTagType:viewtype }}/>\r\n                :\r\n                <div/>\r\n            }\r\n        \r\n            {\r\n            showArray.map((d)=>{\r\n                return (\r\n                <UserTagAdminColumn add={false} open={d.id==openid} onCancel={onCancel} onSelect={onColumnSelect}  data={d}/>\r\n            )\r\n        })\r\n\r\n            }\r\n \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagAdminList;\r\n","D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js",["417","418","419","420"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ShowInfoSet.js",["421"],"D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js",["422","423","424","425"],"import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport MainHeader from \"../components/MainHeader\";\r\nimport {  makeStyles } from '@material-ui/core';\r\nimport NoticeList from '../components/NoticeList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst NoticeListPage=(props)=>{\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        \r\n        <div >\r\n            <NoticeList />\r\n        </div> \r\n\r\n    )\r\n}\r\n\r\nexport default  NoticeListPage;","D:\\dev\\JS\\taglead_react\\src\\test\\TestFreeTagPutModal.js",["426"],"D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js",[],["427","428"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js",["429","430","431"],"D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumnList.js",["432","433"],"D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js",["434","435"],"// onLoad問題を再現できるかテスト\r\nimport React from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nconst ButtonSample=(props)=>{\r\n\r\n    const onClick=()=>{\r\n        props.onClick();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <Button onClick={onClick}>押すと屁が出る</Button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonSample;","D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\ServiceConfig.js",[],"D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js",["436","437","438","439"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagAdminList from '../components/UserTagAdminList';\r\nimport { auth_login_success } from '../actions';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst TagAdminListPage=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    \r\n    const classes=listStyles();\r\n    //タグ設定を更新したら初期設定内の更新も行ってしまう\r\n    useEffect(() => {\r\n        dispatch(auth_login_success());\r\n    }, [changFlg]);\r\n\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagAdminList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TagAdminListPage;","D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js",["440","441"],"D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js",["442","443"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState,useEffect} from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport {Box}  from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getUserName,getDateMessage}  from  '../lib/UtilityLibrary';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #000',\r\n      },\r\n\r\n    mainExp:{\r\n        fontSize:\"12pt\",\r\n        color:\"#555555\"\r\n    },\r\n    \r\n    subExp:{\r\n        fontSize:\"10pt\",\r\n        color:\"#aaa\"\r\n    },\r\n\r\n     \r\n  }));\r\n\r\n\r\n/*\r\n  ・届いた時間\r\n  ・送り元\r\n  ・メッセージ\r\n\r\n*/\r\n\r\n\r\nconst NoticeColumn=({data})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    \r\n    const userlist = useSelector(state => state.auth_login.user_list);\r\n    const classes=useStyles();\r\n    const [maintext,setMainText] =useState(setHeaderText(data.keyMemoMain.strMainText));\r\n \r\n    const [senderMsg,setSenderMsg]= useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!userlist || userlist.length===0) return;\r\n\r\n        const sender=getUserName(userlist,data.keyMemoMain.keySender);\r\n\r\n        if (data.numNoticeType===1){\r\n            setSenderMsg(sender+\"からメモが来ています。\");\r\n        } else{\r\n            setSenderMsg(sender+\"から返信が来ています。\");\r\n        }\r\n    },[userlist]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.memo}>\r\n                    <Link underline=\"none\" to={\"/reply/\" +  data.keyMemoMain.id} replace >\r\n                        <div className={classes.mainExp}>\r\n                        {getDateMessage(data.keyMemoMain.dateRegist) } : {senderMsg}  \r\n                        </div>\r\n                        <div className={classes.subExp}>{maintext} </div>\r\n                    </Link>\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NoticeColumn;","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\SummaryMemo.js",["444"],"\r\nimport  {getDateMessage,getUserName} from  '../../lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TagText  from './TagText'; \r\nimport {GetUserName}  from './ShowInfoSet';\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n      followarea:{\r\n          marginLeft:\"20%\",\r\n          border:'2px solid #888',\r\n          width:\"80%\",\r\n          fontSize:\"12px\"\r\n      }\r\n\r\n}));\r\n\r\n\r\nconst SummaryMemo=(props)=>{\r\n    const classes=useStyles();\r\n\r\n    return (\r\n    \r\n        <div className={classes.followarea}>\r\n            <div><span > { getDateMessage(props.data.datePublish) }</span> <GetUserName  suffix={\"より\"}  id={props.data.keySender}/></div>\r\n            < div><span>{getDateMessage(props.data.dateRegist) }</span><span> <TagText tagtextarray={props.data.strTaglist}/> </span> <span>{props.data.strMainText}</span></div>\r\n        </div>\r\n        \r\n    )\r\n\r\n};\r\n\r\nexport default SummaryMemo;","D:\\dev\\JS\\taglead_react\\src\\test\\TestLoading.js",["445","446","447","448","449","450","451","452"],"D:\\dev\\JS\\taglead_react\\src\\index.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js",["453","454","455"],"import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport NoticeColumn from './NoticeColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {getNoticeData} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst NoticeList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    const notices=useSelector(state=>state.notice_main.notices);\r\n    const endflg=useSelector(state=>state.notice_main.endflg);\r\n    const [startnum,setStartNum]=useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        console.log(\" Add Start\");\r\n         dispatch(getNoticeData(startnum));\r\n    },[]);\r\n\r\n\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {notices.length>0 ?\r\n\r\n                notices.map((d)=>{\r\n                    return (<NoticeColumn\r\n                        data={d}\r\n                    />)\r\n                })\r\n\r\n            :\r\n            <div>ロード中</div>\r\n            }\r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NoticeList;\r\n","D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js",["456"],"D:\\dev\\JS\\taglead_react\\src\\pages\\FirstLoginEndPage.js",["457","458","459"],{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":1,"column":10,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"468","line":9,"column":9,"nodeType":"466","messageId":"467","endLine":9,"endColumn":11},{"ruleId":"469","severity":1,"message":"470","line":15,"column":51,"nodeType":"471","messageId":"472","endLine":15,"endColumn":53},{"ruleId":"469","severity":1,"message":"470","line":21,"column":47,"nodeType":"471","messageId":"472","endLine":21,"endColumn":49},{"ruleId":"460","replacedBy":"473"},{"ruleId":"462","replacedBy":"474"},{"ruleId":"464","severity":1,"message":"475","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":14},{"ruleId":"464","severity":1,"message":"476","line":48,"column":11,"nodeType":"466","messageId":"467","endLine":48,"endColumn":19},{"ruleId":"464","severity":1,"message":"477","line":98,"column":20,"nodeType":"466","messageId":"467","endLine":98,"endColumn":26},{"ruleId":"464","severity":1,"message":"478","line":1,"column":9,"nodeType":"466","messageId":"467","endLine":1,"endColumn":19},{"ruleId":"464","severity":1,"message":"479","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":20},{"ruleId":"464","severity":1,"message":"480","line":3,"column":8,"nodeType":"466","messageId":"467","endLine":3,"endColumn":23},{"ruleId":"464","severity":1,"message":"481","line":4,"column":26,"nodeType":"466","messageId":"467","endLine":4,"endColumn":35},{"ruleId":"464","severity":1,"message":"482","line":37,"column":10,"nodeType":"466","messageId":"467","endLine":37,"endColumn":17},{"ruleId":"460","replacedBy":"483"},{"ruleId":"462","replacedBy":"484"},{"ruleId":"464","severity":1,"message":"485","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":20},{"ruleId":"460","replacedBy":"486"},{"ruleId":"462","replacedBy":"487"},{"ruleId":"464","severity":1,"message":"488","line":1,"column":10,"nodeType":"466","messageId":"467","endLine":1,"endColumn":16},{"ruleId":"464","severity":1,"message":"489","line":5,"column":9,"nodeType":"466","messageId":"467","endLine":5,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":89,"column":8,"nodeType":"492","endLine":89,"endColumn":10,"suggestions":"493"},{"ruleId":"464","severity":1,"message":"477","line":114,"column":18,"nodeType":"466","messageId":"467","endLine":114,"endColumn":24},{"ruleId":"460","replacedBy":"494"},{"ruleId":"462","replacedBy":"495"},{"ruleId":"490","severity":1,"message":"496","line":74,"column":7,"nodeType":"492","endLine":74,"endColumn":28,"suggestions":"497"},{"ruleId":"498","severity":1,"message":"499","line":180,"column":61,"nodeType":"500","messageId":"501","endLine":180,"endColumn":62,"suggestions":"502"},{"ruleId":"490","severity":1,"message":"503","line":32,"column":7,"nodeType":"492","endLine":32,"endColumn":9,"suggestions":"504"},{"ruleId":"460","replacedBy":"505"},{"ruleId":"462","replacedBy":"506"},{"ruleId":"490","severity":1,"message":"507","line":16,"column":8,"nodeType":"492","endLine":16,"endColumn":19,"suggestions":"508"},{"ruleId":"464","severity":1,"message":"509","line":1,"column":15,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"510","line":1,"column":25,"nodeType":"466","messageId":"467","endLine":1,"endColumn":33},{"ruleId":"464","severity":1,"message":"485","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":20},{"ruleId":"464","severity":1,"message":"475","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":14},{"ruleId":"464","severity":1,"message":"488","line":10,"column":8,"nodeType":"466","messageId":"467","endLine":10,"endColumn":14},{"ruleId":"464","severity":1,"message":"511","line":11,"column":8,"nodeType":"466","messageId":"467","endLine":11,"endColumn":18},{"ruleId":"464","severity":1,"message":"512","line":15,"column":9,"nodeType":"466","messageId":"467","endLine":15,"endColumn":22},{"ruleId":"464","severity":1,"message":"513","line":16,"column":9,"nodeType":"466","messageId":"467","endLine":16,"endColumn":21},{"ruleId":"464","severity":1,"message":"514","line":19,"column":7,"nodeType":"466","messageId":"467","endLine":19,"endColumn":18},{"ruleId":"464","severity":1,"message":"476","line":50,"column":11,"nodeType":"466","messageId":"467","endLine":50,"endColumn":19},{"ruleId":"464","severity":1,"message":"515","line":51,"column":11,"nodeType":"466","messageId":"467","endLine":51,"endColumn":18},{"ruleId":"464","severity":1,"message":"482","line":52,"column":11,"nodeType":"466","messageId":"467","endLine":52,"endColumn":18},{"ruleId":"460","replacedBy":"516"},{"ruleId":"462","replacedBy":"517"},{"ruleId":"460","replacedBy":"518"},{"ruleId":"462","replacedBy":"519"},{"ruleId":"464","severity":1,"message":"515","line":31,"column":11,"nodeType":"466","messageId":"467","endLine":31,"endColumn":18},{"ruleId":"490","severity":1,"message":"520","line":36,"column":8,"nodeType":"492","endLine":36,"endColumn":10,"suggestions":"521"},{"ruleId":"464","severity":1,"message":"510","line":1,"column":16,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"476","line":8,"column":11,"nodeType":"466","messageId":"467","endLine":8,"endColumn":19},{"ruleId":"460","replacedBy":"522"},{"ruleId":"462","replacedBy":"523"},{"ruleId":"464","severity":1,"message":"524","line":12,"column":9,"nodeType":"466","messageId":"467","endLine":12,"endColumn":18},{"ruleId":"464","severity":1,"message":"525","line":38,"column":10,"nodeType":"466","messageId":"467","endLine":38,"endColumn":21},{"ruleId":"464","severity":1,"message":"526","line":154,"column":7,"nodeType":"466","messageId":"467","endLine":154,"endColumn":20},{"ruleId":"464","severity":1,"message":"527","line":162,"column":7,"nodeType":"466","messageId":"467","endLine":162,"endColumn":22},{"ruleId":"469","severity":1,"message":"470","line":265,"column":39,"nodeType":"471","messageId":"472","endLine":265,"endColumn":41},{"ruleId":"528","severity":1,"message":"529","line":384,"column":36,"nodeType":"530","messageId":"531","endLine":384,"endColumn":38},{"ruleId":"464","severity":1,"message":"532","line":11,"column":10,"nodeType":"466","messageId":"467","endLine":11,"endColumn":26},{"ruleId":"490","severity":1,"message":"533","line":23,"column":6,"nodeType":"492","endLine":23,"endColumn":22,"suggestions":"534"},{"ruleId":"464","severity":1,"message":"535","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":21},{"ruleId":"464","severity":1,"message":"511","line":9,"column":8,"nodeType":"466","messageId":"467","endLine":9,"endColumn":18},{"ruleId":"469","severity":1,"message":"470","line":94,"column":20,"nodeType":"471","messageId":"472","endLine":94,"endColumn":22},{"ruleId":"464","severity":1,"message":"536","line":23,"column":9,"nodeType":"466","messageId":"467","endLine":23,"endColumn":28},{"ruleId":"464","severity":1,"message":"537","line":24,"column":8,"nodeType":"466","messageId":"467","endLine":24,"endColumn":19},{"ruleId":"464","severity":1,"message":"538","line":22,"column":25,"nodeType":"466","messageId":"467","endLine":22,"endColumn":36},{"ruleId":"464","severity":1,"message":"539","line":112,"column":11,"nodeType":"466","messageId":"467","endLine":112,"endColumn":19},{"ruleId":"490","severity":1,"message":"540","line":164,"column":5,"nodeType":"466","endLine":164,"endColumn":14,"suggestions":"541"},{"ruleId":"464","severity":1,"message":"542","line":1,"column":8,"nodeType":"466","messageId":"467","endLine":1,"endColumn":13},{"ruleId":"464","severity":1,"message":"543","line":1,"column":34,"nodeType":"466","messageId":"467","endLine":1,"endColumn":40},{"ruleId":"464","severity":1,"message":"544","line":7,"column":5,"nodeType":"466","messageId":"467","endLine":7,"endColumn":19},{"ruleId":"464","severity":1,"message":"545","line":10,"column":5,"nodeType":"466","messageId":"467","endLine":10,"endColumn":8},{"ruleId":"464","severity":1,"message":"546","line":11,"column":5,"nodeType":"466","messageId":"467","endLine":11,"endColumn":9},{"ruleId":"464","severity":1,"message":"547","line":12,"column":5,"nodeType":"466","messageId":"467","endLine":12,"endColumn":14},{"ruleId":"464","severity":1,"message":"511","line":14,"column":8,"nodeType":"466","messageId":"467","endLine":14,"endColumn":18},{"ruleId":"464","severity":1,"message":"548","line":16,"column":10,"nodeType":"466","messageId":"467","endLine":16,"endColumn":24},{"ruleId":"464","severity":1,"message":"549","line":16,"column":25,"nodeType":"466","messageId":"467","endLine":16,"endColumn":40},{"ruleId":"464","severity":1,"message":"539","line":51,"column":11,"nodeType":"466","messageId":"467","endLine":51,"endColumn":19},{"ruleId":"490","severity":1,"message":"550","line":124,"column":8,"nodeType":"492","endLine":124,"endColumn":10,"suggestions":"551"},{"ruleId":"460","replacedBy":"552"},{"ruleId":"462","replacedBy":"553"},{"ruleId":"464","severity":1,"message":"554","line":7,"column":21,"nodeType":"466","messageId":"467","endLine":7,"endColumn":33},{"ruleId":"464","severity":1,"message":"555","line":7,"column":34,"nodeType":"466","messageId":"467","endLine":7,"endColumn":39},{"ruleId":"469","severity":1,"message":"470","line":47,"column":45,"nodeType":"471","messageId":"472","endLine":47,"endColumn":47},{"ruleId":"469","severity":1,"message":"470","line":52,"column":24,"nodeType":"471","messageId":"472","endLine":52,"endColumn":26},{"ruleId":"464","severity":1,"message":"510","line":1,"column":16,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"509","line":1,"column":25,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"556","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":16},{"ruleId":"464","severity":1,"message":"485","line":2,"column":17,"nodeType":"466","messageId":"467","endLine":2,"endColumn":28},{"ruleId":"464","severity":1,"message":"535","line":2,"column":29,"nodeType":"466","messageId":"467","endLine":2,"endColumn":40},{"ruleId":"464","severity":1,"message":"557","line":3,"column":10,"nodeType":"466","messageId":"467","endLine":3,"endColumn":24},{"ruleId":"460","replacedBy":"558"},{"ruleId":"462","replacedBy":"559"},{"ruleId":"464","severity":1,"message":"509","line":1,"column":15,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"535","line":5,"column":21,"nodeType":"466","messageId":"467","endLine":5,"endColumn":32},{"ruleId":"464","severity":1,"message":"560","line":6,"column":10,"nodeType":"466","messageId":"467","endLine":6,"endColumn":21},{"ruleId":"460","replacedBy":"561"},{"ruleId":"462","replacedBy":"562"},{"ruleId":"464","severity":1,"message":"511","line":8,"column":8,"nodeType":"466","messageId":"467","endLine":8,"endColumn":18},{"ruleId":"464","severity":1,"message":"563","line":50,"column":16,"nodeType":"466","messageId":"467","endLine":50,"endColumn":22},{"ruleId":"490","severity":1,"message":"564","line":59,"column":5,"nodeType":"466","endLine":59,"endColumn":14,"suggestions":"565"},{"ruleId":"464","severity":1,"message":"511","line":2,"column":38,"nodeType":"466","messageId":"467","endLine":2,"endColumn":48},{"ruleId":"464","severity":1,"message":"510","line":1,"column":16,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"509","line":1,"column":25,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"556","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":16},{"ruleId":"464","severity":1,"message":"485","line":2,"column":17,"nodeType":"466","messageId":"467","endLine":2,"endColumn":28},{"ruleId":"464","severity":1,"message":"535","line":2,"column":29,"nodeType":"466","messageId":"467","endLine":2,"endColumn":40},{"ruleId":"464","severity":1,"message":"557","line":3,"column":10,"nodeType":"466","messageId":"467","endLine":3,"endColumn":24},{"ruleId":"464","severity":1,"message":"515","line":24,"column":11,"nodeType":"466","messageId":"467","endLine":24,"endColumn":18},{"ruleId":"464","severity":1,"message":"478","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":19},{"ruleId":"464","severity":1,"message":"566","line":3,"column":27,"nodeType":"466","messageId":"467","endLine":3,"endColumn":33},{"ruleId":"464","severity":1,"message":"567","line":4,"column":8,"nodeType":"466","messageId":"467","endLine":4,"endColumn":19},{"ruleId":"464","severity":1,"message":"568","line":5,"column":8,"nodeType":"466","messageId":"467","endLine":5,"endColumn":16},{"ruleId":"464","severity":1,"message":"542","line":1,"column":8,"nodeType":"466","messageId":"467","endLine":1,"endColumn":13},{"ruleId":"464","severity":1,"message":"543","line":1,"column":34,"nodeType":"466","messageId":"467","endLine":1,"endColumn":40},{"ruleId":"464","severity":1,"message":"569","line":4,"column":5,"nodeType":"466","messageId":"467","endLine":4,"endColumn":13},{"ruleId":"464","severity":1,"message":"511","line":13,"column":8,"nodeType":"466","messageId":"467","endLine":13,"endColumn":18},{"ruleId":"464","severity":1,"message":"570","line":17,"column":9,"nodeType":"466","messageId":"467","endLine":17,"endColumn":19},{"ruleId":"464","severity":1,"message":"571","line":45,"column":7,"nodeType":"466","messageId":"467","endLine":45,"endColumn":15},{"ruleId":"464","severity":1,"message":"572","line":56,"column":12,"nodeType":"466","messageId":"467","endLine":56,"endColumn":20},{"ruleId":"464","severity":1,"message":"573","line":56,"column":21,"nodeType":"466","messageId":"467","endLine":56,"endColumn":32},{"ruleId":"464","severity":1,"message":"574","line":58,"column":11,"nodeType":"466","messageId":"467","endLine":58,"endColumn":19},{"ruleId":"469","severity":1,"message":"470","line":88,"column":47,"nodeType":"471","messageId":"472","endLine":88,"endColumn":49},{"ruleId":"469","severity":1,"message":"470","line":89,"column":47,"nodeType":"471","messageId":"472","endLine":89,"endColumn":49},{"ruleId":"469","severity":1,"message":"470","line":110,"column":20,"nodeType":"471","messageId":"472","endLine":110,"endColumn":22},{"ruleId":"469","severity":1,"message":"470","line":115,"column":20,"nodeType":"471","messageId":"472","endLine":115,"endColumn":22},{"ruleId":"469","severity":1,"message":"470","line":115,"column":35,"nodeType":"471","messageId":"472","endLine":115,"endColumn":37},{"ruleId":"469","severity":1,"message":"470","line":120,"column":20,"nodeType":"471","messageId":"472","endLine":120,"endColumn":22},{"ruleId":"469","severity":1,"message":"470","line":120,"column":35,"nodeType":"471","messageId":"472","endLine":120,"endColumn":37},{"ruleId":"469","severity":1,"message":"470","line":126,"column":26,"nodeType":"471","messageId":"472","endLine":126,"endColumn":28},{"ruleId":"469","severity":1,"message":"575","line":143,"column":26,"nodeType":"471","messageId":"472","endLine":143,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":215,"column":17,"nodeType":"471","messageId":"472","endLine":215,"endColumn":19},{"ruleId":"469","severity":1,"message":"470","line":240,"column":53,"nodeType":"471","messageId":"472","endLine":240,"endColumn":55},{"ruleId":"490","severity":1,"message":"550","line":255,"column":8,"nodeType":"492","endLine":255,"endColumn":18,"suggestions":"576"},{"ruleId":"490","severity":1,"message":"577","line":271,"column":8,"nodeType":"492","endLine":271,"endColumn":27,"suggestions":"578"},{"ruleId":"469","severity":1,"message":"470","line":301,"column":42,"nodeType":"471","messageId":"472","endLine":301,"endColumn":44},{"ruleId":"469","severity":1,"message":"470","line":322,"column":59,"nodeType":"471","messageId":"472","endLine":322,"endColumn":61},{"ruleId":"464","severity":1,"message":"579","line":9,"column":10,"nodeType":"466","messageId":"467","endLine":9,"endColumn":25},{"ruleId":"469","severity":1,"message":"470","line":47,"column":40,"nodeType":"471","messageId":"472","endLine":47,"endColumn":42},{"ruleId":"469","severity":1,"message":"470","line":66,"column":16,"nodeType":"471","messageId":"472","endLine":66,"endColumn":18},{"ruleId":"490","severity":1,"message":"580","line":73,"column":7,"nodeType":"492","endLine":73,"endColumn":18,"suggestions":"581"},{"ruleId":"469","severity":1,"message":"470","line":17,"column":43,"nodeType":"471","messageId":"472","endLine":17,"endColumn":45},{"ruleId":"464","severity":1,"message":"485","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":20},{"ruleId":"464","severity":1,"message":"535","line":2,"column":21,"nodeType":"466","messageId":"467","endLine":2,"endColumn":32},{"ruleId":"464","severity":1,"message":"582","line":3,"column":8,"nodeType":"466","messageId":"467","endLine":3,"endColumn":18},{"ruleId":"464","severity":1,"message":"515","line":25,"column":11,"nodeType":"466","messageId":"467","endLine":25,"endColumn":18},{"ruleId":"464","severity":1,"message":"476","line":8,"column":11,"nodeType":"466","messageId":"467","endLine":8,"endColumn":19},{"ruleId":"460","replacedBy":"583"},{"ruleId":"462","replacedBy":"584"},{"ruleId":"464","severity":1,"message":"509","line":8,"column":19,"nodeType":"466","messageId":"467","endLine":8,"endColumn":28},{"ruleId":"464","severity":1,"message":"585","line":93,"column":12,"nodeType":"466","messageId":"467","endLine":93,"endColumn":19},{"ruleId":"464","severity":1,"message":"586","line":93,"column":20,"nodeType":"466","messageId":"467","endLine":93,"endColumn":30},{"ruleId":"464","severity":1,"message":"509","line":1,"column":51,"nodeType":"466","messageId":"467","endLine":1,"endColumn":60},{"ruleId":"464","severity":1,"message":"587","line":3,"column":8,"nodeType":"466","messageId":"467","endLine":3,"endColumn":19},{"ruleId":"464","severity":1,"message":"488","line":4,"column":9,"nodeType":"466","messageId":"467","endLine":4,"endColumn":15},{"ruleId":"464","severity":1,"message":"588","line":9,"column":11,"nodeType":"466","messageId":"467","endLine":9,"endColumn":18},{"ruleId":"464","severity":1,"message":"510","line":1,"column":16,"nodeType":"466","messageId":"467","endLine":1,"endColumn":24},{"ruleId":"464","severity":1,"message":"556","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":16},{"ruleId":"464","severity":1,"message":"557","line":3,"column":10,"nodeType":"466","messageId":"467","endLine":3,"endColumn":24},{"ruleId":"490","severity":1,"message":"550","line":32,"column":8,"nodeType":"492","endLine":32,"endColumn":18,"suggestions":"589"},{"ruleId":"490","severity":1,"message":"590","line":39,"column":8,"nodeType":"492","endLine":39,"endColumn":10,"suggestions":"591"},{"ruleId":"490","severity":1,"message":"592","line":45,"column":8,"nodeType":"492","endLine":45,"endColumn":18,"suggestions":"593"},{"ruleId":"464","severity":1,"message":"594","line":59,"column":21,"nodeType":"466","messageId":"467","endLine":59,"endColumn":32},{"ruleId":"490","severity":1,"message":"595","line":74,"column":7,"nodeType":"492","endLine":74,"endColumn":17,"suggestions":"596"},{"ruleId":"464","severity":1,"message":"538","line":2,"column":25,"nodeType":"466","messageId":"467","endLine":2,"endColumn":36},{"ruleId":"464","severity":1,"message":"488","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":15},{"ruleId":"464","severity":1,"message":"597","line":2,"column":16,"nodeType":"466","messageId":"467","endLine":2,"endColumn":21},{"ruleId":"464","severity":1,"message":"598","line":2,"column":22,"nodeType":"466","messageId":"467","endLine":2,"endColumn":31},{"ruleId":"464","severity":1,"message":"599","line":2,"column":32,"nodeType":"466","messageId":"467","endLine":2,"endColumn":48},{"ruleId":"464","severity":1,"message":"600","line":2,"column":49,"nodeType":"466","messageId":"467","endLine":2,"endColumn":65},{"ruleId":"464","severity":1,"message":"569","line":2,"column":66,"nodeType":"466","messageId":"467","endLine":2,"endColumn":74},{"ruleId":"464","severity":1,"message":"601","line":3,"column":10,"nodeType":"466","messageId":"467","endLine":3,"endColumn":24},{"ruleId":"464","severity":1,"message":"602","line":6,"column":8,"nodeType":"466","messageId":"467","endLine":6,"endColumn":20},{"ruleId":"464","severity":1,"message":"603","line":7,"column":9,"nodeType":"466","messageId":"467","endLine":7,"endColumn":22},{"ruleId":"464","severity":1,"message":"604","line":31,"column":21,"nodeType":"466","messageId":"467","endLine":31,"endColumn":32},{"ruleId":"490","severity":1,"message":"605","line":37,"column":7,"nodeType":"492","endLine":37,"endColumn":9,"suggestions":"606"},{"ruleId":"464","severity":1,"message":"556","line":2,"column":9,"nodeType":"466","messageId":"467","endLine":2,"endColumn":16},{"ruleId":"464","severity":1,"message":"488","line":1,"column":10,"nodeType":"466","messageId":"467","endLine":1,"endColumn":16},{"ruleId":"464","severity":1,"message":"607","line":16,"column":11,"nodeType":"466","messageId":"467","endLine":16,"endColumn":18},{"ruleId":"490","severity":1,"message":"550","line":21,"column":8,"nodeType":"492","endLine":21,"endColumn":10,"suggestions":"608"},"no-native-reassign",["609"],"no-negated-in-lhs",["610"],"no-unused-vars","'TAG_TEXT_INPUT' is defined but never used.","Identifier","unusedVar","'ss' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["609"],["610"],"'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'height' is assigned a value but never used.","'useHistory' is defined but never used.","'LoginButton' is defined but never used.","'CirculerLoading' is defined but never used.","'CardMedia' is defined but never used.","'history' is assigned a value but never used.",["609"],["610"],"'useSelector' is defined but never used.",["609"],["610"],"'Button' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'error', and 'tag_list'. Either include them or remove the dependency array.","ArrayExpression",["611"],["609"],["610"],"React Hook useEffect has a missing dependency: 'searchTagArray'. Either include it or remove the dependency array.",["612"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["613","614"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["615"],["609"],["610"],"React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["616"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'OPEN_PASSWORD' is defined but never used.","'LogOutButton' is defined but never used.","'drawerWidth' is assigned a value but never used.","'classes' is assigned a value but never used.",["609"],["610"],["609"],["610"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["617"],["609"],["610"],"'RESET_TAG' is defined but never used.","'useSnackbar' is defined but never used.","'INIT_USER_TAG' is assigned a value but never used.","'INIT_USER_STATE' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FirstLoginButton' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["618"],"'useDispatch' is defined but never used.","'TestFreeTagPutModal' is defined but never used.","'TestLoading' is defined but never used.","'getUserName' is defined but never used.","'tag_list' is assigned a value but never used.","React Hook useEffect contains a call to 'setBoxStyle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo] as a second argument to the useEffect Hook.",["619"],"'react' is defined but never used.","'useRef' is defined but never used.","'FormHelperText' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TextField' is defined but never used.","'TYPE_TAG_GUEST' is defined but never used.","'TYPE_TAG_MENBER' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["620"],["609"],["610"],"'createStyles' is defined but never used.","'Theme' is defined but never used.","'connect' is defined but never used.","'LinearProgress' is defined but never used.",["609"],["610"],"'loadNewMemo' is defined but never used.",["609"],["610"],"'setEnd' is assigned a value but never used.","React Hook useEffect contains a call to 'setCanSubmit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selected.length, mainText.length, hasTime, registTime] as a second argument to the useEffect Hook.",["621"],"'Switch' is defined but never used.","'SlideRoutes' is defined but never used.","'TestMain' is defined but never used.","'Collapse' is defined but never used.","'GetTagName' is defined but never used.","'tagRanks' is assigned a value but never used.","'viewmode' is assigned a value but never used.","'setViewMode' is assigned a value but never used.","'changFlg' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["622"],"React Hook useEffect has a missing dependency: 'changeViewList'. Either include it or remove the dependency array.",["623"],"'getTimeStampNow' is defined but never used.","React Hook useEffect has missing dependencies: 'selected' and 'sendSelectedTag'. Either include them or remove the dependency array.",["624"],"'MainHeader' is defined but never used.",["609"],["610"],"'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","'ReplyColumn' is defined but never used.","'onClick' is assigned a value but never used.",["625"],"React Hook useEffect has a missing dependency: 'resetCheck'. Either include it or remove the dependency array.",["626"],"React Hook useEffect has missing dependencies: 'resetCheck' and 'timeline.length'. Either include them or remove the dependency array.",["627"],"'setMainText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.keyMemoMain.keySender' and 'data.numNoticeType'. Either include them or remove the dependency array.",["628"],"'Modal' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ButtonSample' is defined but never used.","'ScrollUpdater' is defined but never used.","'setStartNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'startnum'. Either include them or remove the dependency array.",["629"],"'onPress' is assigned a value but never used.",["630"],"no-global-assign","no-unsafe-negation",{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"messageId":"635","fix":"636","desc":"637"},{"messageId":"638","fix":"639","desc":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"655","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"651","fix":"670"},"Update the dependencies array to be: [dispatch, error, tag_list]",{"range":"671","text":"672"},"Update the dependencies array to be: [searchTagArray, selected, tag_source]",{"range":"673","text":"674"},"removeEscape",{"range":"675","text":"676"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"677","text":"678"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"679","text":"680"},"Update the dependencies array to be: [enqueueSnackbar, snacklist]",{"range":"681","text":"682"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"683","text":"684"},"Update the dependencies array to be: [error, history, location]",{"range":"685","text":"686"},"Add dependencies array: [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",{"range":"687","text":"688"},"Update the dependencies array to be: [dispatch]",{"range":"689","text":"690"},"Add dependencies array: [selected.length, mainText.length, hasTime, registTime]",{"range":"691","text":"692"},"Update the dependencies array to be: [changFlg, dispatch]",{"range":"693","text":"694"},"Update the dependencies array to be: [viewtype, tag_list, changeViewList]",{"range":"695","text":"696"},"Update the dependencies array to be: [changeFlg, selected, sendSelectedTag]",{"range":"697","text":"698"},{"range":"699","text":"694"},"Update the dependencies array to be: [resetCheck]",{"range":"700","text":"701"},"Update the dependencies array to be: [changFlg, resetCheck, timeline.length]",{"range":"702","text":"703"},"Update the dependencies array to be: [data.keyMemoMain.keySender, data.numNoticeType, userlist]",{"range":"704","text":"705"},"Update the dependencies array to be: [dispatch, startnum]",{"range":"706","text":"707"},{"range":"708","text":"690"},[2423,2425],"[dispatch, error, tag_list]",[1879,1900],"[searchTagArray, selected, tag_source]",[5096,5097],"",[5096,5096],"\\",[774,776],"[props]",[470,481],"[enqueueSnackbar, snacklist]",[909,911],"[dispatch, props.match.params.id]",[777,793],"[error, history, location]",[4924,4924],", [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",[3216,3218],"[dispatch]",[1848,1848],", [selected.length, mainText.length, hasTime, registTime]",[7058,7068],"[changFlg, dispatch]",[7372,7391],"[viewtype, tag_list, changeViewList]",[2211,2222],"[changeFlg, selected, sendSelectedTag]",[797,807],[1391,1393],"[resetCheck]",[1514,1524],"[changFlg, resetCheck, timeline.length]",[1601,1611],"[data.keyMemoMain.keySender, data.numNoticeType, userlist]",[1087,1089],"[dispatch, startnum]",[700,702]]