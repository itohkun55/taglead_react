[{"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\store\\index.js":"1","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\TagText.js":"2","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoColumn.js":"3","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\SideMenu.js":"4","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\actions\\index.js":"5","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MainHeader.js":"6","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\LoginPage.js":"7","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\SingleButtonPage.js":"8","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\LogoutPage.js":"9","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TaggedSearchPage.js":"10","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\ErrorPage.js":"11","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\PageBase.js":"12","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ConnectionLibrary.js":"13","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FormedTagPutModal.js":"14","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TestTagListData.js":"15","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\useWindowDimensions.js":"16","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\windowScrollControll.js":"17","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FeedbackSnackBar.js":"18","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\SideDrawer.js":"19","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\reportWebVitals.js":"20","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\ReplyThreadPage.js":"21","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FavoriteList.js":"22","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestTagPutModal.js":"23","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\reducers\\index.js":"24","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\App.js":"25","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ActionTypeString.js":"26","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\TagInputList.js":"27","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TestMain.js":"28","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\ReplyColumns.js":"29","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\UserTagConfigList.js":"30","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestMemoColumn.js":"31","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\TagChip.js":"32","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\UserConfigListPage.js":"33","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\MainListPage.js":"34","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TestReplyThreadData.js":"35","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FreeTagInputModal.js":"36","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoInsertButton.js":"37","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\FavoriteListPage.js":"38","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\UtilityLibrary.js":"39","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\routers.js":"40","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\UserTagAdminList.js":"41","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\TagSearchList.js":"42","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\ShowInfoSet.js":"43","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\NoticeListPage.js":"44","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestFreeTagPutModal.js":"45","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TagTypeNames.js":"46","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\AuthButtons.js":"47","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\ReplyColumnList.js":"48","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\ButtonSample.js":"49","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\CirculerLoading.js":"50","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ServiceConfig.js":"51","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TagAdminListPage.js":"52","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoList.js":"53","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\NoticeColumn.js":"54","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\SummaryMemo.js":"55","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestLoading.js":"56","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\index.js":"57","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\NoticeList.js":"58","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestAuthAction.js":"59","D:\\dev\\JS\\taglead_react\\src\\index.js":"60","D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js":"61","D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js":"62","D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js":"63","D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js":"64","D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js":"65","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js":"66","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js":"67","D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js":"68","D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js":"69","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js":"70","D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js":"71","D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js":"72","D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js":"73","D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js":"74","D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js":"75","D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js":"76","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js":"77","D:\\dev\\JS\\taglead_react\\src\\PageBase.js":"78","D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js":"79","D:\\dev\\JS\\taglead_react\\src\\store\\index.js":"80","D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js":"81","D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js":"82","D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js":"83","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js":"84","D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js":"85","D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js":"86","D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js":"87","D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js":"88","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js":"89","D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js":"90","D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js":"91","D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js":"92","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js":"93","D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js":"94","D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js":"95","D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js":"96"},{"size":629,"mtime":1608112287878,"results":"97","hashOfConfig":"98"},{"size":831,"mtime":1630241866793,"results":"99","hashOfConfig":"98"},{"size":13004,"mtime":1637241902858,"results":"100","hashOfConfig":"98"},{"size":2274,"mtime":1637235121086,"results":"101","hashOfConfig":"98"},{"size":8214,"mtime":1637134565280,"results":"102","hashOfConfig":"98"},{"size":3963,"mtime":1637327798651,"results":"103","hashOfConfig":"98"},{"size":1409,"mtime":1635512695799,"results":"104","hashOfConfig":"98"},{"size":1303,"mtime":1635512628124,"results":"105","hashOfConfig":"98"},{"size":657,"mtime":1635512955730,"results":"106","hashOfConfig":"98"},{"size":736,"mtime":1635513014440,"results":"107","hashOfConfig":"98"},{"size":1128,"mtime":1636015857034,"results":"108","hashOfConfig":"98"},{"size":4826,"mtime":1635768381691,"results":"109","hashOfConfig":"98"},{"size":2007,"mtime":1635283585770,"results":"110","hashOfConfig":"98"},{"size":13919,"mtime":1637310067563,"results":"111","hashOfConfig":"98"},{"size":4133,"mtime":1626508415759,"results":"112","hashOfConfig":"98"},{"size":608,"mtime":1608113414217,"results":"113","hashOfConfig":"98"},{"size":1418,"mtime":1635551732984,"results":"114","hashOfConfig":"98"},{"size":559,"mtime":1637309397602,"results":"115","hashOfConfig":"98"},{"size":1983,"mtime":1635768204681,"results":"116","hashOfConfig":"98"},{"size":362,"mtime":1608110817498,"results":"117","hashOfConfig":"98"},{"size":2388,"mtime":1633504014113,"results":"118","hashOfConfig":"98"},{"size":2329,"mtime":1637309382148,"results":"119","hashOfConfig":"98"},{"size":2826,"mtime":1633508682534,"results":"120","hashOfConfig":"98"},{"size":11782,"mtime":1636979013900,"results":"121","hashOfConfig":"98"},{"size":1114,"mtime":1638083844364,"results":"122","hashOfConfig":"98"},{"size":2592,"mtime":1636961073275,"results":"123","hashOfConfig":"98"},{"size":5724,"mtime":1636896525951,"results":"124","hashOfConfig":"98"},{"size":2093,"mtime":1638080443908,"results":"125","hashOfConfig":"98"},{"size":7686,"mtime":1632381643040,"results":"126","hashOfConfig":"98"},{"size":4023,"mtime":1637238377007,"results":"127","hashOfConfig":"98"},{"size":1764,"mtime":1626698918356,"results":"128","hashOfConfig":"98"},{"size":2175,"mtime":1637330319277,"results":"129","hashOfConfig":"98"},{"size":742,"mtime":1636015804423,"results":"130","hashOfConfig":"98"},{"size":865,"mtime":1635283732731,"results":"131","hashOfConfig":"98"},{"size":1761,"mtime":1624076656491,"results":"132","hashOfConfig":"98"},{"size":5658,"mtime":1634780560794,"results":"133","hashOfConfig":"98"},{"size":3520,"mtime":1630222970573,"results":"134","hashOfConfig":"98"},{"size":694,"mtime":1633504141508,"results":"135","hashOfConfig":"98"},{"size":2813,"mtime":1630912094972,"results":"136","hashOfConfig":"98"},{"size":2550,"mtime":1638083786477,"results":"137","hashOfConfig":"98"},{"size":9749,"mtime":1637137654436,"results":"138","hashOfConfig":"98"},{"size":3654,"mtime":1635035956269,"results":"139","hashOfConfig":"98"},{"size":807,"mtime":1630855281762,"results":"140","hashOfConfig":"98"},{"size":697,"mtime":1633426374627,"results":"141","hashOfConfig":"98"},{"size":851,"mtime":1633508725140,"results":"142","hashOfConfig":"98"},{"size":890,"mtime":1637042313118,"results":"143","hashOfConfig":"98"},{"size":3537,"mtime":1638170599037,"results":"144","hashOfConfig":"98"},{"size":1911,"mtime":1629443672595,"results":"145","hashOfConfig":"98"},{"size":381,"mtime":1608118434578,"results":"146","hashOfConfig":"98"},{"size":1587,"mtime":1634390355401,"results":"147","hashOfConfig":"98"},{"size":120,"mtime":1638184179762,"results":"148","hashOfConfig":"98"},{"size":1056,"mtime":1637328471555,"results":"149","hashOfConfig":"98"},{"size":2805,"mtime":1634783407451,"results":"150","hashOfConfig":"98"},{"size":2387,"mtime":1634216360474,"results":"151","hashOfConfig":"98"},{"size":1145,"mtime":1630328918497,"results":"152","hashOfConfig":"98"},{"size":1090,"mtime":1633677651670,"results":"153","hashOfConfig":"98"},{"size":846,"mtime":1633335802645,"results":"154","hashOfConfig":"98"},{"size":1782,"mtime":1630108056249,"results":"155","hashOfConfig":"98"},{"size":1075,"mtime":1638184162112,"results":"156","hashOfConfig":"98"},{"size":846,"mtime":1633335802645,"results":"157","hashOfConfig":"158"},{"size":865,"mtime":1635283732731,"results":"159","hashOfConfig":"160"},{"size":2093,"mtime":1638080443908,"results":"161","hashOfConfig":"158"},{"size":736,"mtime":1635513014440,"results":"162","hashOfConfig":"160"},{"size":2805,"mtime":1634783407451,"results":"163","hashOfConfig":"158"},{"size":1587,"mtime":1634390355401,"results":"164","hashOfConfig":"158"},{"size":1782,"mtime":1630108056249,"results":"165","hashOfConfig":"158"},{"size":3537,"mtime":1638170599037,"results":"166","hashOfConfig":"160"},{"size":11782,"mtime":1636979013900,"results":"167","hashOfConfig":"158"},{"size":381,"mtime":1608118434578,"results":"168","hashOfConfig":"160"},{"size":831,"mtime":1630241866793,"results":"169","hashOfConfig":"158"},{"size":1409,"mtime":1635512695799,"results":"170","hashOfConfig":"158"},{"size":694,"mtime":1633504141508,"results":"171","hashOfConfig":"158"},{"size":3963,"mtime":1637327798651,"results":"172","hashOfConfig":"158"},{"size":2005,"mtime":1638278027875,"results":"173","hashOfConfig":"160"},{"size":3654,"mtime":1635035956269,"results":"174","hashOfConfig":"158"},{"size":1418,"mtime":1635551732984,"results":"175","hashOfConfig":"160"},{"size":2387,"mtime":1634216360474,"results":"176","hashOfConfig":"158"},{"size":4826,"mtime":1635768381691,"results":"177","hashOfConfig":"160"},{"size":4133,"mtime":1626508415759,"results":"178","hashOfConfig":"158"},{"size":629,"mtime":1608112287878,"results":"179","hashOfConfig":"160"},{"size":3520,"mtime":1630222970573,"results":"180","hashOfConfig":"160"},{"size":608,"mtime":1608113414217,"results":"181","hashOfConfig":"158"},{"size":2329,"mtime":1637309382148,"results":"182","hashOfConfig":"160"},{"size":4023,"mtime":1637238377007,"results":"183","hashOfConfig":"160"},{"size":13004,"mtime":1637241902858,"results":"184","hashOfConfig":"158"},{"size":1056,"mtime":1637328471555,"results":"185","hashOfConfig":"160"},{"size":742,"mtime":1636015804423,"results":"186","hashOfConfig":"160"},{"size":2274,"mtime":1637235121086,"results":"187","hashOfConfig":"160"},{"size":9749,"mtime":1637137654436,"results":"188","hashOfConfig":"158"},{"size":2813,"mtime":1630912094972,"results":"189","hashOfConfig":"160"},{"size":890,"mtime":1637042313118,"results":"190","hashOfConfig":"160"},{"size":1761,"mtime":1624076656491,"results":"191","hashOfConfig":"160"},{"size":2175,"mtime":1637330319277,"results":"192","hashOfConfig":"160"},{"size":697,"mtime":1633426374627,"results":"193","hashOfConfig":"158"},{"size":2388,"mtime":1633504014113,"results":"194","hashOfConfig":"158"},{"size":1101,"mtime":1638187297824,"results":"195","hashOfConfig":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"1j3t54r",{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"228"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"217"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"217"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"235"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"207"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"228"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"228"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"228"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"228"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"213"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"257"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"207"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"251"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"295"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"228"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"228"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"213"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"217"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"267"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"251"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"224"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"213"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"217"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"224"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"228"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"217"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qd1qis",{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"m51bgq",{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"377"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"388"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"413"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"413"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\store\\index.js",[],["444","445"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\TagText.js",["446","447","448","449"],"import { TAG_TEXT_INPUT } from \"../../lib/TagTypeNames\";\r\n\r\nimport React  from 'react';\r\nimport {useSelector } from 'react-redux';\r\n\r\nconst TagText=({tagtextarray})=>{\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n\r\n    let ss=\"\";\r\n\r\n    return tagtextarray.split(\",\").map((d)=>{\r\n\r\n        if (d.includes(\":\")){\r\n            const sd=d.split(\":\");\r\n            const tagname=tag_list.find(el=> el.id==sd[0]);\r\n            if( !tagname ) return  (<span> タグ不明 {d} :</span>)\r\n            \r\n            return tagname.strTagName+\":\"+sd[1];\r\n        }\r\n\r\n        const tagname=tag_list.find(el=> el.id==d );\r\n        //console.log(tagname);\r\n        if( !tagname ) return  <span> タグ不明 {d} :</span>\r\n\r\n        return  <span>{tagname.strTagName} :</span> \r\n    });\r\n};\r\n\r\nexport default  TagText;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoColumn.js",["450"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\SideMenu.js",["451","452"],"import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {LogOutButton} from './parts/AuthButtons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        //position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideMenu=({onClose=null})=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n    const userRank=useSelector(state=>state.auth_login.userRank);\r\n\r\n    const onMove=(path=\"none\")=>{\r\n        console.log(\"close\");\r\n        if (path!==\"none\"){\r\n          history.push(path);\r\n        }\r\n        if (onClose){\r\n          onClose();\r\n        }\r\n\r\n    };\r\n\r\n    const menuList=[\r\n      {path:\"/favorite\" , name:\"お気に入り一覧\"},\r\n      {path:\"/notice\" , name:\"通知一覧\"},\r\n      {path:\"/tagconfig\" , name:\"タグ設定\"},\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.listShelf}>\r\n            <div className={classes.column}>\r\n            <LogOutButton />\r\n            </div>\r\n            {\r\n              menuList.map((menu)=>(\r\n                <div className={classes.column} onClick={()=>onMove(menu.path)}><Typography variant='subtitle1' gutterBottom > {menu.name} </Typography></div>\r\n              ))\r\n            }\r\n            {userRank>1 ?\r\n              <div className={classes.column} onClick={()=>onMove(\"/tagadmin\")}><Typography variant='subtitle1' gutterBottom > タグ管理メニュー </Typography></div>\r\n              :\r\n              <div/>\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideMenu;\r\n        ",["453","454"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\actions\\index.js",["455","456","457","458","459","460","461"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MainHeader.js",["462"],"import React,{useEffect,useState} from 'react';\r\nimport { NavLink,useLocation,useHistory } from 'react-router-dom';\r\nimport  {useWindowDimensions} from '../lib/useWindowDimensions';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n//メモ単画像表示\r\n\r\n//現在ログインしているユーザの名前を表示する\r\n//ログインしているユーザーがいなければ施設の名前を表示する\r\n\r\n//機能メニューを表示する\r\n\r\nconst mainheaderStyle = makeStyles((theme) => ({\r\n  // root:{\r\n  //   flexGrow: 1,\r\n  //   display :\"flex\",\r\n  //   justifyContent: \"center\"\r\n  \r\n  // },\r\n  layOut:{\r\n    justifyContent: \"center\"\r\n  },\r\n    centerButton:{\r\n      display:\"flex\",\r\n      justifyContent:\"center\"\r\n\r\n    },\r\n    nav: {\r\n      display: \"grid\",\r\n      grid: \"auto / auto-flow\",\r\n      padding: \"3px\",\r\n      marginTop: \"4px\",\r\n      marginBottom: \"4px\",\r\n      background: \"#eee\",\r\n      borderRadius: \"10px\",\r\n\r\n      \"& a\" :{\r\n        display: \"block\",\r\n        color: \"#000\",\r\n        //marginRight:\"15px\",\r\n        //marginLeft:\"15px\",\r\n        padding:\" 0 20px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"32px\",\r\n        textDecoration: \"none\"\r\n      },\r\n      \"& a.active\" : {\r\n        background: \"#fff\",\r\n        fontWeight: 500,\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 1px 4px rgba(0, 0, 0, 0.1)\"\r\n      }\r\n    \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\n  \r\n\r\nconst MainHeader=(props)=>{\r\n  //console.log(\"props\"+ props);\r\n    const classes = mainheaderStyle();\r\n    const [prevPath,setPrevpath]=useState(\"\");\r\n    const location=useLocation();\r\n    const [isBack,setIsBack]=useState(false);\r\n\r\n    const openSearch=()=>{\r\n      //showSearch(!search);\r\n    };\r\n\r\n    useEffect(()=>{\r\n\r\n      const path=location.pathname.split(\"/\")[1];\r\n      if ( \"tag\" === path || \"main\" === path ){\r\n        setIsBack(false);\r\n        setPrevpath(path);\r\n      }else{\r\n        setIsBack(true);\r\n      }\r\n\r\n    },[location]);\r\n    const history=useHistory();\r\n\r\n    const { width, height } = useWindowDimensions();\r\n    //今はサイズは適当\r\n    //if (width>500){\r\n        return (\r\n            <div   >\r\n              <AppBar position=\"fixed\"  >\r\n                <Toolbar>\r\n                  {isBack ?\r\n                    <IconButton  onClick={()=>history.push(\"/\"+prevPath)} ><ArrowBackIcon/></IconButton>\r\n                    :\r\n                    width<600  &&\r\n                          <IconButton edge=\"start\" className={classes.menuButton}  onClick={()=>props.openMenu()} color=\"inherit\" aria-label=\"menu\">\r\n                             <MenuIcon  />\r\n                          </IconButton>\r\n\r\n                  }\r\n                  {!isBack &&\r\n                    <div className={classes.centerButton}>\r\n                      <span className={classes.nav}>\r\n                          <NavLink to=\"/main\" exact><div className={classes.a}><Typography variant='h6' gutterBottom >  一覧  </Typography></div></NavLink>\r\n                          <NavLink to=\"/tag\" exact><div className={classes.a}><Typography variant='h6' gutterBottom > タグ検索 </Typography></div></NavLink>\r\n                      </span>\r\n                      \r\n                      <IconButton onClick={()=>openSearch()}  ><SearchIcon/></IconButton>\r\n                    </div>\r\n\r\n                  }\r\n              \r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          );\r\n\r\n    //}\r\n\r\n}\r\n\r\nexport default MainHeader;",["463","464"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\LoginPage.js",["465","466","467","468"],"import {useHistory} from 'react-router-dom';\r\nimport {LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {Card,CardContent,CardMedia,CardActions} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   loginroot:{\r\n\r\n      justifyContent:\"center\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto` \r\n   },\r\n\r\n   card: {\r\n      //:\"50%\",\r\n      justifyContent:\"center\",\r\n      marginTop: theme.spacing(20),\r\n      width:'70%',\r\n      maxWidth:\"300px\"\r\n\r\n   },\r\n   \r\n   button:{\r\n      display:\"block\",\r\n      marginRight:\"auto\",\r\n      marginLeft:\"auto\"\r\n   }\r\n\r\n}));\r\n\r\nconst LoginPage = () => {\r\n   const history=useHistory();\r\n   const classes=styles();\r\n   const CardContent=(\r\n      <CardMedia  height={\"50%\"} component=\"img\" image={`${process.env.PUBLIC_URL}/tagleadlogo.png`} />\r\n   );\r\n\r\n   const CardAction=(\r\n      <LoginButton  redi={false}　callback={()=>history.push(\"/\")}/>\r\n   );\r\n    const Footer=(\r\n      <CirculerLoading isModal={true} />\r\n    )\r\n\r\n   return (\r\n         <SingleButtonPage \r\n            Content={CardContent}\r\n            ButtonAction={CardAction}\r\n            Footer={Footer}\r\n         />\r\n   );\r\n};\r\n\r\nexport default LoginPage;",["469","470"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\SingleButtonPage.js",["471","472","473","474"],"import {useHistory} from 'react-router-dom';\r\nimport {LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {Card,CardContent,CardMedia,CardActions} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   loginroot:{\r\n\r\n      justifyContent:\"center\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto` \r\n   },\r\n\r\n   card: {\r\n      //:\"50%\",\r\n      justifyContent:\"center\",\r\n      marginTop: theme.spacing(20),\r\n      width:'70%',\r\n      maxWidth:\"300px\"\r\n\r\n   },\r\n   \r\n   button:{\r\n      display:\"block\",\r\n      marginRight:\"auto\",\r\n      marginLeft:\"auto\"\r\n   }\r\n\r\n}));\r\n\r\nconst SingleButtonPage = ({Content,ButtonAction,Footer}) => {\r\n   const history=useHistory();\r\n   const classes=styles();\r\n   \r\n   return (\r\n\r\n      <div className={classes.loginroot}>\r\n         <Card className={classes.card}>\r\n            <CardContent>\r\n               {Content}\r\n            </CardContent>\r\n            <CardActions>        \r\n               <div  className={classes.button}>{ButtonAction}</div>\r\n            </CardActions>\r\n         </Card>\r\n         {Footer} \r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleButtonPage;",["475","476"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\LogoutPage.js",[],["477","478"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TaggedSearchPage.js",["479"],"import React, {useEffect} from 'react';\r\nimport {useSelector}  from 'react-redux';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport TagSearchList from \"../components/TagSearchList\";\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n//テスト表示用\r\n\r\n\r\n//メインページの画面メイン\r\nconst TaggedSearchPage=(props)=>{\r\n\r\n    //const tag_list=useSelector(state=>state.auth_login.all_tag,[]);\r\n    \r\n    useEffect(() => {        \r\n        APICallController.setView(\"tag\");\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\" >\r\n            <TagSearchList />\r\n            <CirculerLoading isModal={false} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  TaggedSearchPage;",["480","481"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\ErrorPage.js",["482","483"],"import { Button } from '@material-ui/core';\r\nimport React ,{ useState,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { LogOutButton } from '../components/parts/AuthButtons';\r\nimport {Card} from \"@material-ui/core\";\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst ErrorPage=(props)=>{\r\n\r\n    const error=useSelector(state=>state.error_control);\r\n    const [errorCode,setErrorCode] =useState(\"\");\r\n    const [errorMsg,setErrorMsg] =useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setErrorCode(error.errorCode);\r\n        setErrorMsg(error.errorMsg);\r\n        \r\n    }, [error]);\r\n\r\n    const Content=()=>{\r\n        return(\r\n            <div>\r\n                <div> エラーが発生しました。　一度ログアウトしてください。</div>\r\n                <div>状況： {errorMsg}</div>\r\n                <div>コード:　{errorCode}</div>\r\n            </div>\r\n    )};\r\n    \r\n    return (\r\n        <SingleButtonPage\r\n            Content={Content()}\r\n            ButtonAction={<LogOutButton/>}\r\n            Footer={<div/>}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default  ErrorPage;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\PageBase.js",["484","485","486","487","488"],"import React, {useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport MainHeader from \"./components/MainHeader\";\r\nimport MemoInsertButton from \"./components/MemoInsertButton\";\r\nimport FreeTagInputModal from './components/FreeTagInputModal';\r\nimport  FormedTagPutModal from './components/FormedTagPutModal';\r\nimport  SideMenu from './components/SideMenu';\r\nimport  SideDrawer from './components/SideDrawer';\r\nimport FeedbackSnackBar from './components/FeedbackSnackBar';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from './lib/ActionTypeString';\r\nimport PageRouter from './routers';\r\n\r\nimport  {auth_login_success} from './actions';\r\nimport APICallController from './lib/ConnectionLibrary';\r\nimport { checkHasContent } from './lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useWindowDimensions } from './lib/useWindowDimensions';\r\n\r\nconst Styles=makeStyles({\r\n    \r\n    side: {\r\n        position:\"fixed\",\r\n        marginTop:'28px',\r\n       width:'200px',\r\n       //top:'120px',\r\n       //zIndex:10,\r\n     } ,\r\n     \r\n    contentMobile: {\r\n        //left:\"150px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       //marginLeft:\"10px\"\r\n     },\r\n     \r\n     \r\n    contentDesktop: {\r\n        left:\"200px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       marginLeft:\"210px\"\r\n     },\r\n\r\n     article :{\r\n        display:\"flex\",\r\n       \r\n    }\r\n     \r\n});\r\n\r\n\r\n//メインページの画面メイン\r\nconst PageBase=(props)=>{\r\n\r\n    const dispatch=useDispatch();\r\n    const  error=useSelector(state=>state.error_control.errorFlg) ;\r\n    const [menuOpen,setMenuOpen]=useState(false);\r\n    const [freetagOpen,setFreeTagOpen]=useState(false);\r\n    const [formtagOpen,setformTagOpen]=useState(false);\r\n    const [followOpen,setFollowOpen]=useState(false);\r\n    const reply_source=useSelector(state=>state.reply_main.reply_source);\r\n    const follow_data = useSelector(state => state.follow_main.follow_data,{});\r\n    const tag_list=useSelector(state=>state.auth_login.tag_list,[]);\r\n\r\n    const classes=Styles();\r\n\r\n    const onMenuOpen=()=>{\r\n        setMenuOpen(true);\r\n    };\r\n\r\n    const onMenuClose=()=>{\r\n        setMenuOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const closeModal=()=>{\r\n        setformTagOpen(false);\r\n        setFreeTagOpen(false);\r\n        setFollowOpen(false);\r\n\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        //認証までの実装　実際はログイン終了時のアクションで以下を行う\r\n        if ( tag_list && tag_list.length>0) return;\r\n\r\n        if(error) return;\r\n\r\n        dispatch(auth_login_success());\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(checkHasContent(follow_data)|| checkHasContent(reply_source) ){\r\n            //console.log(\"転送データを受け取った！\",follow_data);\r\n            //setFollowOpen(true);\r\n            setFreeTagOpen(true);\r\n        }\r\n\r\n    },[follow_data,reply_source]);\r\n\r\n    const onModalOpen=(action)=>{\r\n        switch (action) {\r\n            case FREE_MODAL_OPEN:\r\n                setFreeTagOpen(true);\r\n                break;\r\n        \r\n            case FORMED_MODAL_OPEN:\r\n                setformTagOpen(true);\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const {width,height}=useWindowDimensions();\r\n    const isMobile=width<500;\r\n\r\n    const SideSet=()=>{\r\n        if(isMobile){\r\n            console.log(\"mobileset true\");\r\n            return(\r\n                <div ><SideDrawer mobile={true}  open={false}  onClose={onMenuClose}/></div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={classes.side} ><SideDrawer mobile={false}  open={true} /></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {error ?\r\n            <div/>\r\n            :   \r\n            <div>\r\n                <MainHeader mobile={isMobile}  openMenu={onMenuOpen} />\r\n                {isMobile ?\r\n                    <SideDrawer mobile={isMobile}  open={menuOpen} onClose={ onMenuClose } />\r\n                :\r\n                    <div className={classes.side} >\r\n                        <SideMenu/>\r\n                    </div>\r\n\r\n                }\r\n\r\n                <div className={isMobile ? classes.contentMobile : classes.contentDesktop  }>\r\n                    <PageRouter/>\r\n                </div>\r\n                <FeedbackSnackBar/>\r\n                <MemoInsertButton  onModalOpen={onModalOpen} />\r\n                <FormedTagPutModal open={formtagOpen} onClose={()=>closeModal()} />\r\n                <FreeTagInputModal open={freetagOpen} onClose={()=>closeModal()}  follow_data={follow_data} reply_source={reply_source} />\r\n                \r\n            </div>\r\n        }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default  PageBase;",["489","490"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ConnectionLibrary.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FormedTagPutModal.js",["491","492","493","494","495","496","497","498","499","500"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Button, Card,TextField, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewFormedMemo} from '../actions';\r\n\r\nimport {TAG_DATE_INPUT,\r\n        TAG_NUMBER_INPUT, \r\n        TAG_TEXT_INPUT,\r\n        TAG_TIME_INPUT,\r\n        TAG_MULTILINE_INPUT\r\n    } from  '../lib/TagTypeNames';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left-end',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n      \r\n    modal:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      \r\n    },\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        borderRadius:\"10px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\n\r\n\r\nconst FormedTagPutModal=(props)=>{\r\n\r\n    const classes=useStyles();\r\n    //今まで設定したタグ\r\n\r\n    //現在選択中のタグ\r\n    const [selected,setSelected]=useState([]);\r\n    //最後以外の選択中のタグ\r\n    const [defs,setDefs]=useState([]);\r\n    //最後のタグ\r\n    const [lastOne,setLastOne]= useState({});\r\n\r\n    const textRef=useRef(null);\r\n    const textRefMain=useRef(null);\r\n    \r\n\r\n    const [open,setOpen] =useState(false);\r\n\r\n\r\n    const tag_source=useSelector(state=>state.auth_login.formatted);\r\n\r\n    const view_name=useSelector(state=>state.setview);\r\n\r\n    //const tag_source=props.data;\r\n    //選択候補のタグ\r\n    const [tagArray,setTagArray]=useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    // useEffect(()=>{\r\n    //     console.log(\"タグ獲得開始\");\r\n    //     dispatch(tag_start());\r\n    // },[]);\r\n\r\n    \r\n    useEffect(()=>{\r\n    //    setOpen(props.open);\r\n        //console.log(\"タグ整理開始\",tag_source);\r\n        searchTagArray();\r\n    },[selected,tag_source]);\r\n\r\n    \r\n    //モダルを閉じるとき　全てのリストを整理してから自分を閉じる\r\n    const onClose=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n        setOpen(false);\r\n        props.onClose();\r\n    };\r\n\r\n\r\n    //Setを利用した積集合作成関数\r\n    const  intersection = (setA, setB)=> {\r\n        let _intersection = new Set();\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem);\r\n            }\r\n        }\r\n        return _intersection;\r\n    };\r\n\r\n\r\n    const searchTagArray=()=>{\r\n        if(!tag_source || tag_source.length===0) return;\r\n        \r\n        //現在取得しているリストをSetに変換、比較に使う\r\n        const nowTag=new Set(selected.map((d)=>{return d.keyTagMain.id;}));\r\n\r\n        const nowGroup=new Set(selected.map((d)=>{return d.strGroup;}));\r\n\r\n        const newTagArray=[];\r\n        let phaseNow=selected.reduce((acc,value)=>(acc<value.numTagPhase ? value.numTagPhase : acc),0);\r\n\r\n        const showArray=(str)=>{\r\n            const s=str.split(\",\")\r\n            if (s==[]) return [];\r\n            return s.map((d)=>parseInt(d));\r\n        }\r\n  \r\n        tag_source.forEach(element => {\r\n            //要素のdelに現在\r\n            let showFlg=false;\r\n            //新規タグの表示条件に選択中のタグが入っていたら表示候補にする\r\n            const hasEl=new Set(showArray(element.strShow));\r\n            if(intersection(hasEl,nowTag).size>0)  showFlg=true;\r\n\r\n            //自分自身がすでに選択されていたら候補に入れない\r\n            if(nowTag.has(element.id))  showFlg=false;  \r\n            //すでにグループの項目が設定されていたら候補に入れない\r\n            if(element.strGroup && nowGroup.has(element.strGroup)){\r\n                showFlg=false;\r\n            }               \r\n\r\n            //表示条件に該当したら選択候補に追加する\r\n            if(showFlg) newTagArray.push(element);\r\n        \r\n        });\r\n\r\n        //選択候補があったらそのまま選択候補を表示に回す\r\n        if(newTagArray.length>0){\r\n            setTagArray(newTagArray);\r\n            return;    \r\n        }\r\n        \r\n        //選択肢がなかった場合、一度Phaseを上げて再度探してみる\r\n        phaseNow+=1;\r\n        //この際はフェーズが合えば非表示でなければすべて表示する\r\n        tag_source.forEach(element => {\r\n            if(element.numTagPhase===phaseNow){\r\n                const delEl=new Set(element.del);    \r\n                if(intersection(delEl,nowTag).size===0) newTagArray.push(element);\r\n            }\r\n\r\n        });\r\n        setTagArray(newTagArray);\r\n    };\r\n\r\n    //selectedの新規内容をstateの書く場所に設置する\r\n    const putSelectedInPlace=(data)=>{\r\n        const ss=Object.assign([],data);\r\n        setSelected(data);\r\n        if (data.length==0){\r\n            setDefs([]);\r\n            setLastOne({});\r\n            return;\r\n        }\r\n        const la=ss.pop();\r\n        setDefs(ss);\r\n        setLastOne(la);\r\n\r\n    };\r\n\r\n\r\n    const onClick=(data)=>{\r\n        let nowselected=[...selected,data];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDelete=()=>{\r\n        let nowselected=Object.assign([],selected);\r\n        const ts=nowselected.pop();\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDecide=(data,txt)=>{\r\n        let copy=Object.assign({},data);\r\n        console.log(\"copy\",copy);\r\n        copy.keyTagMain.strTagName=copy.keyTagMain.strTagName+\":\"+txt;\r\n        let nowselected=[...selected,copy];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const sendAction=(text)=>{\r\n        const restagarray=selected.map((d)=>{\r\n            if (d.keyTagMain.strTagName.includes(\":\")){\r\n                const st=d.keyTagMain.strTagName.replace(/.+\\:/, \":\");\r\n                return d.keyTagMain.id+st; \r\n            }else{\r\n                return d.keyTagMain.id;\r\n            }\r\n        });\r\n\r\n        //console.log(\"restagarray\",restagarray);\r\n        dispatch(pushNewFormedMemo(restagarray.join(\",\"),text));\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n    }\r\n\r\n    const onEnd=(text)=>{\r\n        //console.log(\" ここで終わり　処理をDispatchする \");\r\n        sendAction(text);\r\n        closeAction();\r\n        \r\n        props.onClose();\r\n    };\r\n    \r\n    const onContinue=(text)=>{\r\n        sendAction(text);\r\n        closeAction();    };\r\n\r\n    const handleClose=()=>{\r\n        //setOpen(false);\r\n        closeAction();\r\n        props.onClose();\r\n    }\r\n\r\n\r\n    const TagButton=(data)=>{\r\n       return (\r\n            <Chip    \r\n                variant={selected.some((el)=>el===data) ? 'outlined': 'default' }\r\n                color={ secondarySet.includes(data.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(data.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        \r\n                label={data.keyTagMain.strTagName}\r\n                clickable\r\n                onClick={(e)=>onClick(data)}\r\n            />\r\n\r\n       )\r\n    };\r\n\r\n    //複数行入力のテキストボックスが分岐で作成できなかったので別関数にする\r\n    const multilineText=(data)=>{\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n                    type={\"text\"}\r\n                    multiline\r\n                    rows= {4} \r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={\"\"}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CheckSpecialTag=(data)=>{\r\n        let inputType=\"none\";\r\n        let defaultValue=\"none\";\r\n        console.log(\"CheckSpecialTag\",data);\r\n        \r\n        const date=new Date();\r\n        switch (data.keyTagMain.numTagType){\r\n            case TAG_NUMBER_INPUT:\r\n                inputType=\"number\";\r\n                defaultValue=0;\r\n                break;\r\n            case TAG_TEXT_INPUT:\r\n                inputType=\"text\";\r\n                defaultValue=\"\";\r\n                break;\r\n        \r\n            case TAG_MULTILINE_INPUT:\r\n                return multilineText(data);\r\n\r\n            case TAG_DATE_INPUT:\r\n                inputType=\"date\";\r\n                defaultValue=date.getFullYear()+\"-\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"-\"+(\"0\"+date.getDate()).slice(-2);\r\n                break;\r\n\r\n            case TAG_TIME_INPUT:\r\n                \r\n                inputType=\"time\";\r\n                defaultValue=(\"0\"+(date.getHours())).slice(-2)+\":\"+(\"0\"+date.getMinutes()).slice(-2);\r\n                break;\r\n            default :\r\n                return (\r\n                    TagButton(data)\r\n                );\r\n        }\r\n\r\n\r\n        //MULTILINE以外は納めることが出来るのでまとめておく\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n\r\n                    type={inputType}\r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={defaultValue}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    const secondarySet=[1]\r\n    const primarySet=[2,3,4,11]\r\n\r\n    return (\r\n        <Modal\r\n\r\n            className={classes.modal}\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n        >\r\n            <div className={classes.paper}>\r\n            \r\n            <div className={classes.root}>\r\n                <div><Typography variant='h6' >簡単情報入力フォーム</Typography> </div>\r\n                <hr/>\r\n                <div>\r\n                {defs.length>0 ?\r\n                    defs.map((d)=>{\r\n                        \r\n                    //console.log(d);\r\n                        return (\r\n                            <Chip    \r\n                                variant='default' \r\n                                color={ secondarySet.includes(d.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　d.keyTagMain.numTagType) ? \"primary\" : \"default\" }\r\n                                label={d.keyTagMain.strTagName}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                    <div/>\r\n                }\r\n                </div>\r\n                { Object.keys(lastOne).length>0 ?    \r\n                    <Chip    \r\n                        variant='outlined'\r\n                        color={ secondarySet.includes(lastOne.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　lastOne.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        label={lastOne.keyTagMain.strTagName}\r\n                        clickable\r\n                        onClick={(e)=>onDelete(lastOne)}\r\n                    />\r\n                    :\r\n                    \r\n                    <div>登録内容を選択してください</div>\r\n\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className={classes.root}>\r\n\r\n            {\r\n            tagArray.length===1 ?\r\n                \r\n                CheckSpecialTag(tagArray[0])\r\n            :tagArray.length>0 ?\r\n                tagArray.map((d)=>{\r\n                    return (\r\n                        TagButton(d)    \r\n                    )\r\n                })\r\n            :\r\n                // 次への選択肢が一切なくなったら\r\n                <div>\r\n                    <div>\r\n                        {/* 最後に文章を書けるようにしておく */}\r\n                        <TextField\r\n                        //id=\"standard-number\"\r\n                        inputRef={textRefMain}\r\n                        className={classes.textField}\r\n\r\n                        label=\"補足\"\r\n                        placeholder=\"特に書くことがなければ登録ボタンを押してください\"\r\n                        InputLabelProps={{\r\n                            shrink: true, }}\r\n                        //onChange={(e)=>onInput(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n\r\n\r\n                        <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onEnd(textRefMain.current.value)}>登録</Button>\r\n                        <Button size={\"small\"} variant='contained' color=\"secondary\" onClick={()=>onContinue()}>さらに登録</Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default FormedTagPutModal;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TestTagListData.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\useWindowDimensions.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\windowScrollControll.js",["501"],"import React from 'react';\r\nimport {throttle} from 'lodash';\r\n\r\nexport const ScrollUpdater=(props)=>{\r\n\r\n    //実行関数　setNewTimeLine\r\n\r\n    //監視パラメータ　timeline\r\n    \r\n\r\n    const checkInEnd=throttle(() => {\r\n        const m1=Math.round(window.innerHeight + document.documentElement.scrollTop);\r\n        const m2=Math.round(document.documentElement.scrollHeight);\r\n        //console.log(\"m1 \",m1,\"m2 \",m2);\r\n\r\n        if (\r\n            //ブラウザによってずれが起きるためトリガーに少しだけ範囲を作る\r\n            Math.abs(m1-m2)>5\r\n        ) {\r\n            return;\r\n        }\r\n        if (!props.endflg)  props.scrollFunc();\r\n    \r\n        }, 200\r\n    );\r\n    \r\n    \r\n    React.useEffect(()=>{\r\n        //画面を切り替えたらとりあえずトップに戻す\r\n        document.documentElement.scrollTop=0;\r\n        props.scrollFunc();\r\n    },[]);\r\n    \r\n    React.useEffect(() => {\r\n        \r\n        window.removeEventListener('scroll', checkInEnd);\r\n        window.addEventListener('scroll', checkInEnd);\r\n        \r\n    \r\n        return () => {\r\n        window.removeEventListener('scroll', checkInEnd);\r\n        \r\n        };\r\n        //propsの中身は随時更新しないと同じ初期値を使いまわすことになる\r\n    }, [props.checkParam]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return (\r\n        <div/>\r\n    )\r\n\r\n}\r\n\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FeedbackSnackBar.js",["502","503"],"import React ,{useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport  {useSnackbar} from 'notistack';\r\n\r\n\r\nconst FeedbackSnackbar=()=> {\r\n\r\n    const {enqueueSnackbar}= useSnackbar();\r\n    const snacklist=useSelector(state=>state.notice_main.snack);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"SNACK!!\");\r\n        if(snacklist.length>0){\r\n\r\n           enqueueSnackbar(snacklist.slice(-1)[0],{ variant: 'info',autoHideDuration:1000});\r\n\r\n        }\r\n    \r\n    }, [snacklist]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default FeedbackSnackbar;",["504","505"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\SideDrawer.js",["506","507","508","509","510","511","512","513","514","515","516","517"],"import React,{useEffect,useState} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SideMenu from './SideMenu';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Drawer  from '@material-ui/core/Drawer';\r\nimport {OPEN_PASSWORD}  from '../lib/ActionTypeString';\r\nimport {LogOutButton} from './parts/AuthButtons';\r\n\r\n\r\nconst drawerWidth=240;\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n  \r\n  \r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideDrawer=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n\r\n    //console.log(\" props.ismobile in drawer\",props.isMobile);\r\n\r\n    return (\r\n        <Drawer \r\n          anchor={\"left\"}\r\n          width={200}          \r\n          variant={ props.mobile ? \"temporary\" :\"permanent\" }\r\n          open={props.open} \r\n          onClose={props.onClose}\r\n          >\r\n            {props.mobile &&\r\n              <IconButton onClick={()=>props.onClose()} ><ArrowBackIcon/></IconButton>\r\n            }\r\n            <SideMenu  onClose={ props.mobile &&  props.onClose }/>\r\n      </Drawer>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideDrawer;\r\n        ","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\reportWebVitals.js",[],["518","519"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\ReplyThreadPage.js",["520"],"import React, {useEffect} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport  {getReplyData} from '../actions';\r\nimport ReplyColumnList  from '../components/ReplyColumnList'\r\nimport ReplyColumn from '../components/ReplyColumns';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst ReplyThreadPage=(props)=>{\r\n    const reply_main=useSelector(state=>state.reply_main);\r\n    console.log(\"reply_main\",reply_main);\r\n    const dispatch=useDispatch();\r\n\r\n    const classes=listStyles();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getReplyData(props.match.params.id));\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"reply_main\",reply_main);\r\n        \r\n    }, [reply_main]);\r\n\r\n    const normalSceane=()=>{\r\n        return (\r\n            <div className={classes.base} >\r\n                \r\n                {reply_main.past_thread.length!==0 ?\r\n                　　<div><div> 過去の履歴 <div/> <ReplyColumnList   data={ reply_main.past_thread } boxstyle={\"thread\"} mark={\"a\"} /></div></div> \r\n                    :\r\n                     <div/> \r\n                }\r\n    \r\n                {Object.keys(reply_main.parent_data).length!==0 ? \r\n                     <div><div> 直近の応答</div><ReplyColumn  data={ reply_main.parent_data } mark={\"b\"}/></div> \r\n                :\r\n                     <div/> \r\n                }\r\n                <div>\r\n                    <ReplyColumn data={reply_main.self_data }  mark={\"e\"} />\r\n                </div>\r\n                {reply_main.child_data.length!==0 ?　　<div><div> 関連する応答 <div/> <ReplyColumnList   data={ reply_main.child_data } boxstyle={\"thread\"} mark={\"c\"}/></div></div> : <div/> }\r\n                {reply_main.future_thread.length!==0 ?　　<div><div> その後の履歴 <div/> <ReplyColumnList   data={ reply_main.future_thread } boxstyle={\"thread\"}  mark={\"d\"} /></div></div> : <div/> }\r\n            \r\n            </div>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        reply_main.load_flg ? normalSceane() :<LinearProgress/> \r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default  ReplyThreadPage;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FavoriteList.js",["521","522","523"],"import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {showFavorite} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Typography } from '@material-ui/core';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst FavoriteList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    \r\n    const timeline=useSelector(state=>state.show_favorite.timeline,[]);\r\n    const read=useSelector(state=>state.show_favorite.read,[]);\r\n    const fav=useSelector(state=>state.show_favorite.fav,[]);\r\n    const endflg=useSelector(state=>state.show_favorite.endflg);\r\n    const [startnum,setStartNum]=useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const setNewTimeLine=()=>{\r\n        dispatch(showFavorite());\r\n        //loadNewMemo(startnum);\r\n    };\r\n\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            <div><Typography variant='h5' gutterBottom >お気に入り一覧</Typography></div>\r\n            <hr/>\r\n            <ScrollUpdater scrollFunc={()=>setNewTimeLine() }  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            {timeline && \r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        \r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }\r\n            {endflg ?  <div><Typography variant='h6' gutterBottom >現在の表示内容は以上です。</Typography></div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FavoriteList;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestTagPutModal.js",["524"],"import React,{useEffect,useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Button} from '@material-ui/core'\r\nimport FormedTagPutModal from '../components/FormedTagPutModal';\r\n//import {tag_start} from '../actions';\r\n\r\nexport const TestTagPutModal=(props)=>{\r\n    const dispatch = useDispatch();\r\n    \r\n    const [open,setOpen] =useState(false);\r\n\r\n\r\n    const TagData=[\r\n        {id:1,type:1,name:\"7番街\",phase:1,　group:\"unit\",  show:[],del:[] },\r\n        {id:2,type:1,name:\"1番街\",phase:1, 　group:\"unit\", show:[],del:[] },\r\n\r\n        {id:42,type:1,name:\"長谷川\",phase:-1,　group:\"user\", show:[1],del:[] },\r\n        {id:43,type:1,name:\"山上\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:54,type:1,name:\"山本\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:66,type:1,name:\"小林\" ,phase:-1, 　group:\"user\",show:[2],del:[] },\r\n        {id:102,type:14,name:\"登録時間\" , phase:-1,show:[42,43],del:[] },\r\n        \r\n\r\n        {id:8,type:2,name:\"排泄\"  , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:10,type:2,name:\"入浴\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:11,type:2,name:\"食事\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:12,type:2,name:\"自力\" , group:\"meel_style\", phase:-1,show:[11],del:[13]},\r\n        {id:13,type:2,name:\"介助\" ,group:\"meel_style\",phase:-1,show:[11],del:[12]},\r\n        \r\n        {id:15,type:2,name:\"徘徊\" ,group:\"action\",phase:2,show:[],del:[8,10,11]},\r\n        {id:19,type:3,name:\"少し\" , group:\"meel_amount\", phase:-1,show:[12,13],del:[20,21]},\r\n        {id:20,type:3,name:\"半分\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,21]},\r\n        {id:21,type:3,name:\"全て\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,20]},\r\n        {id:34,type:3,name:\"シャワー\",  group:\"bath_style\",phase:-1,show:[10],del:[46]},\r\n        {id:46,type:3,name:\"洗身\", group:\"bath_style\", phase:-1,show:[10],del:[34]},\r\n        {id:70,type:2,name:\"バイタル\", group:\"action\", phase:2,show:[],del:[8,10,11,15]},\r\n        {id:71,type:2,name:\"血圧\", group:\"bytal_type\", phase:-1,show:[70],del:[72]},\r\n        {id:72,type:2,name:\"脈拍\",  group:\"bytal_type\", phase:-1,show:[70],del:[71]},\r\n        \r\n        {id:73,type:11,name:\"最高\",phase:-1,show:[71],del:[]},\r\n        {id:74,type:11,name:\"最低\",phase:-1,show:[73],del:[]},\r\n    ];\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n    //    dispatch(tag_start());\r\n        \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>setOpen(true)}>開く</Button>\r\n            \r\n            <hr/>\r\n                <FormedTagPutModal data={TagData} open={open} onClose={()=>setOpen(false)} />\r\n\r\n            \r\n            <hr/>   \r\n        </div>\r\n    )\r\n\r\n}",["525","526"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\reducers\\index.js",["527","528","529","530","531","532"],"import {combineReducers} from 'redux';\r\n//import {reducer as formReducer} from 'redux-form';\r\nimport  {PUSH_SHOW_MEMO_BUTTON,\r\n        CLOSE_MEMOMAKE,\r\n        LOAD_NEW_MEMO,\r\n        RESET_MEMO,\r\n        MEMO_END,\r\n        MEMO_EDIT_END_MAIN,\r\n        MEMO_EDIT_END_TAG,\r\n        AUTH_SUCCESS,\r\n        MEMO_INSERT_END,\r\n        RESET_TAG,\r\n        TAGGED_SEARCH,\r\n        LOADING_START,\r\n        LOADING_END,\r\n        TAGGED_SEARCH_CONTINUE,\r\n        SHOW_REPLY,\r\n        GET_NOTICE_LIST,\r\n        MAKE_NEWFOLLOW_MODAL,\r\n        DELETE_NEWFOLLOW_MODAL,\r\n        MAKE_NEW_REPLY_MODAL,\r\n        DELETE_NEW_REPLY_MODAL,\r\n        SHOW_SNACK,\r\n        SHOW_FAVORITE,\r\n        USER_CONFIG_LIST,\r\n        CHANGE_USER_CONFIG,\r\n        ERROR_RESET,\r\n        RESULT_ERROR,\r\n        CONNECT_ERROR,\r\n        CRITICAL_ERROR,\r\n        SHOW_TAG_ADMIN,\r\n        MAKE_TAG_ADMIN,\r\n        MODIFY_TAG_ADMIN\r\n    } from '../lib/ActionTypeString';\r\n\r\nimport  {useSnackbar} from 'notistack';\r\n\r\nconst INIT_ACTION={\r\n    type:\"NONE\",\r\n    user_list:[],\r\n    unit_list:[],\r\n    timeline:[],\r\n    isPrivate:false,\r\n    login_id:\"\",\r\n    results:[],\r\n    endflg:false,\r\n    notices:[]\r\n};\r\n\r\n//最初の認証時に取得する情報　各種各ユーザー情報など\r\nconst INIT_AUTH_STATE={\r\n    isLoad:false,\r\n    user_list:[],\r\n    main_tag:[],\r\n    sub_tag:[],\r\n    all_tag:[],\r\n    formatted:[],\r\n    user_config:[]\r\n\r\n};\r\n\r\nconst auth_login=(state=INIT_AUTH_STATE,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n    \r\n    switch (action.type) {\r\n        case LOADING_START:\r\n            return {\r\n                ...state,\r\n                isLoad:true\r\n            };\r\n        case LOADING_END:\r\n            return {\r\n                ...state,\r\n                isLoad:false\r\n            };\r\n\r\n        case AUTH_SUCCESS:\r\n            //console.log(action);\r\n            const userConf=result.res;\r\n            \r\n            return  { ...state,\r\n                userId:userConf.userId,\r\n                userRank:userConf.userRank,\r\n                user_list:userConf.user_list,\r\n                main_tag:userConf.main,\r\n                sub_tag:userConf.sub,\r\n                all_tag:userConf.all,\r\n                formatted:userConf.formatted\r\n                //unit_list:result.unit_list\r\n                //tag_list:action.tag_list\r\n            };\r\n\r\n    \r\n        case USER_CONFIG_LIST:\r\n        \r\n            return  { ...state,\r\n                user_config:result.user_config,\r\n            };\r\n        case CHANGE_USER_CONFIG:\r\n            //こまめに値を返さないと表示がずれるので現状を返す\r\n            return  { ...state,\r\n                main_tag:result.main_tag,\r\n                sub_tag:result.sub_tag,\r\n                user_config:result.user_config,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst INIT_TAG_ADMIN_STATE={\r\n    tag_list:[],\r\n    change:0\r\n};\r\n\r\nconst tag_admin=(state=INIT_TAG_ADMIN_STATE,action=INIT_ACTION)=>{\r\n    switch(action.type){\r\n        case SHOW_TAG_ADMIN:\r\n            console.log(\"SHOW_TAG_ADMIN DONE\");\r\n            return {...state,\r\n                tag_list:action.result.tag_list\r\n            }; \r\n\r\n        case MAKE_TAG_ADMIN:\r\n        case MODIFY_TAG_ADMIN:\r\n            return {\r\n                ...state,\r\n                change:action.result.change\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst INIT_USER_TAG={\r\n    user_config:[]\r\n\r\n}\r\n\r\n\r\n\r\n//各ユーザーのログイン時のやり取り\r\nconst INIT_USER_STATE={\r\n    login_id:-1,\r\n    open_password:false,\r\n};\r\n\r\nconst INIT_MEMO_MAIN_STATE={\r\n    timeline:[],\r\n    read:[],\r\n    fav:[],\r\n    memomake_open:false,\r\n    endflg:false,\r\n    change:0\r\n};\r\n\r\nconst INIT_MEMO_STATE=\"\";\r\n\r\nconst memo_main=(state=INIT_MEMO_MAIN_STATE,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n\r\n    switch(action.type){\r\n        case RESET_MEMO:\r\n            return {...state,\r\n                timeline:result.timeline,\r\n                read:result.read,\r\n                fav:result.fav,\r\n                endflg:result.endFlg\r\n            }; \r\n            \r\n        case LOAD_NEW_MEMO:\r\n            //console.log(action);\r\n            const resA=state.timeline.concat().concat(result.timeline);\r\n            const read=state.read.concat().concat(result.read);\r\n            const fav=state.fav.concat().concat(result.fav);\r\n\r\n            //resA.concat(action.timeline);\r\n           // console.log(resA);\r\n\r\n        \r\n            return {...state,\r\n                timeline:resA,\r\n                read:read,\r\n                fav:fav,\r\n                //results:action.results,\r\n                endflg:result.endflg\r\n            }; \r\n\r\n        case MEMO_EDIT_END_MAIN:\r\n            \r\n            console.log(\"result:\",result);\r\n            const newtimeline=state.timeline.map((d)=> d.id===result.id ? result : d );\r\n            return {\r\n                ...state,\r\n                timeline:newtimeline\r\n            };\r\n            \r\n        case PUSH_SHOW_MEMO_BUTTON:\r\n            //console.log(state);\r\n\r\n            return Object.assign({},state,{\r\n                isPrivate:action.isPrivate,\r\n                memomake_open:action.memomake_open}\r\n            );\r\n\r\n\r\n        case CLOSE_MEMOMAKE:\r\n            return Object.assign({},state,{ memomake_open:false}\r\n            );\r\n\r\n        case MEMO_END:\r\n            return {...state,\r\n                timeline:[],\r\n                read:[],\r\n                fav:[],\r\n                //results:action.results,\r\n                endflg:false\r\n            };\r\n\r\n            case MEMO_INSERT_END:\r\n                return {...state,\r\n                    change:result.change\r\n                };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const tagged_main=(state=INIT_TAGGED_SEARCH,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n\r\n    switch(action.type){\r\n\r\n\r\n\r\n        case TAGGED_SEARCH:\r\n            return {...state,\r\n                timeline:result.timeline,\r\n                read:result.read,\r\n                fav:result.fav,\r\n                endflg:result.endflg\r\n            };     \r\n        \r\n        case TAGGED_SEARCH_CONTINUE:\r\n            if( result.timeline.length==0){\r\n                console.log(\" has no next \");\r\n                return {...state,\r\n                    endflg:result.endflg\r\n                }; \r\n    \r\n            }\r\n\r\n            return {...state,\r\n                timeline:state.timeline.concat().concat(result.timeline),\r\n                read:state.read.concat().concat(result.read),\r\n                fav:state.fav.concat().concat(result.fav),\r\n                //results:action.results,\r\n                endflg:result.endflg\r\n            }; \r\n\r\n        case MEMO_EDIT_END_TAG:\r\n            console.log(\"result:\",result);\r\n            const newtimeline=state.timeline.map((d)=> d.id===result.id ? result : d );\r\n            return {\r\n                ...state,\r\n                timeline:newtimeline\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst show_favorite=(state=INIT_MEMO_STATE,action)=>{\r\n    switch(action.type){\r\n        case SHOW_FAVORITE:\r\n            return {...state,\r\n                timeline:action.result.timeline,\r\n                read:action.result.read,\r\n                fav:action.result.fav,\r\n                endflg:action.result.endFlg\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst INIT_TAGGED_SEARCH={\r\n    timeline:[],\r\n    read:[],\r\n    fav:[],\r\n    endflg:false,\r\n    change:0\r\n};\r\n\r\nconst INIT_REPLY_MAIN={\r\n    self_data:{},\r\n    reply_source:{},\r\n    parent_data:null,\r\n    past_thread:[],\r\n    child_data:[],\r\n    future_thread:[],\r\n    load_flg:false\r\n};\r\n\r\n\r\nconst INIT_FOLLOW_ACTION={\r\n    follow_data:{},\r\n\r\n};\r\n\r\n\r\nexport const follow_main=(state=INIT_FOLLOW_ACTION,action)=>{\r\n    switch (action.type){\r\n\r\n        case MAKE_NEWFOLLOW_MODAL:\r\n            return {\r\n                ...state,\r\n                follow_data:action.follow_data,\r\n            };\r\n        case DELETE_NEWFOLLOW_MODAL:\r\n            return {\r\n                ...state,\r\n                follow_data:{},\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const reply_main=(state=INIT_REPLY_MAIN,action)=>{\r\n    switch(action.type){\r\n\r\n        case MAKE_NEW_REPLY_MODAL:\r\n            return {\r\n                ...state,\r\n                reply_source:action.reply_source\r\n            };\r\n        case DELETE_NEW_REPLY_MODAL:\r\n            return {\r\n                ...state,\r\n                reply_source:{}\r\n            };\r\n\r\n\r\n        case SHOW_REPLY:\r\n            \r\n            const result=action.result;\r\n            console.log(\" reply source \",result);\r\n\r\n            const past_thread=[];\r\n            const child_data=[];\r\n            const future_thread=[];\r\n            let parent_data={};\r\n            console.log(\" reply timeline \",result.timeline);\r\n\r\n            const self_data=result.timeline.find((d) => d.id===parseInt(result.id));\r\n                \r\n            result.timeline.map((d)=>{\r\n                if(d.id<self_data.id){\r\n                    if(self_data.keyParent===d.id){\r\n                        parent_data=d;\r\n                    }else{\r\n                        past_thread.push(d);\r\n                    }\r\n                }else if( d.id > self_data.id ){\r\n                    if(d.keyParent===self_data.id){\r\n                        child_data.push(d);\r\n                    }else{\r\n                        future_thread.push(d);\r\n                    }\r\n                }\r\n            });\r\n            \r\n\r\n            return {...state,\r\n                self_data:self_data,\r\n                parent_data:parent_data,\r\n                past_thread:past_thread,\r\n                child_data:child_data,\r\n                future_thread:future_thread,\r\n                endFlg:true,\r\n                load_flg:true\r\n                \r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst INIT_NOTICE={\r\n    notices:[],\r\n    snack:[],\r\n    count:0\r\n};\r\n\r\nexport const notice_main=(state=INIT_NOTICE,action=INIT_ACTION)=>{\r\n    switch (action.type){\r\n        case GET_NOTICE_LIST:\r\n            return {\r\n                ...state,\r\n                notices:action.result.notices,\r\n                count:action.result.count     \r\n            };\r\n        case SHOW_SNACK:\r\n\r\n            return {\r\n                ...state,\r\n                snack:[...state.snack,action.msg]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst ERROR_DATA={\r\n    errorFlg:false,\r\n    errorMsg:\"\",\r\n    errorCode:-1\r\n    \r\n};\r\nconst error_control=(state= ERROR_DATA,action=INIT_ACTION) =>{\r\n\r\n    const results=action.result;\r\n    switch (action.type){\r\n        case ERROR_RESET:\r\n            return ERROR_DATA;\r\n\r\n        case RESULT_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: results.errorMsg,\r\n                errorCode:results.errorCode,\r\n            };\r\n        case CRITICAL_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: action.result.errorMsg\r\n            };\r\n\r\n        case CONNECT_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: \"通信エラーが発生再接続します\"\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default combineReducers(\r\n    {memo_main,\r\n    auth_login,\r\n    tagged_main,\r\n    reply_main,\r\n    notice_main,\r\n    follow_main,\r\n    show_favorite,\r\n    error_control,\r\n    tag_admin\r\n});","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\App.js",["533","534"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ActionTypeString.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\TagInputList.js",["535","536","537"],"import {useState,useEffect} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Chip,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTagInfo } from '../lib/UtilityLibrary';\r\n\r\n\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    asummary:{\r\n        borderRadius:5,\r\n        backgroundColor:\"lightblue\",\r\n        borderColor:\"gray\",\r\n        border:\"2px\"\r\n\r\n    },\r\n    nontag:{\r\n        color:\"#ccc\",\r\n        fontSize:\"12pt\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    \r\n\r\n}));\r\n\r\n\r\nconst TagInputList=(props)=>{\r\n    \r\n\r\n    const classes=useStyles();\r\n    const [selected,setSelected]=useState([]);\r\n    const [value,setValue]=useState(0);\r\n    const main_tag=useSelector(state=>state.auth_login.main_tag);\r\n    const sub_tag=useSelector(state=>state.auth_login.sub_tag);\r\n    const all_tag=useSelector(state=>state.auth_login.all_tag);\r\n\r\n    const [nameSearch,setNameSearch]=useState([]);\r\n\r\n    const handleChange = (event, value) => {\r\n        setValue(value);\r\n    };\r\n\r\n\r\n    const onTagClick=(data)=>{\r\n        let nowselected=[];\r\n\r\n        if (selected.some((el)=>el===data)){\r\n            nowselected=selected.reduce((prev,current)=>{\r\n                if( current !== data) prev.push(current);\r\n                return prev;\r\n             },[]);\r\n        }else{\r\n            //中身をソートする\r\n            nowselected=[...selected,data];\r\n        }\r\n        setSelected(nowselected);\r\n        console.log(nowselected);\r\n        //dispatch(getTaggedData(nowselected,0));\r\n        props.setSelected(nowselected);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.end){\r\n            setSelected([]);\r\n        }\r\n        \r\n    }, [props.end]);\r\n\r\n    \r\n    const TagSearchSet=()=>{\r\n        const onChange=(e)=>{\r\n            const str=e.target.value;\r\n            if (str==\"\") {\r\n                setNameSearch([]);\r\n                return; \r\n            }    \r\n            const resB=all_tag.filter(data=>data.strTagName.includes(e.target.value));\r\n            setNameSearch(resB);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <TextField \r\n                    label=\"検索ワード\"\r\n                    placeholder=\"探すタグの一部を入力\"\r\n                    onChange={onChange}  \r\n                    variant=\"outlined\" />\r\n                <div>\r\n                {            \r\n                    nameSearch.map((d)=>{\r\n\r\n                        return (\r\n                            <Chip\r\n                                key={d.id}    \r\n                                variant={selected.some((el)=>el===d) ? 'outlined': 'default' }\r\n                                color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                                label={d.strTagName}\r\n                                clickable\r\n                                onClick={(e)=>onTagClick(d)}\r\n                            />\r\n                        );\r\n                    })\r\n\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n    const makeTagList=(list)=>{\r\n    \r\n        return  list.map((m)=>{\r\n            \r\n            const d=getTagInfo(all_tag,m.keyTag);\r\n\r\n            return (\r\n                <Chip\r\n                    key={d.id}    \r\n                    variant={selected.some((el)=>el===d) ? 'outlined': 'default' }\r\n                    color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                    label={d.strTagName}\r\n                    clickable\r\n                    onClick={(e)=>onTagClick(d)}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    const tagNameSearchInit=()=>{\r\n        setNameSearch([]);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div>\r\n            <Tabs value={value} onChange={handleChange} >\r\n                <Tab label=\"メインタグ\"  />\r\n                <Tab label=\"サブタグ\"  />\r\n                <Tab label=\"タグ検索\"  onClick={tagNameSearchInit} />\r\n                <Tab label=\"タグ非表示\"  />\r\n\r\n            </Tabs>\r\n        </div>\r\n        <div hidden={value !== 0 }  className={classes.root}> { value === 0 && makeTagList(main_tag) }</div>\r\n        <div hidden={value !== 1 }  className={classes.root}> { value === 1 &&  makeTagList(sub_tag) }</div>\r\n        <div hidden={value !== 2 }  className={classes.root}> { value === 2 &&  TagSearchSet() }</div>\r\n        \r\n        <hr/>\r\n            <span>検索タグ:  </span>\r\n            {selected.length>0 ?\r\n                selected.map((d)=>{\r\n                    return (\r\n                        <Chip \r\n                        \r\n                            key={d.id}  \r\n                            variant='default' \r\n                            color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                            label={d.strTagName}\r\n                            onClick={(e)=>onTagClick(d)}\r\n                        />\r\n                    )\r\n                })\r\n            :\r\n            <span className={classes.nontag}>タグを1個以上選択してください</span>\r\n            }\r\n            \r\n        <hr/>\r\n        </div>      \r\n    )\r\n        \r\n};\r\n\r\nexport default TagInputList;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TestMain.js",["538","539"],"import React from 'react';\r\n\r\n// import TestHooks  from './TestHooks';\r\n// import TestMemoInsertButton  from './TestMemoInsertButton';\r\n// import TestMakeMemoModal  from './TestMemoMakeModal';\r\n// import TestMemoDeleteModal  from './TestMemoDeleteModal';\r\n// import {TestMemoColumn} from '../test/TestMemoColumn';\r\n// import {TestMainHeader} from './TestMainHeader';\r\n//import TestPasswordModal from '../test/TestPasswordModal';\r\n//import TestLogoutModal from '../test/TestLogoutModal';\r\n//import TestSearchForm from '../test/TestSearchForm';\r\n// import TestMemoThread from '../test/TestMemoThread';\r\n// import TestFollowColumn from './TestFollowColumn';\r\n// import TestFollowList from './TestFollowList';\r\n// import {TestMemoList} from './TestMemoList';\r\n import TestAuthAction  from '../test/TestAuthAction';\r\n//import { TestTagSearchPanel } from '../test/TestTagSearcPanel';\r\n//import { TestTagSearchList } from '../test/TestTagSearcList';\r\n//import TestReplyColumnList from '../test/TestReplyColumnList';\r\n// import {TestTagPutModal} from '../test/TestTagPutModal';\r\n//import {TestNoticeColumn} from '../test/TestNoticeColumn';\r\n//import {TestNoticeList} from '../test/TestNoticeList ';\r\nimport {TestFreeTagPutModal} from '../test/TestFreeTagPutModal';\r\nimport TestLoading from '../test/TestLoading';\r\n\r\nconst TestMain=(props)=>{\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test Main</h1>\r\n            <TestAuthAction/> \r\n            {/*  <TestMemoInsertButton/>\r\n            <TestMakeMemoModal/>\r\n             \r\n            <TestPasswordModal/>\r\n            <TestLoading/>\r\n            {/*<TestMemoDeleteModal/>\r\n            <TestMemoList/>\r\n            <TestTagSearchPanel/>\r\n            <TestTagSearchList/>\r\n            <TestReplyColumnList/>\r\n            <TestTagPutModal/>\r\n            <TestNoticeColumn/>\r\n            <TestNoticeList />\r\n            \r\n            <TestFreeTagPutModal/>\r\n\r\n            <TestSearchForm/>\r\n            <TestMainHeader/> \r\n            <TestFollowColumn/>\r\n            <TestFollowList/>*/}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TestMain;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\ReplyColumns.js",["540","541","542"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\nimport  {useSelector} from 'react-redux'\r\nimport {Collapse,IconButton,Box}  from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\n\r\n\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport  {getDateMessage,getUserName} from  '../lib/UtilityLibrary';\r\n\r\n//重要\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoSub:{            \r\n        width: '80%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoChild:{            \r\n        width: '85%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n    memoParent:{            \r\n        width: '85%',\r\n        //right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #555555',\r\n      },\r\n\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n\r\n\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n        \r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",\r\n        \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    textarea:{\r\n       // width:\"100%\",\r\n       // height:100\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst ReplyColumn=({data,boxstyle,mark})=>{\r\n    const TEXT_LIMIT=40;\r\n    const dd=data;\r\n    //console.log(mark);\r\n    console.log(\"rpc\",dd);\r\n    console.log(\"rpc str\",dd.strMainText);\r\n    \r\n    \r\n    const setHeaderText=(txt)=>{\r\n        //if (typeof txt ===\"undefined\") console.log(\"txt undefined \");\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    const classes=useStyles();\r\n    //const [maintext,setMainText] =useState(setHeaderText(dd.strMainText));\r\n    const [maintext,setMainText] =useState(dd.strMainText);\r\n\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n    const tag_list = useSelector(state => state.auth_login.all_tag,[]);\r\n    const hasRead=useSelector(state=>state.memo_main.read);\r\n    const favorite=useSelector(state=>state.memo_main.fav);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [hasStar, setHasStar] = useState(favorite.includes(data.id));\r\n    const [read, setRead] = useState(hasRead.includes(data.id));\r\n    const [bstyle,setBoxStyle]=useState(classes.memo);\r\n\r\n    const checkText=(exp)=>{\r\n        if(exp){\r\n            setMainText(dd.strMainText);\r\n        }else{\r\n            setMainText(setHeaderText(dd.strMainText) );\r\n        }\r\n    }\r\n\r\n    const onExpanded=()=>{\r\n        // if(!expanded){\r\n        //     setMainText(dd.strMainText);\r\n        // }else{\r\n        //     setMainText(setHeaderText(dd.strMainText) );\r\n        // }\r\n        checkText(!expanded);\r\n\r\n        setExpanded(!expanded);\r\n\r\n    };\r\n\r\n    const onStarClick=()=>{\r\n        setHasStar(!hasStar);\r\n        //後はidとstar情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!read);\r\n        //後はidとread情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const getNames=(arr)=>{\r\n        const ars=String(arr).split(\",\");\r\n        const names=ars.map((d)=>{\r\n           const tg=user_list.find((el)=>el.id===parseInt(d))\r\n           return tg.strName;\r\n        })\r\n        \r\n        return names.reduce((acc,value)=>acc+\",\"+value)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //setMainText(dd.strMainText);\r\n       // setMainText(setHeaderText(dd.strMainText) );\r\n       checkText(expanded);\r\n        switch(boxstyle){\r\n            case \"thread\":\r\n                 setBoxStyle(classes.memoSub);\r\n                break;\r\n            case \"parent\":\r\n\r\n                setBoxStyle(classes.memoParent);\r\n                break;\r\n            \r\n            case \"child\" :\r\n                setBoxStyle(classes.memoChild);\r\n                break;\r\n            default:\r\n                setBoxStyle(classes.memo);\r\n                break;\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box  className={bstyle}>\r\n                    <div className={classes.ulbutton} >\r\n                        <span className={classes.headertext}>\r\n                        <div> { getDateMessage(data.datePublish) }</div> <div>{getNames(data.keySender)}より </div> \r\n                        </span>\r\n                        <span className={classes.icons}>\r\n                            <IconButton onClick={onStarClick}>\r\n                                {hasStar ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                            </IconButton>\r\n                            \r\n                        </ span>\r\n                      \r\n                        <span className={classes.icons} >\r\n                            <IconButton onClick={onReadClick} >\r\n                                {read ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                            </IconButton>\r\n                        \r\n                        </span>\r\n\r\n                        <div className={classes.icons} >\r\n                                <IconButton onClick={onExpanded} >\r\n                                    {expanded ? ( <ExpandLessIcon/> ):( <ExpandMoreIcon/> )}\r\n                                </IconButton>    \r\n                            </div>\r\n                          \r\n    \r\n                    </div>\r\n                          \r\n                    <Collapse in={expanded} collapsedHeight={30}> \r\n                        <div onClick={onExpanded} className={classes.ulbutton}>\r\n                            <div className={classes.textarea}>{maintext}</div>\r\n                            \r\n                        </div>\r\n                        <div className={classes.ulbutton} >\r\n                            <div>\r\n                                <IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} ><ReplyTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" ize=\"small\" color=\"inherit\"  ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" size=\"small\" color=\"inherit\"  ><DeleteOutlinedIcon size=\"small\"/></IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n     \r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ReplyColumn;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\UserTagConfigList.js",["543","544","545","546","547","548","549","550","551","552","553"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TYPE_TAG_GUEST,TYPE_TAG_MENBER} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport {loadUserConfig,changeUserConfig,resetUserConfig} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nexport const UserTagConfigColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.tag_list);\r\n    const [status,setStatus]=useState(props.data.numTagStatus);\r\n    const [isShow,setIsShow]=useState(props.data.boolIsShownInList);\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n    const onChangeTabSearch=(e,id)=>{\r\n        //変更はSnackBarのみで知らせる\r\n        const stnow=e.target.value;\r\n\r\n        setStatus(stnow);\r\n        dispatch(changeUserConfig(id,stnow,isShow));\r\n\r\n\r\n    };\r\n\r\n    const onChangeListView=(id)=>{\r\n        setIsShow(!isShow);        \r\n        dispatch(changeUserConfig(id,status,!isShow));\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div  >\r\n        <span> <GetTagName id={props.data.keyTag}/> </span>\r\n        <span>\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                value={status}\r\n                onChange={(e)=>onChangeTabSearch(e,props.data.keyTag)}\r\n                name=\"status\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option　defaultChecked value=\"1\">メインリスト</option>\r\n                    <option value=\"2\">サブリスト</option>\r\n                    <option value=\"-1\">検索のみ</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n\r\n        </span>\r\n        <span>\r\n          <FormControlLabel\r\n                control={\r\n                <Checkbox\r\n                    checked={isShow}\r\n                    onChange={(e)=>onChangeListView(props.data.keyTag)}\r\n                    //name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n                }\r\n                label=\"一覧表示\"\r\n            />\r\n          </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst UserTagConfigList=()=>{\r\n    \r\n\r\n    const uConfigList=useSelector(state=>state.auth_login.user_config,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n    const classes=useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserConfig());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get config change\");\r\n    }, [uConfigList]);\r\n\r\n    const onResetClick=()=>{\r\n        dispatch(resetUserConfig()); \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button \r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    onClick={onResetClick} \r\n                    >全タグリセット</Button>\r\n            </div>\r\n\r\n        {uConfigList.length>0 &&\r\n            uConfigList.map((d)=>{\r\n                return ( <UserTagConfigColumn\r\n                    data={d}/>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagConfigList;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestMemoColumn.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\TagChip.js",["554","555","556","557"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Chip} from '@material-ui/core';\r\nimport {TYPE_TAG_GUEST,TYPE_TAG_MEMBER} from '../../lib/TagTypeNames'; \r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport { makeStyles,createStyles,Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  ({\r\n    funcColor:{\r\n        color:\"red\",\r\n      borderColor:\"red\"\r\n    }, \r\n    staffColor:{\r\n      color:\"green\",\r\n      borderColor:\"green\"\r\n    },\r\n    guestColor:{\r\n      color:\"gold\",\r\n      borderColor:\"gold\"\r\n    },\r\n    placeColor:{\r\n        color:\"blue\",\r\n        borderColor:\"blue\"\r\n    },\r\n    actionColor:{\r\n        color:\"blue\",\r\n        borderColor:\"blue\"\r\n    },\r\n  }));\r\n\r\nexport const TagChip=({d})=>{\r\n    const tag_source=useSelector(state=>state.auth_login.all_tag);\r\n\r\n    const classes=useStyles();\r\n\r\n    const colorPalette=[\r\n        \"info\",\r\n        classes.staffColor,\r\n        classes.guestColor,\r\n        classes.placeColor,\r\n        classes.actionColor\r\n    ];\r\n    //console.log(\"tagchip\", d);\r\n\r\n    const sd=d.split(\":\");\r\n    const tagdata=tag_source.find(el=> el.id==sd[0]);\r\n    //console.log(\"data:\" ,tagdata);\r\n    let name=\"\";\r\n    \r\n    if( !tagdata|| typeof(tagdata)=='undefined'){\r\n        return (<Chip label={\"不明\"}/>)\r\n    }else if (sd.length==2){\r\n        name= tagdata.strTagName+\":\"+sd[1];\r\n    }else{\r\n        name=tagdata.strTagName;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Chip\r\n            \r\n            icon={tagdata.numTagType===TYPE_TAG_GUEST ?\r\n                <FaceIcon/>                            \r\n                : tagdata.numTagType===TYPE_TAG_MEMBER &&\r\n                <TagFacesIcon/>\r\n                \r\n            }\r\n\r\n            variant=\"outlined\"\r\n            size='small'\r\n            className={colorPalette[(tagdata.numTagType)-1] }\r\n            label={name}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport const TagChipList=({listStr})=>{\r\n    const list=listStr.split(\",\");\r\n\r\n    return(\r\n        list.map((d)=>{\r\n            return (<TagChip d={d} />)\r\n        })\r\n    \r\n    )\r\n\r\n}\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\UserConfigListPage.js",["558","559","560","561","562","563"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagConfigList from '../components/UserTagConfigList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst UserConfigListPage=(props)=>{\r\n    \r\n    const classes=listStyles();\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagConfigList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  UserConfigListPage;",["564","565"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\MainListPage.js",["566","567","568"],"import React,{useEffect} from 'react';\r\nimport MemoList from \"../components/MemoList\";\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { loadNewMemo } from '../actions';\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n\r\n//メインページの画面メイン\r\nconst MainListPage=(props)=>{\r\n    \r\n    //これはここで行う\r\n    APICallController.setView(\"main\");\r\n\r\n    const tag_list=useSelector(state=>state.auth_login.all_tag);\r\n    //メモの更新が行われた後、再度一覧を取得する\r\n\r\n    return (\r\n            <div className=\"page\">\r\n                {tag_list &&\r\n                    <MemoList/>\r\n                }            \r\n                <CirculerLoading isModal={false} />\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  MainListPage;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TestReplyThreadData.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\FreeTagInputModal.js",["569","570","571","572","573","574","575","576","577"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {Modal,\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewMemo,setReplyData} from '../actions';\r\nimport {getTimeStampNow,checkHasContent} from '../lib/UtilityLibrary';\r\nimport TagInputList from './TagInputList';\r\nimport SummaryMemo from './parts/SummaryMemo';\r\nimport { DELETE_NEWFOLLOW_MODAL,DELETE_NEW_REPLY_MODAL } from '../lib/ActionTypeString';\r\n\r\n\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    asummary:{\r\n        borderRadius:5,\r\n        backgroundColor:\"lightblue\",\r\n        borderColor:\"gray\",\r\n        border:\"2px\"\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    \r\n\r\n}));\r\n\r\n\r\nconst FreeTagInputModal=(props)=>{\r\n    \r\n\r\n    const classes=useStyles();\r\n    const [selected,setSelected]=useState([]);\r\n    const [end,setEnd]=useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    const[hasTime,setHasTime ]=useState(false);\r\n    const [registTime,setRegistTime]=useState(\"\");\r\n    const [canSubmit,setCanSubmit]=useState(false);\r\n    const [mainText,setMainText]=useState(\"\");\r\n    const textRef=useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if ( selected.length==0||mainText.length==0 || (hasTime && registTime==\"\") ){\r\n            setCanSubmit(false);\r\n        }else{\r\n            setCanSubmit(true);\r\n        }\r\n    });\r\n\r\n    const inputCheck=(text)=>{\r\n        setMainText(text);\r\n    };\r\n\r\n    const onSubmit=(text)=>{\r\n        const tagArray= selected.map((d)=>d.id);\r\n        let timeS=getTimeStampNow();\r\n        if (hasTime) timeS=registTime;\r\n        console.log(timeS,hasTime);\r\n        let follow=-1;\r\n        if(checkHasContent(props.reply_source)){\r\n\r\n            dispatch(setReplyData(tagArray.join(','),text,timeS,props.reply_source ));\r\n        }else{\r\n            if (checkHasContent(props.follow_data)) follow=props.follow_data.id;\r\n\r\n            dispatch(pushNewMemo(tagArray.join(','),text,timeS,follow ));    \r\n        }\r\n\r\n        //画面けし処理も追加する\r\n        closeAction();\r\n\r\n    };\r\n\r\n    const onClose=()=>{\r\n        closeAction();\r\n    };\r\n\r\n    const setRegistTimeManual=(str)=>{\r\n        console.log(\"time change\"+str);\r\n        setRegistTime(str);\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setRegistTime(\"\");\r\n        setHasTime(false);\r\n        setCanSubmit(false);\r\n        setMainText(\"\");\r\n        props.onClose();\r\n\r\n        if(checkHasContent( props.follow_data )) dispatch({type:DELETE_NEWFOLLOW_MODAL});\r\n        if(checkHasContent(props.reply_source)) dispatch({type:DELETE_NEW_REPLY_MODAL});\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n        \r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={props.open }\r\n            className={classes.modal}\r\n            onClose={()=>onClose()}\r\n            closeAfterTransition\r\n        >\r\n        <Fade in={props.open}>\r\n            \r\n            <Card className={classes.root}>\r\n                { checkHasContent( props.reply_source ) && \r\n                    <div>\r\n                        <SummaryMemo data={props.reply_source}/>\r\n                        <div>下矢印</div>\r\n\r\n                    </div>\r\n                }\r\n                \r\n\r\n                <TagInputList setSelected={setSelected} end={end} />\r\n                { checkHasContent( props.follow_data ) && \r\n                    <div>\r\n                    <div>転送</div>\r\n                    <SummaryMemo data={props.follow_data}/>\r\n                    </div>\r\n                }\r\n                \r\n                <TextField\r\n                    id=\"filled-textarea\"\r\n                    label=\"入力内容\"\r\n                    inputRef={textRef}\r\n                    placeholder=\"タグは1種類以上選択しましょう\"\r\n                    multiline\r\n                    minRows={3}\r\n                    fullWidth\r\n                    onChange={(e)=>inputCheck(e.target.value)}\r\n                />\r\n                <div>\r\n                    <span>\r\n                        <Button color=\"primary\" variant=\"outlined\" onClick={()=>setHasTime(!hasTime)} > \r\n                            {!hasTime ? <span>時刻を入れる</span>  :  <span>時刻は外す</span> }  \r\n                        </Button>\r\n                    </span>\r\n                    {hasTime &&\r\n                        <span> <TextField  className={classes.textField} type=\"datetime-local\" onChange={(e)=> setRegistTimeManual(e.target.value) } /> </span>\r\n\r\n                    }\r\n                    {canSubmit ?\r\n                        <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onSubmit(textRef.current.value)} >投稿</Button> </span>\r\n                        :\r\n                        <span><Button color=\"primary\" variant=\"contained\" disabled  >投稿</Button> </span>\r\n\r\n                    }\r\n                    \r\n                </div>\r\n            </Card>\r\n        </Fade>\r\n        </Modal>\r\n\r\n    )\r\n        \r\n\r\n\r\n\r\n};\r\n\r\nexport default FreeTagInputModal;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoInsertButton.js",["578","579","580","581","582","583"],"import React,{useState} from 'react';\r\nimport {useDispatch}  from 'react-redux';\r\nimport {Fab,Menu,MenuItem,Popover,Breadcrumbs,Link,Typography}  from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\n\r\n\r\n//import {pushNewMemo}  from '../actions';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from '../lib/ActionTypeString';\r\nimport { EmailOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    fabButton:{\r\n        position:\"fixed\",\r\n        bottom:10,\r\n        right:10,\r\n        zIndex:100\r\n\r\n    },\r\n    Iconspace:{\r\n      marginRight:theme.spacing(2),\r\n      marginLeft:theme.spacing(2),\r\n\r\n    }\r\n\r\n\r\n  }));\r\n  \r\n\r\nconst MemoInsertButton=(props)=>{\r\n    const dispatch=useDispatch();\r\n\r\n    //どこをクリックしても消せるようにしたいのでstateはreduxに振る\r\n    const [bmenu,showMenu]=React.useState(null);\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n\r\n    const onClick=(event)=>{\r\n        showMenu(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuPushEvent =(action,e )=>{\r\n        e.preventDefault();\r\n        setAnchorEl(null);\r\n        \r\n        showMenu(null);\r\n        props.onModalOpen(action);\r\n    };\r\n    const onClose=(event)=>{\r\n        console.log(\"close\");\r\n        showMenu(null);\r\n        setAnchorEl(null);\r\n    };\r\n   \r\n    const modalIcons=[\r\n      {action: FREE_MODAL_OPEN ,icon: <MailOutlineIcon fontSize=\"large\" />},\r\n      {action: \"dm\" ,icon: <RecordVoiceOverIcon fontSize=\"large\" />},\r\n      {action: FORMED_MODAL_OPEN ,icon: <CreateIcon fontSize=\"large\" />},\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div >\r\n            <Fab \r\n            className={classes.fabButton}\r\n            onClick={onClick}\r\n            color=\"primary\" \r\n            aria-label=\"add\"\r\n            aria-haspopup=\"true\">\r\n                <AddIcon/>\r\n            \r\n                \r\n            </Fab>\r\n\r\n            <Popover\r\n                    anchorEl={anchorEl}\r\n                    \r\n                    onClose={onClose}\r\n                    \r\n                    open={Boolean(bmenu)}\r\n                    anchorOrigin={{\r\n                    vertical: 'center',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'center',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    {\r\n                      modalIcons.map((d)=>{\r\n                        return (\r\n                            <Link color=\"inherit\" href=\"/\" onClick={(e)=>menuPushEvent(d.action,e)}>\r\n                              <div className={classes.Iconspace}>{d.icon}</div>\r\n                          </Link>\r\n                        )\r\n                      })\r\n\r\n                    }\r\n\r\n                </Breadcrumbs>\r\n            </Popover>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MemoInsertButton;\r\n\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\FavoriteListPage.js",["584","585","586","587","588","589","590"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport FavoriteList from '../components/FavoriteList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst FavoriteListPage=(props)=>{\r\n    const classes=listStyles();\r\n    \r\n    return (    \r\n        <div >\r\n            <FavoriteList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  FavoriteListPage;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\UtilityLibrary.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\routers.js",["591","592","593","594","595"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\UserTagAdminList.js",["596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Collapse,\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    RadioGroup,\r\n    Radio,\r\n    FormControlLabel,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TAG_TYPES,TAG_RANKS} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport { showTagAdmin, makeNewTagByAdmin, modifyTagByAdmin} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\nconst tagRanks={\r\n    1000:\"最重要\",\r\n    100:\"重要\",\r\n    10:\"通常\",\r\n    1:\"表示用(現在利用せず）\"\r\n};\r\n\r\n\r\n\r\n\r\nexport const UserTagAdminColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    const [viewmode,setViewMode]=useState(true);\r\n    \r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [tagName,setTagName]=useState(\"\");\r\n    const [tagRank,setTagRank]=useState(-1);\r\n    const [tagType,setTagType]=useState(-1);\r\n    const [errorMsg,setErrorMsg]=useState(\"\");\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const onSelect=()=>{\r\n        props.onSelect(props.data.id);\r\n        \r\n    };\r\n\r\n    const onColumnCancel=()=>{\r\n        //console.log(\"onCancel Done\",props.data.id);\r\n        //setViewMode(true);\r\n        props.onCancel();\r\n    };\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get change!\");\r\n        setTagName(props.data.strTagName);\r\n        setTagRank(props.data.numTagRank);\r\n        setTagType(props.data.numTagType);\r\n\r\n        //console.log((\"---\",TAG_TYPES.find(el=>el.id==props.data.numTagType)));\r\n    }, [props.data]);\r\n\r\n    \r\n    const rank=(tr)=>(TAG_RANKS.find(el=>el.id==tr));\r\n    const type=(tt)=>(TAG_TYPES.find(el=>el.id==tt));\r\n\r\n    const modeView=()=>{\r\n        //console.log(\"type\",type,tagType);\r\n        //if (Object.typeOf(type)=='undefined') console.log(\" undifined error\");\r\n        //const =TAG_TYPES.find(el=>el.id==tagType);\r\n\r\n        \r\n        return (\r\n            <div>\r\n                <span>{props.data.strTagName}</span>\r\n                <span>{rank(tagRank).name}</span>\r\n                <span>{type(tagType).name}</span>\r\n\r\n                <span>\r\n                    <Button onClick={()=>onSelect()}\r\n                        variant='contained'\r\n                        label=\"登録\">編集\r\n                    </Button>\r\n                 </span>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const onSubmit=()=>{\r\n\r\n        if (tagName==\"\"){\r\n            setErrorMsg(\"タグ名がありません\");\r\n            return;\r\n        }\r\n\r\n        if (tagRank==-1 || tagRank==0){\r\n            setErrorMsg(\"タグの重要度が未設定です\"+ String(tagRank));\r\n            return;\r\n        }\r\n\r\n        if (tagType==-1 || tagType==0){\r\n            setErrorMsg(\"タグの種類が未設定です\"+ String(tagType) );\r\n            return;\r\n        }\r\n\r\n        let dispatcher=modifyTagByAdmin;\r\n        if (props.data.id==-1){\r\n            dispatcher=makeNewTagByAdmin;\r\n        }\r\n\r\n        dispatch(dispatcher(\r\n            props.data.id,\r\n            tagName,\r\n            tagRank,\r\n            tagType\r\n        ));\r\n        setErrorMsg(\"\");\r\n    }\r\n\r\n    const modeEdit=()=>{\r\n        return(\r\n            \r\n            <div>\r\n                {errorMsg!=\"\" ?\r\n                    <div>{errorMsg}</div>\r\n                :\r\n                    <div/>\r\n                }\r\n                <div>\r\n                <span>\r\n                    <TextField \r\n                        //label=\"タグ名\"\r\n                        placeholder=\"タグの名称を入力\"\r\n                        onChange={(e)=>setTagName(e.target.value)}\r\n                        defaultValue={tagName}\r\n                        //value={props.data.strTagName}\r\n                        variant=\"outlined\"\r\n                        disabled={false}\r\n                        />\r\n                </span>\r\n                <span>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagRank}\r\n                        defaultValue={tagRank}\r\n                        onChange={(e)=>setTagRank(e.target.value)}\r\n                        name=\"tagrank\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                            {TAG_RANKS.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagType}\r\n                        onChange={(e)=>setTagType(e.target.value)}\r\n                        defaultValue={tagType}\r\n                        name=\"status\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                             {TAG_TYPES.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                            \r\n                        </NativeSelect>\r\n                    </FormControl>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onSubmit}\r\n                    variant='contained'\r\n                    label=\"登録\"\r\n                    >登録</Button>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onColumnCancel}\r\n                    variant='contained'\r\n                    label=\"キャンセル\"\r\n                    >キャンセル</Button>\r\n                </span>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {tagType==-1 ?\r\n            <div/>\r\n        :props.add ?\r\n            modeEdit()\r\n        :props.open ?\r\n            modeEdit()\r\n        :\r\n            modeView()\r\n        }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst UserTagAdminList=()=>{\r\n    //const [funcCancel,setFuncCancel]=useState(null)\r\n    \r\n    const classes=useStyles();\r\n    const tag_list=useSelector(state=>state.tag_admin.tag_list,[]);\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [openid,setOpenId]=useState(-1);\r\n    const [add,setAdd]=useState(false);\r\n\r\n    const changeViewList=(id=4)=>{\r\n        return tag_list.filter(data=>data.numTagType==id)\r\n    };\r\n    const [viewtype,setViewType]=useState(4)\r\n\r\n    const [showArray,setShowArray]=useState(changeViewList());\r\n\r\n\r\n    //const uConfigList=useSelector(state=>state.admin.tag_list,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(showTagAdmin());\r\n        setOpenId(-1);\r\n    }, [changFlg]);\r\n\r\n    const onColumnSelect=(id)=>{\r\n        setAdd(false)\r\n        setOpenId(id);\r\n    };\r\n\r\n    const onCancel=()=>{\r\n        setOpenId(-1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(showArray);\r\n        setShowArray(changeViewList(viewtype));\r\n        setAdd(false);\r\n        \r\n    }, [viewtype,tag_list]);\r\n\r\n    const onAddClick=()=>{\r\n        setAdd(true);\r\n        setOpenId(-1);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button\r\n                    label=\"タグ追加\"\r\n                    onClick={()=>onAddClick()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={add}\r\n                >タグ追加</Button>\r\n            </div>\r\n            <div>\r\n                <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                    row\r\n                    defaultValue={viewtype}\r\n                    >\r\n                    {TAG_TYPES.map((d)=>{\r\n                        return (<FormControlLabel \r\n                            value={d.id}\r\n                            checked={d.id==viewtype}\r\n                            onChange={()=>setViewType(d.id)} \r\n                            control={<Radio />} \r\n                            label={d.name} \r\n                            />)\r\n                        })\r\n                    }                    \r\n                </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            <hr/>\r\n            { add ?\r\n                <UserTagAdminColumn add={true} open={true} onCancel={()=>setAdd(false)} onSelect={onColumnSelect}  \r\n                data={{ id:-1,strTagName:\"\",numTagRank:0,numTagType:viewtype }}/>\r\n                :\r\n                <div/>\r\n            }\r\n        \r\n            {\r\n            showArray.map((d)=>{\r\n                return (\r\n                <UserTagAdminColumn add={false} open={d.id==openid} onCancel={onCancel} onSelect={onColumnSelect}  data={d}/>\r\n            )\r\n        })\r\n\r\n            }\r\n \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagAdminList;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\TagSearchList.js",["620","621","622","623"],"import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport MemoColumn from './MemoColumn';\r\nimport { makeStyles} from '@material-ui/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport { getTaggedData } from '../actions';\r\nimport TagInputList from './TagInputList';\r\nimport { getTimeStampNow } from '../lib/UtilityLibrary';\r\n\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst TagSearchList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.all_tag,[]);    \r\n    const timeline=useSelector(state=>state.tagged_main.timeline);\r\n    const read=useSelector(state=>state.tagged_main.read,[]);\r\n    const fav=useSelector(state=>state.tagged_main.fav,[]);\r\n\r\n    const endflg=useSelector(state=>state.memo_main.endflg,true);\r\n    //更新後の内容を反映するためのフラグ\r\n    const changeFlg=useSelector(state=>state.memo_main.change);\r\n\r\n\r\n    const [selected,setSelected]=useState([]);\r\n    const classes=listStyles();\r\n    const [start,setStart]=useState(false);\r\n    const [showEnd,setShowEnd]=useState(false);\r\n    const [showProgress,setShowProgress]=useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setNewTagList=()=>{\r\n        console.log(\"setNewTagList  --\");\r\n        if(!timeline || selected.length==0 ) return;\r\n        const fromDay=new Date(timeline.slice(-1)[0].dateRegist).toJSON();\r\n        \r\n        sendSelectedTag(selected,fromDay,true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if (tag_list.length>0){\r\n            setStart(true);\r\n        }\r\n        setShowEnd(timeline.length!==0 & endflg);\r\n        setShowProgress(timeline.length!==0 & !endflg);\r\n\r\n    },[tag_list,endflg,timeline]);\r\n\r\n\r\n    const sendSelectedTag=(arr,day=\"\", next=false)=>{\r\n        const arr_res=arr.map((d)=>d.id);\r\n        console.log(arr, arr_res);\r\n        if (day==\"\") day=\"-1\";\r\n\r\n        dispatch(getTaggedData(arr_res,day,next));\r\n    };\r\n\r\n    useEffect(()=>{\r\n        sendSelectedTag(selected);\r\n    },[changeFlg]);\r\n\r\n    const onSelect=(arr)=>{\r\n        setSelected(arr);\r\n        sendSelectedTag(arr);  \r\n    };\r\n    \r\n    return (\r\n        <div>\r\n        {start &&\r\n        <ScrollUpdater scrollFunc={()=>setNewTagList()} checkParam={timeline} endflg={endflg} buffer={60}/>\r\n        }\r\n        <div className={classes.base}>\r\n        <TagInputList setSelected={onSelect} end={false} />\r\n            {\r\n                timeline.length===0 ?\r\n\r\n                <div> 該当する検索結果は存在しません。<br/>タグを新規選択するか、現在選択のタグを外してください。 </div>                \r\n                :  \r\n                timeline.map((d)=>{\r\n\r\n                        return (<MemoColumn\r\n                            key={d.id}\r\n                            data={d}\r\n                            read={read}\r\n                            fav={fav}\r\n\r\n                        />)\r\n\r\n                    })\r\n\r\n            }\r\n            {  showEnd ?  <div>現在の表示内容は以上です。</div> :<div/>}\r\n            {  showProgress ? <div className={classes.progress}><LinearProgress/></div> :<div/> }\r\n                \r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TagSearchList;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\ShowInfoSet.js",["624"],"//共通で使いそうな関数をまとめておく　stateとかは取らず　共通のデータ構造にのみ依存するように作っておく\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const GetUserName=({id , prefix=\"\", suffix=\"\"})=>{\r\n    const user_list=useSelector(state=>state.auth_login.user_list);\r\n\r\n    const us=user_list.find(u=>u.id===id);\r\n    if (!us) return ( <span>名称未設定</span> );\r\n\r\n    return ( <span>{prefix}{us.strName} {suffix} </span> );\r\n};\r\n\r\nexport const GetTagName=({id})=>{\r\n\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n    const tagname=tag_list.find(el=> el.id==id );\r\n    //console.log(tagname);\r\n    if( !tagname ) return  <span> タグ不明 {id} :</span>\r\n\r\n    return  <span>{tagname.strTagName} :</span> \r\n\r\n}\r\n\r\n",["625","626"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\NoticeListPage.js",["627","628","629","630"],"import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport MainHeader from \"../components/MainHeader\";\r\nimport {  makeStyles } from '@material-ui/core';\r\nimport NoticeList from '../components/NoticeList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst NoticeListPage=(props)=>{\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        \r\n        <div >\r\n            <NoticeList />\r\n        </div> \r\n\r\n    )\r\n}\r\n\r\nexport default  NoticeListPage;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestFreeTagPutModal.js",["631"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\TagTypeNames.js",[],["632","633"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\AuthButtons.js",["634","635","636"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\ReplyColumnList.js",["637"],"import React, { useState, useLayoutEffect, useRef,useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ReplyColumn from './ReplyColumns';\r\n\r\n/**\r\n * Styled component\r\n */\r\n\r\n\r\nconst useStyles=makeStyles({\r\n\r\n    wrapper:props=>({\r\n        width: \"100%\",\r\n        margin: \"2em auto\",\r\n        position: \"relative\",\r\n        padding: \"0em 1em\",\r\n\r\n        '&:after': {\r\n            content: '',\r\n            display: \"table\",\r\n            clear: \"both\"\r\n        },\r\n    \r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: \"10px\",\r\n            height:(props.lineHeight)+\"px\",\r\n            width: \"2px\",\r\n            background: \"black\"\r\n        }\r\n        \r\n    })\r\n});\r\n\r\n\r\nconst  ReplyColumnList=(props)=> {\r\n\tconst [lineHeight, setLineHeight] = useState(0);\r\n    const classes=useStyles({lineHeight});\r\n\tconst wrapperHeight = useRef(null);\r\n    //console.log(\" ReplyColumnList \",props);\r\n    \r\n\tuseLayoutEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetLineHeight(\r\n\t\t\t\twrapperHeight.current.clientHeight\r\n                // -wrapperHeight.current.lastChild.clientHeight\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('resize', handleResize)\r\n\t\thandleResize();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleResize);\r\n\t\t}\r\n\t}, [props.data, lineHeight]);\r\n\r\n\r\n\treturn (\r\n\t\t<div\r\n            className={classes.wrapper}\r\n\t\t\tref={wrapperHeight}\r\n\t\t\tlineHeight={lineHeight}\r\n\t\t>\r\n            {\r\n                props.data.map((d)=>{\r\n                    return ( <ReplyColumn\r\n                        boxstyle={\"thread\"}\r\n                        key={d.id}\r\n                        data={d}\r\n                        mark={props.mark}\r\n\r\n                    />)\r\n                    \r\n                })\r\n            }\r\n\r\n\r\n\t        \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ReplyColumnList\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\ButtonSample.js",["638","639"],"// onLoad問題を再現できるかテスト\r\nimport React from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nconst ButtonSample=(props)=>{\r\n\r\n    const onClick=()=>{\r\n        props.onClick();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <Button onClick={onClick}>押すと屁が出る</Button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonSample;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\CirculerLoading.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\lib\\ServiceConfig.js",[],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\pages\\TagAdminListPage.js",["640","641","642","643"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagAdminList from '../components/UserTagAdminList';\r\nimport { auth_login_success } from '../actions';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst TagAdminListPage=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    \r\n    const classes=listStyles();\r\n    //タグ設定を更新したら初期設定内の更新も行ってしまう\r\n    useEffect(() => {\r\n        dispatch(auth_login_success());\r\n    }, [changFlg]);\r\n\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagAdminList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TagAdminListPage;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\MemoList.js",["644","645","646","647"],"import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {loadNewMemo} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport { Grid } from '@material-ui/core';\r\nimport APICallController from '../lib/ConnectionLibrary'; \r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getTimeStampNow } from '../lib/UtilityLibrary';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst MemoList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    const user_list=useSelector(state=>state.auth_login.user_list,[]);\r\n    const timeline=useSelector(state=>state.memo_main.timeline,[]);\r\n    const read=useSelector(state=>state.memo_main.read,[]);\r\n    const fav=useSelector(state=>state.memo_main.fav,[]);\r\n    \r\n    const endflg=useSelector(state=>state.memo_main.endflg);\r\n    const dispatch = useDispatch();\r\n    \r\n    const changFlg=useSelector(state=>state.memo_main.change);\r\n    useEffect(() => {\r\n        if(timeline.length>0){\r\n            dispatch(loadNewMemo(\"-1\"));\r\n        }\r\n    }, [changFlg]);\r\n\r\n\r\n    \r\n    const setNewTimeLine=()=>{\r\n        let fromDay=\"-1\";\r\n        if (timeline.length>0) {\r\n            fromDay=new Date(timeline.slice(-1)[0].dateRegist).toJSON();\r\n        } \r\n\r\n        if(endflg) return;\r\n\r\n        console.log(\" Add Start\",fromDay);\r\n        dispatch(loadNewMemo(fromDay));\r\n        //loadNewMemo(startnum);\r\n    };\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {user_list.length>0 && \r\n            <ScrollUpdater scrollFunc={()=>setNewTimeLine() }  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            }\r\n            \r\n            <Grid spacing={2}>\r\n            {\r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }\r\n            \r\n            </Grid>\r\n\r\n            \r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MemoList;\r\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\NoticeColumn.js",["648","649"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState,useEffect} from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport {Box}  from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getUserName,getDateMessage}  from  '../lib/UtilityLibrary';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #000',\r\n      },\r\n\r\n    mainExp:{\r\n        fontSize:\"12pt\",\r\n        color:\"#555555\"\r\n    },\r\n    \r\n    subExp:{\r\n        fontSize:\"10pt\",\r\n        color:\"#aaa\"\r\n    },\r\n\r\n     \r\n  }));\r\n\r\n\r\n/*\r\n  ・届いた時間\r\n  ・送り元\r\n  ・メッセージ\r\n\r\n*/\r\n\r\n\r\nconst NoticeColumn=({data})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    \r\n    const userlist = useSelector(state => state.auth_login.user_list);\r\n    const classes=useStyles();\r\n    const [maintext,setMainText] =useState(setHeaderText(data.keyMemoMain.strMainText));\r\n \r\n    const [senderMsg,setSenderMsg]= useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"userlist \",  userlist);\r\n        if (!userlist || userlist.length===0) return;\r\n\r\n        const sender=getUserName(userlist,data.keyMemoMain.keySender);\r\n\r\n        if (data.numNoticeType===1){\r\n            setSenderMsg(sender+\"からメモが来ています。\");\r\n        } else{\r\n            setSenderMsg(sender+\"から返信が来ています。\");\r\n        }\r\n    },[userlist]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.memo}>\r\n                    <Link underline=\"none\" to={\"/reply/\" +  data.keyMemoMain.id} replace >\r\n                        <div className={classes.mainExp}>\r\n                        {getDateMessage(data.keyMemoMain.dateRegist) } : {senderMsg}  \r\n                        </div>\r\n                        <div className={classes.subExp}>{maintext} </div>\r\n                    </Link>\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NoticeColumn;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\parts\\SummaryMemo.js",["650"],"\r\nimport  {getDateMessage,getUserName} from  '../../lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TagText  from './TagText'; \r\nimport {GetUserName}  from './ShowInfoSet';\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n      followarea:{\r\n          marginLeft:\"20%\",\r\n          border:'2px solid #888',\r\n          width:\"80%\",\r\n          fontSize:\"12px\"\r\n      }\r\n\r\n}));\r\n\r\n\r\nconst SummaryMemo=(props)=>{\r\n    const classes=useStyles();\r\n\r\n    return (\r\n    \r\n        <div className={classes.followarea}>\r\n            <div><span > { getDateMessage(props.data.datePublish) }</span> <GetUserName  suffix={\"より\"}  id={props.data.keySender}/></div>\r\n            < div><span>{getDateMessage(props.data.dateRegist) }</span><span> <TagText tagtextarray={props.data.strTaglist}/> </span> <span>{props.data.strMainText}</span></div>\r\n        </div>\r\n        \r\n    )\r\n\r\n};\r\n\r\nexport default SummaryMemo;","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestLoading.js",["651","652","653","654","655","656","657","658"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\index.js",["659"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PageRouter from './routers';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport {SnackbarProvider} from 'notistack';\n\n ReactDOM.render(\n   \n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n      <Router>\n      <App />\n      {/* <PageRouter/> */}\n      </Router>\n      </SnackbarProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\components\\NoticeList.js",["660","661","662"],"D:\\dev\\JS\\selfmake\\selfmake\\memotwicheck\\src\\test\\TestAuthAction.js",["663"],"import React from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport {Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n// axios.defaults.headers.common['Accept'] = 'application/json'\r\n// axios.defaults.headers.common['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n// 　axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n　//axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n\r\nconst TestAuthAction=(props)=>{\r\n    const onClick=()=>{\r\n        axios.get('http://yahoo.jp/')\r\n        .then(results=>{\r\n            console.log(results);\r\n        }).catch(error=>{\r\n            console.log(error.request);\r\n            console.log(error.config);\r\n            \r\n            console.log(error.name);\r\n            console.log(error.message);\r\n            \r\n        });\r\n\r\n        \r\n\r\n    \r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick={onClick}> 押してみそ </Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default TestAuthAction;\r\n","D:\\dev\\JS\\taglead_react\\src\\index.js",["664"],"D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js",["665","666","667"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js",["668","669"],["670","671"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js",["672"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js",["673","674","675","676"],["677","678"],"D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js",["679","680","681"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js",["682","683","684"],"D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js",["685","686","687","688","689","690"],"D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js",["691","692"],["693","694"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js",["695","696","697","698"],"D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js",["699","700","701","702"],"D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js",["703","704","705","706","707","708","709"],"D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js",["710"],"D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js",["711","712","713","714"],"D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js",["715"],"D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js",["716","717"],"D:\\dev\\JS\\taglead_react\\src\\PageBase.js",["718","719","720","721","722"],"D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js",[],"D:\\dev\\JS\\taglead_react\\src\\store\\index.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js",["723","724","725","726","727","728"],["729","730"],"D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js",["731","732","733"],"D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js",["734","735","736","737","738","739","740","741","742","743","744"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js",["745"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js",["746","747","748","749"],"D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js",["750","751","752","753","754","755"],"D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js",["756","757"],"D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js",["758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781"],"D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js",["782","783","784","785"],"D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js",["786","787","788","789"],"D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js",["790"],"D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js",["791"],{"ruleId":"792","replacedBy":"793"},{"ruleId":"794","replacedBy":"795"},{"ruleId":"796","severity":1,"message":"797","line":1,"column":10,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"800","line":9,"column":9,"nodeType":"798","messageId":"799","endLine":9,"endColumn":11},{"ruleId":"801","severity":1,"message":"802","line":15,"column":51,"nodeType":"803","messageId":"804","endLine":15,"endColumn":53},{"ruleId":"801","severity":1,"message":"802","line":21,"column":47,"nodeType":"803","messageId":"804","endLine":21,"endColumn":49},{"ruleId":"796","severity":1,"message":"805","line":8,"column":25,"nodeType":"798","messageId":"799","endLine":8,"endColumn":31},{"ruleId":"796","severity":1,"message":"806","line":4,"column":10,"nodeType":"798","messageId":"799","endLine":4,"endColumn":14},{"ruleId":"796","severity":1,"message":"807","line":40,"column":11,"nodeType":"798","messageId":"799","endLine":40,"endColumn":19},{"ruleId":"792","replacedBy":"808"},{"ruleId":"794","replacedBy":"809"},{"ruleId":"796","severity":1,"message":"810","line":8,"column":5,"nodeType":"798","messageId":"799","endLine":8,"endColumn":14},{"ruleId":"796","severity":1,"message":"811","line":24,"column":9,"nodeType":"798","messageId":"799","endLine":24,"endColumn":22},{"ruleId":"796","severity":1,"message":"812","line":25,"column":9,"nodeType":"798","messageId":"799","endLine":25,"endColumn":24},{"ruleId":"796","severity":1,"message":"813","line":25,"column":25,"nodeType":"798","messageId":"799","endLine":25,"endColumn":43},{"ruleId":"796","severity":1,"message":"814","line":28,"column":8,"nodeType":"798","messageId":"799","endLine":28,"endColumn":13},{"ruleId":"801","severity":1,"message":"802","line":129,"column":36,"nodeType":"803","messageId":"804","endLine":129,"endColumn":38},{"ruleId":"801","severity":1,"message":"802","line":235,"column":16,"nodeType":"803","messageId":"804","endLine":235,"endColumn":18},{"ruleId":"796","severity":1,"message":"815","line":98,"column":20,"nodeType":"798","messageId":"799","endLine":98,"endColumn":26},{"ruleId":"792","replacedBy":"816"},{"ruleId":"794","replacedBy":"817"},{"ruleId":"796","severity":1,"message":"818","line":4,"column":9,"nodeType":"798","messageId":"799","endLine":4,"endColumn":13},{"ruleId":"796","severity":1,"message":"819","line":4,"column":14,"nodeType":"798","messageId":"799","endLine":4,"endColumn":25},{"ruleId":"796","severity":1,"message":"820","line":4,"column":36,"nodeType":"798","messageId":"799","endLine":4,"endColumn":47},{"ruleId":"796","severity":1,"message":"821","line":37,"column":10,"nodeType":"798","messageId":"799","endLine":37,"endColumn":17},{"ruleId":"792","replacedBy":"822"},{"ruleId":"794","replacedBy":"823"},{"ruleId":"796","severity":1,"message":"824","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"825","line":3,"column":8,"nodeType":"798","messageId":"799","endLine":3,"endColumn":23},{"ruleId":"796","severity":1,"message":"826","line":4,"column":26,"nodeType":"798","messageId":"799","endLine":4,"endColumn":35},{"ruleId":"796","severity":1,"message":"827","line":35,"column":10,"nodeType":"798","messageId":"799","endLine":35,"endColumn":17},{"ruleId":"792","replacedBy":"828"},{"ruleId":"794","replacedBy":"829"},{"ruleId":"792","replacedBy":"830"},{"ruleId":"794","replacedBy":"831"},{"ruleId":"796","severity":1,"message":"832","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"792","replacedBy":"833"},{"ruleId":"794","replacedBy":"834"},{"ruleId":"796","severity":1,"message":"835","line":1,"column":10,"nodeType":"798","messageId":"799","endLine":1,"endColumn":16},{"ruleId":"796","severity":1,"message":"818","line":5,"column":9,"nodeType":"798","messageId":"799","endLine":5,"endColumn":13},{"ruleId":"796","severity":1,"message":"836","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":25},{"ruleId":"796","severity":1,"message":"837","line":60,"column":12,"nodeType":"798","messageId":"799","endLine":60,"endColumn":22},{"ruleId":"838","severity":1,"message":"839","line":92,"column":8,"nodeType":"840","endLine":92,"endColumn":10,"suggestions":"841"},{"ruleId":"796","severity":1,"message":"815","line":119,"column":18,"nodeType":"798","messageId":"799","endLine":119,"endColumn":24},{"ruleId":"796","severity":1,"message":"842","line":122,"column":11,"nodeType":"798","messageId":"799","endLine":122,"endColumn":18},{"ruleId":"792","replacedBy":"843"},{"ruleId":"794","replacedBy":"844"},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"818","line":5,"column":17,"nodeType":"798","messageId":"799","endLine":5,"endColumn":21},{"ruleId":"796","severity":1,"message":"846","line":70,"column":12,"nodeType":"798","messageId":"799","endLine":70,"endColumn":16},{"ruleId":"796","severity":1,"message":"847","line":75,"column":11,"nodeType":"798","messageId":"799","endLine":75,"endColumn":20},{"ruleId":"838","severity":1,"message":"848","line":93,"column":7,"nodeType":"840","endLine":93,"endColumn":28,"suggestions":"849"},{"ruleId":"796","severity":1,"message":"850","line":97,"column":11,"nodeType":"798","messageId":"799","endLine":97,"endColumn":18},{"ruleId":"801","severity":1,"message":"802","line":131,"column":18,"nodeType":"803","messageId":"804","endLine":131,"endColumn":20},{"ruleId":"801","severity":1,"message":"802","line":177,"column":24,"nodeType":"803","messageId":"804","endLine":177,"endColumn":26},{"ruleId":"796","severity":1,"message":"851","line":196,"column":15,"nodeType":"798","messageId":"799","endLine":196,"endColumn":17},{"ruleId":"852","severity":1,"message":"853","line":211,"column":61,"nodeType":"854","messageId":"855","endLine":211,"endColumn":62,"suggestions":"856"},{"ruleId":"838","severity":1,"message":"857","line":32,"column":7,"nodeType":"840","endLine":32,"endColumn":9,"suggestions":"858"},{"ruleId":"796","severity":1,"message":"859","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"838","severity":1,"message":"860","line":19,"column":8,"nodeType":"840","endLine":19,"endColumn":19,"suggestions":"861"},{"ruleId":"792","replacedBy":"862"},{"ruleId":"794","replacedBy":"863"},{"ruleId":"796","severity":1,"message":"864","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"865","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":33},{"ruleId":"796","severity":1,"message":"832","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"806","line":4,"column":10,"nodeType":"798","messageId":"799","endLine":4,"endColumn":14},{"ruleId":"796","severity":1,"message":"835","line":10,"column":8,"nodeType":"798","messageId":"799","endLine":10,"endColumn":14},{"ruleId":"796","severity":1,"message":"866","line":11,"column":8,"nodeType":"798","messageId":"799","endLine":11,"endColumn":18},{"ruleId":"796","severity":1,"message":"867","line":15,"column":9,"nodeType":"798","messageId":"799","endLine":15,"endColumn":22},{"ruleId":"796","severity":1,"message":"868","line":16,"column":9,"nodeType":"798","messageId":"799","endLine":16,"endColumn":21},{"ruleId":"796","severity":1,"message":"869","line":19,"column":7,"nodeType":"798","messageId":"799","endLine":19,"endColumn":18},{"ruleId":"796","severity":1,"message":"807","line":50,"column":11,"nodeType":"798","messageId":"799","endLine":50,"endColumn":19},{"ruleId":"796","severity":1,"message":"821","line":51,"column":11,"nodeType":"798","messageId":"799","endLine":51,"endColumn":18},{"ruleId":"796","severity":1,"message":"827","line":52,"column":11,"nodeType":"798","messageId":"799","endLine":52,"endColumn":18},{"ruleId":"792","replacedBy":"870"},{"ruleId":"794","replacedBy":"871"},{"ruleId":"838","severity":1,"message":"872","line":35,"column":8,"nodeType":"840","endLine":35,"endColumn":10,"suggestions":"873"},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"874","line":35,"column":12,"nodeType":"798","messageId":"799","endLine":35,"endColumn":20},{"ruleId":"796","severity":1,"message":"875","line":35,"column":21,"nodeType":"798","messageId":"799","endLine":35,"endColumn":32},{"ruleId":"796","severity":1,"message":"807","line":8,"column":11,"nodeType":"798","messageId":"799","endLine":8,"endColumn":19},{"ruleId":"792","replacedBy":"876"},{"ruleId":"794","replacedBy":"877"},{"ruleId":"796","severity":1,"message":"810","line":12,"column":9,"nodeType":"798","messageId":"799","endLine":12,"endColumn":18},{"ruleId":"796","severity":1,"message":"878","line":36,"column":10,"nodeType":"798","messageId":"799","endLine":36,"endColumn":21},{"ruleId":"796","severity":1,"message":"879","line":142,"column":7,"nodeType":"798","messageId":"799","endLine":142,"endColumn":20},{"ruleId":"796","severity":1,"message":"880","line":150,"column":7,"nodeType":"798","messageId":"799","endLine":150,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":255,"column":39,"nodeType":"803","messageId":"804","endLine":255,"endColumn":41},{"ruleId":"881","severity":1,"message":"882","line":376,"column":36,"nodeType":"883","messageId":"884","endLine":376,"endColumn":38},{"ruleId":"838","severity":1,"message":"885","line":21,"column":6,"nodeType":"840","endLine":21,"endColumn":22,"suggestions":"886"},{"ruleId":"801","severity":1,"message":"887","line":32,"column":28,"nodeType":"803","messageId":"804","endLine":32,"endColumn":30},{"ruleId":"796","severity":1,"message":"888","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":21},{"ruleId":"796","severity":1,"message":"866","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":18},{"ruleId":"801","severity":1,"message":"802","line":94,"column":20,"nodeType":"803","messageId":"804","endLine":94,"endColumn":22},{"ruleId":"796","severity":1,"message":"889","line":23,"column":9,"nodeType":"798","messageId":"799","endLine":23,"endColumn":28},{"ruleId":"796","severity":1,"message":"890","line":24,"column":8,"nodeType":"798","messageId":"799","endLine":24,"endColumn":19},{"ruleId":"796","severity":1,"message":"891","line":22,"column":25,"nodeType":"798","messageId":"799","endLine":22,"endColumn":36},{"ruleId":"796","severity":1,"message":"892","line":116,"column":11,"nodeType":"798","messageId":"799","endLine":116,"endColumn":19},{"ruleId":"838","severity":1,"message":"893","line":168,"column":5,"nodeType":"798","endLine":168,"endColumn":14,"suggestions":"894"},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"805","line":1,"column":34,"nodeType":"798","messageId":"799","endLine":1,"endColumn":40},{"ruleId":"796","severity":1,"message":"895","line":7,"column":5,"nodeType":"798","messageId":"799","endLine":7,"endColumn":19},{"ruleId":"796","severity":1,"message":"896","line":10,"column":5,"nodeType":"798","messageId":"799","endLine":10,"endColumn":8},{"ruleId":"796","severity":1,"message":"897","line":11,"column":5,"nodeType":"798","messageId":"799","endLine":11,"endColumn":9},{"ruleId":"796","severity":1,"message":"898","line":12,"column":5,"nodeType":"798","messageId":"799","endLine":12,"endColumn":14},{"ruleId":"796","severity":1,"message":"866","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":18},{"ruleId":"796","severity":1,"message":"899","line":16,"column":10,"nodeType":"798","messageId":"799","endLine":16,"endColumn":24},{"ruleId":"796","severity":1,"message":"900","line":16,"column":25,"nodeType":"798","messageId":"799","endLine":16,"endColumn":40},{"ruleId":"796","severity":1,"message":"892","line":51,"column":11,"nodeType":"798","messageId":"799","endLine":51,"endColumn":19},{"ruleId":"838","severity":1,"message":"901","line":124,"column":8,"nodeType":"840","endLine":124,"endColumn":10,"suggestions":"902"},{"ruleId":"796","severity":1,"message":"903","line":7,"column":21,"nodeType":"798","messageId":"799","endLine":7,"endColumn":33},{"ruleId":"796","severity":1,"message":"904","line":7,"column":34,"nodeType":"798","messageId":"799","endLine":7,"endColumn":39},{"ruleId":"801","severity":1,"message":"802","line":48,"column":45,"nodeType":"803","messageId":"804","endLine":48,"endColumn":47},{"ruleId":"801","severity":1,"message":"802","line":54,"column":24,"nodeType":"803","messageId":"804","endLine":54,"endColumn":26},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"832","line":2,"column":17,"nodeType":"798","messageId":"799","endLine":2,"endColumn":28},{"ruleId":"796","severity":1,"message":"888","line":2,"column":29,"nodeType":"798","messageId":"799","endLine":2,"endColumn":40},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"792","replacedBy":"907"},{"ruleId":"794","replacedBy":"908"},{"ruleId":"796","severity":1,"message":"864","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"888","line":5,"column":21,"nodeType":"798","messageId":"799","endLine":5,"endColumn":32},{"ruleId":"796","severity":1,"message":"909","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":21},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"832","line":2,"column":22,"nodeType":"798","messageId":"799","endLine":2,"endColumn":33},{"ruleId":"796","severity":1,"message":"866","line":8,"column":8,"nodeType":"798","messageId":"799","endLine":8,"endColumn":18},{"ruleId":"796","severity":1,"message":"910","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":22},{"ruleId":"796","severity":1,"message":"911","line":53,"column":16,"nodeType":"798","messageId":"799","endLine":53,"endColumn":22},{"ruleId":"838","severity":1,"message":"912","line":62,"column":5,"nodeType":"798","endLine":62,"endColumn":14,"suggestions":"913"},{"ruleId":"801","severity":1,"message":"802","line":63,"column":29,"nodeType":"803","messageId":"804","endLine":63,"endColumn":31},{"ruleId":"801","severity":1,"message":"802","line":63,"column":49,"nodeType":"803","messageId":"804","endLine":63,"endColumn":51},{"ruleId":"801","severity":1,"message":"802","line":63,"column":78,"nodeType":"803","messageId":"804","endLine":63,"endColumn":80},{"ruleId":"796","severity":1,"message":"914","line":3,"column":13,"nodeType":"798","messageId":"799","endLine":3,"endColumn":17},{"ruleId":"796","severity":1,"message":"915","line":3,"column":18,"nodeType":"798","messageId":"799","endLine":3,"endColumn":26},{"ruleId":"796","severity":1,"message":"866","line":3,"column":52,"nodeType":"798","messageId":"799","endLine":3,"endColumn":62},{"ruleId":"796","severity":1,"message":"916","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":28},{"ruleId":"796","severity":1,"message":"917","line":16,"column":10,"nodeType":"798","messageId":"799","endLine":16,"endColumn":23},{"ruleId":"796","severity":1,"message":"807","line":45,"column":11,"nodeType":"798","messageId":"799","endLine":45,"endColumn":19},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"832","line":2,"column":17,"nodeType":"798","messageId":"799","endLine":2,"endColumn":28},{"ruleId":"796","severity":1,"message":"888","line":2,"column":29,"nodeType":"798","messageId":"799","endLine":2,"endColumn":40},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"796","severity":1,"message":"821","line":24,"column":11,"nodeType":"798","messageId":"799","endLine":24,"endColumn":18},{"ruleId":"796","severity":1,"message":"918","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":19},{"ruleId":"796","severity":1,"message":"919","line":3,"column":27,"nodeType":"798","messageId":"799","endLine":3,"endColumn":33},{"ruleId":"796","severity":1,"message":"920","line":4,"column":8,"nodeType":"798","messageId":"799","endLine":4,"endColumn":19},{"ruleId":"796","severity":1,"message":"921","line":5,"column":8,"nodeType":"798","messageId":"799","endLine":5,"endColumn":16},{"ruleId":"922","severity":1,"message":"923","line":53,"column":43,"nodeType":"924","endLine":53,"endColumn":48},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"805","line":1,"column":34,"nodeType":"798","messageId":"799","endLine":1,"endColumn":40},{"ruleId":"796","severity":1,"message":"925","line":4,"column":5,"nodeType":"798","messageId":"799","endLine":4,"endColumn":13},{"ruleId":"796","severity":1,"message":"866","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":18},{"ruleId":"796","severity":1,"message":"926","line":17,"column":9,"nodeType":"798","messageId":"799","endLine":17,"endColumn":19},{"ruleId":"796","severity":1,"message":"927","line":45,"column":7,"nodeType":"798","messageId":"799","endLine":45,"endColumn":15},{"ruleId":"796","severity":1,"message":"928","line":58,"column":12,"nodeType":"798","messageId":"799","endLine":58,"endColumn":20},{"ruleId":"796","severity":1,"message":"929","line":58,"column":21,"nodeType":"798","messageId":"799","endLine":58,"endColumn":32},{"ruleId":"796","severity":1,"message":"930","line":60,"column":11,"nodeType":"798","messageId":"799","endLine":60,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":92,"column":47,"nodeType":"803","messageId":"804","endLine":92,"endColumn":49},{"ruleId":"801","severity":1,"message":"802","line":93,"column":47,"nodeType":"803","messageId":"804","endLine":93,"endColumn":49},{"ruleId":"801","severity":1,"message":"802","line":119,"column":20,"nodeType":"803","messageId":"804","endLine":119,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":124,"column":20,"nodeType":"803","messageId":"804","endLine":124,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":124,"column":35,"nodeType":"803","messageId":"804","endLine":124,"endColumn":37},{"ruleId":"801","severity":1,"message":"802","line":129,"column":20,"nodeType":"803","messageId":"804","endLine":129,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":129,"column":35,"nodeType":"803","messageId":"804","endLine":129,"endColumn":37},{"ruleId":"801","severity":1,"message":"802","line":135,"column":26,"nodeType":"803","messageId":"804","endLine":135,"endColumn":28},{"ruleId":"801","severity":1,"message":"887","line":152,"column":26,"nodeType":"803","messageId":"804","endLine":152,"endColumn":28},{"ruleId":"801","severity":1,"message":"802","line":224,"column":17,"nodeType":"803","messageId":"804","endLine":224,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":249,"column":53,"nodeType":"803","messageId":"804","endLine":249,"endColumn":55},{"ruleId":"838","severity":1,"message":"901","line":264,"column":8,"nodeType":"840","endLine":264,"endColumn":18,"suggestions":"931"},{"ruleId":"838","severity":1,"message":"932","line":280,"column":8,"nodeType":"840","endLine":280,"endColumn":27,"suggestions":"933"},{"ruleId":"801","severity":1,"message":"802","line":310,"column":42,"nodeType":"803","messageId":"804","endLine":310,"endColumn":44},{"ruleId":"801","severity":1,"message":"802","line":331,"column":59,"nodeType":"803","messageId":"804","endLine":331,"endColumn":61},{"ruleId":"796","severity":1,"message":"934","line":9,"column":10,"nodeType":"798","messageId":"799","endLine":9,"endColumn":25},{"ruleId":"801","severity":1,"message":"802","line":48,"column":40,"nodeType":"803","messageId":"804","endLine":48,"endColumn":42},{"ruleId":"801","severity":1,"message":"802","line":67,"column":16,"nodeType":"803","messageId":"804","endLine":67,"endColumn":18},{"ruleId":"838","severity":1,"message":"935","line":74,"column":7,"nodeType":"840","endLine":74,"endColumn":18,"suggestions":"936"},{"ruleId":"801","severity":1,"message":"802","line":17,"column":43,"nodeType":"803","messageId":"804","endLine":17,"endColumn":45},{"ruleId":"792","replacedBy":"937"},{"ruleId":"794","replacedBy":"938"},{"ruleId":"796","severity":1,"message":"832","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"888","line":2,"column":21,"nodeType":"798","messageId":"799","endLine":2,"endColumn":32},{"ruleId":"796","severity":1,"message":"939","line":3,"column":8,"nodeType":"798","messageId":"799","endLine":3,"endColumn":18},{"ruleId":"796","severity":1,"message":"821","line":25,"column":11,"nodeType":"798","messageId":"799","endLine":25,"endColumn":18},{"ruleId":"796","severity":1,"message":"807","line":8,"column":11,"nodeType":"798","messageId":"799","endLine":8,"endColumn":19},{"ruleId":"792","replacedBy":"940"},{"ruleId":"794","replacedBy":"941"},{"ruleId":"796","severity":1,"message":"864","line":8,"column":19,"nodeType":"798","messageId":"799","endLine":8,"endColumn":28},{"ruleId":"796","severity":1,"message":"942","line":17,"column":12,"nodeType":"798","messageId":"799","endLine":17,"endColumn":20},{"ruleId":"796","severity":1,"message":"943","line":17,"column":22,"nodeType":"798","messageId":"799","endLine":17,"endColumn":33},{"ruleId":"796","severity":1,"message":"864","line":1,"column":51,"nodeType":"798","messageId":"799","endLine":1,"endColumn":60},{"ruleId":"796","severity":1,"message":"835","line":4,"column":9,"nodeType":"798","messageId":"799","endLine":4,"endColumn":15},{"ruleId":"796","severity":1,"message":"944","line":9,"column":11,"nodeType":"798","messageId":"799","endLine":9,"endColumn":18},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"838","severity":1,"message":"901","line":32,"column":8,"nodeType":"840","endLine":32,"endColumn":18,"suggestions":"945"},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"836","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":25},{"ruleId":"796","severity":1,"message":"934","line":11,"column":10,"nodeType":"798","messageId":"799","endLine":11,"endColumn":25},{"ruleId":"838","severity":1,"message":"946","line":44,"column":8,"nodeType":"840","endLine":44,"endColumn":18,"suggestions":"947"},{"ruleId":"796","severity":1,"message":"948","line":59,"column":21,"nodeType":"798","messageId":"799","endLine":59,"endColumn":32},{"ruleId":"838","severity":1,"message":"949","line":75,"column":7,"nodeType":"840","endLine":75,"endColumn":17,"suggestions":"950"},{"ruleId":"796","severity":1,"message":"891","line":2,"column":25,"nodeType":"798","messageId":"799","endLine":2,"endColumn":36},{"ruleId":"796","severity":1,"message":"835","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":15},{"ruleId":"796","severity":1,"message":"951","line":2,"column":16,"nodeType":"798","messageId":"799","endLine":2,"endColumn":21},{"ruleId":"796","severity":1,"message":"952","line":2,"column":22,"nodeType":"798","messageId":"799","endLine":2,"endColumn":31},{"ruleId":"796","severity":1,"message":"953","line":2,"column":32,"nodeType":"798","messageId":"799","endLine":2,"endColumn":48},{"ruleId":"796","severity":1,"message":"954","line":2,"column":49,"nodeType":"798","messageId":"799","endLine":2,"endColumn":65},{"ruleId":"796","severity":1,"message":"925","line":2,"column":66,"nodeType":"798","messageId":"799","endLine":2,"endColumn":74},{"ruleId":"796","severity":1,"message":"910","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"796","severity":1,"message":"955","line":6,"column":8,"nodeType":"798","messageId":"799","endLine":6,"endColumn":20},{"ruleId":"796","severity":1,"message":"956","line":5,"column":8,"nodeType":"798","messageId":"799","endLine":5,"endColumn":18},{"ruleId":"796","severity":1,"message":"957","line":7,"column":9,"nodeType":"798","messageId":"799","endLine":7,"endColumn":22},{"ruleId":"796","severity":1,"message":"875","line":31,"column":21,"nodeType":"798","messageId":"799","endLine":31,"endColumn":32},{"ruleId":"838","severity":1,"message":"958","line":37,"column":7,"nodeType":"840","endLine":37,"endColumn":9,"suggestions":"959"},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"956","line":5,"column":8,"nodeType":"798","messageId":"799","endLine":5,"endColumn":18},{"ruleId":"796","severity":1,"message":"864","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"888","line":5,"column":21,"nodeType":"798","messageId":"799","endLine":5,"endColumn":32},{"ruleId":"796","severity":1,"message":"909","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":21},{"ruleId":"796","severity":1,"message":"889","line":23,"column":9,"nodeType":"798","messageId":"799","endLine":23,"endColumn":28},{"ruleId":"796","severity":1,"message":"890","line":24,"column":8,"nodeType":"798","messageId":"799","endLine":24,"endColumn":19},{"ruleId":"792","replacedBy":"960"},{"ruleId":"794","replacedBy":"961"},{"ruleId":"796","severity":1,"message":"832","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"836","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":25},{"ruleId":"796","severity":1,"message":"934","line":11,"column":10,"nodeType":"798","messageId":"799","endLine":11,"endColumn":25},{"ruleId":"838","severity":1,"message":"946","line":44,"column":8,"nodeType":"840","endLine":44,"endColumn":18,"suggestions":"962"},{"ruleId":"792","replacedBy":"963"},{"ruleId":"794","replacedBy":"964"},{"ruleId":"796","severity":1,"message":"957","line":7,"column":9,"nodeType":"798","messageId":"799","endLine":7,"endColumn":22},{"ruleId":"796","severity":1,"message":"875","line":31,"column":21,"nodeType":"798","messageId":"799","endLine":31,"endColumn":32},{"ruleId":"838","severity":1,"message":"958","line":37,"column":7,"nodeType":"840","endLine":37,"endColumn":9,"suggestions":"965"},{"ruleId":"796","severity":1,"message":"864","line":8,"column":19,"nodeType":"798","messageId":"799","endLine":8,"endColumn":28},{"ruleId":"796","severity":1,"message":"942","line":17,"column":12,"nodeType":"798","messageId":"799","endLine":17,"endColumn":20},{"ruleId":"796","severity":1,"message":"943","line":17,"column":22,"nodeType":"798","messageId":"799","endLine":17,"endColumn":33},{"ruleId":"796","severity":1,"message":"810","line":12,"column":9,"nodeType":"798","messageId":"799","endLine":12,"endColumn":18},{"ruleId":"796","severity":1,"message":"878","line":36,"column":10,"nodeType":"798","messageId":"799","endLine":36,"endColumn":21},{"ruleId":"796","severity":1,"message":"879","line":142,"column":7,"nodeType":"798","messageId":"799","endLine":142,"endColumn":20},{"ruleId":"796","severity":1,"message":"880","line":150,"column":7,"nodeType":"798","messageId":"799","endLine":150,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":255,"column":39,"nodeType":"803","messageId":"804","endLine":255,"endColumn":41},{"ruleId":"881","severity":1,"message":"882","line":376,"column":36,"nodeType":"883","messageId":"884","endLine":376,"endColumn":38},{"ruleId":"796","severity":1,"message":"835","line":4,"column":9,"nodeType":"798","messageId":"799","endLine":4,"endColumn":15},{"ruleId":"796","severity":1,"message":"944","line":9,"column":11,"nodeType":"798","messageId":"799","endLine":9,"endColumn":18},{"ruleId":"792","replacedBy":"966"},{"ruleId":"794","replacedBy":"967"},{"ruleId":"796","severity":1,"message":"797","line":1,"column":10,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"800","line":9,"column":9,"nodeType":"798","messageId":"799","endLine":9,"endColumn":11},{"ruleId":"801","severity":1,"message":"802","line":15,"column":51,"nodeType":"803","messageId":"804","endLine":15,"endColumn":53},{"ruleId":"801","severity":1,"message":"802","line":21,"column":47,"nodeType":"803","messageId":"804","endLine":21,"endColumn":49},{"ruleId":"796","severity":1,"message":"818","line":4,"column":9,"nodeType":"798","messageId":"799","endLine":4,"endColumn":13},{"ruleId":"796","severity":1,"message":"819","line":4,"column":14,"nodeType":"798","messageId":"799","endLine":4,"endColumn":25},{"ruleId":"796","severity":1,"message":"820","line":4,"column":36,"nodeType":"798","messageId":"799","endLine":4,"endColumn":47},{"ruleId":"796","severity":1,"message":"821","line":37,"column":10,"nodeType":"798","messageId":"799","endLine":37,"endColumn":17},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"832","line":2,"column":17,"nodeType":"798","messageId":"799","endLine":2,"endColumn":28},{"ruleId":"796","severity":1,"message":"888","line":2,"column":29,"nodeType":"798","messageId":"799","endLine":2,"endColumn":40},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"796","severity":1,"message":"821","line":24,"column":11,"nodeType":"798","messageId":"799","endLine":24,"endColumn":18},{"ruleId":"796","severity":1,"message":"815","line":98,"column":20,"nodeType":"798","messageId":"799","endLine":98,"endColumn":26},{"ruleId":"796","severity":1,"message":"934","line":9,"column":10,"nodeType":"798","messageId":"799","endLine":9,"endColumn":25},{"ruleId":"801","severity":1,"message":"802","line":48,"column":40,"nodeType":"803","messageId":"804","endLine":48,"endColumn":42},{"ruleId":"801","severity":1,"message":"802","line":67,"column":16,"nodeType":"803","messageId":"804","endLine":67,"endColumn":18},{"ruleId":"838","severity":1,"message":"935","line":74,"column":7,"nodeType":"840","endLine":74,"endColumn":18,"suggestions":"968"},{"ruleId":"838","severity":1,"message":"857","line":32,"column":7,"nodeType":"840","endLine":32,"endColumn":9,"suggestions":"969"},{"ruleId":"796","severity":1,"message":"948","line":59,"column":21,"nodeType":"798","messageId":"799","endLine":59,"endColumn":32},{"ruleId":"838","severity":1,"message":"949","line":75,"column":7,"nodeType":"840","endLine":75,"endColumn":17,"suggestions":"970"},{"ruleId":"796","severity":1,"message":"836","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":25},{"ruleId":"796","severity":1,"message":"837","line":60,"column":12,"nodeType":"798","messageId":"799","endLine":60,"endColumn":22},{"ruleId":"838","severity":1,"message":"839","line":92,"column":8,"nodeType":"840","endLine":92,"endColumn":10,"suggestions":"971"},{"ruleId":"796","severity":1,"message":"815","line":119,"column":18,"nodeType":"798","messageId":"799","endLine":119,"endColumn":24},{"ruleId":"796","severity":1,"message":"842","line":122,"column":11,"nodeType":"798","messageId":"799","endLine":122,"endColumn":18},{"ruleId":"796","severity":1,"message":"914","line":3,"column":13,"nodeType":"798","messageId":"799","endLine":3,"endColumn":17},{"ruleId":"796","severity":1,"message":"915","line":3,"column":18,"nodeType":"798","messageId":"799","endLine":3,"endColumn":26},{"ruleId":"796","severity":1,"message":"866","line":3,"column":52,"nodeType":"798","messageId":"799","endLine":3,"endColumn":62},{"ruleId":"796","severity":1,"message":"916","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":28},{"ruleId":"796","severity":1,"message":"917","line":16,"column":10,"nodeType":"798","messageId":"799","endLine":16,"endColumn":23},{"ruleId":"796","severity":1,"message":"807","line":45,"column":11,"nodeType":"798","messageId":"799","endLine":45,"endColumn":19},{"ruleId":"792","replacedBy":"972"},{"ruleId":"794","replacedBy":"973"},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"874","line":35,"column":12,"nodeType":"798","messageId":"799","endLine":35,"endColumn":20},{"ruleId":"796","severity":1,"message":"875","line":35,"column":21,"nodeType":"798","messageId":"799","endLine":35,"endColumn":32},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"805","line":1,"column":34,"nodeType":"798","messageId":"799","endLine":1,"endColumn":40},{"ruleId":"796","severity":1,"message":"895","line":7,"column":5,"nodeType":"798","messageId":"799","endLine":7,"endColumn":19},{"ruleId":"796","severity":1,"message":"896","line":10,"column":5,"nodeType":"798","messageId":"799","endLine":10,"endColumn":8},{"ruleId":"796","severity":1,"message":"897","line":11,"column":5,"nodeType":"798","messageId":"799","endLine":11,"endColumn":9},{"ruleId":"796","severity":1,"message":"898","line":12,"column":5,"nodeType":"798","messageId":"799","endLine":12,"endColumn":14},{"ruleId":"796","severity":1,"message":"866","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":18},{"ruleId":"796","severity":1,"message":"899","line":16,"column":10,"nodeType":"798","messageId":"799","endLine":16,"endColumn":24},{"ruleId":"796","severity":1,"message":"900","line":16,"column":25,"nodeType":"798","messageId":"799","endLine":16,"endColumn":40},{"ruleId":"796","severity":1,"message":"892","line":51,"column":11,"nodeType":"798","messageId":"799","endLine":51,"endColumn":19},{"ruleId":"838","severity":1,"message":"901","line":124,"column":8,"nodeType":"840","endLine":124,"endColumn":10,"suggestions":"974"},{"ruleId":"796","severity":1,"message":"805","line":8,"column":25,"nodeType":"798","messageId":"799","endLine":8,"endColumn":31},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"838","severity":1,"message":"901","line":32,"column":8,"nodeType":"840","endLine":32,"endColumn":18,"suggestions":"975"},{"ruleId":"796","severity":1,"message":"865","line":1,"column":16,"nodeType":"798","messageId":"799","endLine":1,"endColumn":24},{"ruleId":"796","severity":1,"message":"864","line":1,"column":25,"nodeType":"798","messageId":"799","endLine":1,"endColumn":34},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"832","line":2,"column":17,"nodeType":"798","messageId":"799","endLine":2,"endColumn":28},{"ruleId":"796","severity":1,"message":"888","line":2,"column":29,"nodeType":"798","messageId":"799","endLine":2,"endColumn":40},{"ruleId":"796","severity":1,"message":"906","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":24},{"ruleId":"796","severity":1,"message":"806","line":4,"column":10,"nodeType":"798","messageId":"799","endLine":4,"endColumn":14},{"ruleId":"796","severity":1,"message":"807","line":40,"column":11,"nodeType":"798","messageId":"799","endLine":40,"endColumn":19},{"ruleId":"796","severity":1,"message":"845","line":1,"column":8,"nodeType":"798","messageId":"799","endLine":1,"endColumn":13},{"ruleId":"796","severity":1,"message":"805","line":1,"column":34,"nodeType":"798","messageId":"799","endLine":1,"endColumn":40},{"ruleId":"796","severity":1,"message":"925","line":4,"column":5,"nodeType":"798","messageId":"799","endLine":4,"endColumn":13},{"ruleId":"796","severity":1,"message":"866","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":18},{"ruleId":"796","severity":1,"message":"926","line":17,"column":9,"nodeType":"798","messageId":"799","endLine":17,"endColumn":19},{"ruleId":"796","severity":1,"message":"927","line":45,"column":7,"nodeType":"798","messageId":"799","endLine":45,"endColumn":15},{"ruleId":"796","severity":1,"message":"928","line":58,"column":12,"nodeType":"798","messageId":"799","endLine":58,"endColumn":20},{"ruleId":"796","severity":1,"message":"929","line":58,"column":21,"nodeType":"798","messageId":"799","endLine":58,"endColumn":32},{"ruleId":"796","severity":1,"message":"930","line":60,"column":11,"nodeType":"798","messageId":"799","endLine":60,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":92,"column":47,"nodeType":"803","messageId":"804","endLine":92,"endColumn":49},{"ruleId":"801","severity":1,"message":"802","line":93,"column":47,"nodeType":"803","messageId":"804","endLine":93,"endColumn":49},{"ruleId":"801","severity":1,"message":"802","line":119,"column":20,"nodeType":"803","messageId":"804","endLine":119,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":124,"column":20,"nodeType":"803","messageId":"804","endLine":124,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":124,"column":35,"nodeType":"803","messageId":"804","endLine":124,"endColumn":37},{"ruleId":"801","severity":1,"message":"802","line":129,"column":20,"nodeType":"803","messageId":"804","endLine":129,"endColumn":22},{"ruleId":"801","severity":1,"message":"802","line":129,"column":35,"nodeType":"803","messageId":"804","endLine":129,"endColumn":37},{"ruleId":"801","severity":1,"message":"802","line":135,"column":26,"nodeType":"803","messageId":"804","endLine":135,"endColumn":28},{"ruleId":"801","severity":1,"message":"887","line":152,"column":26,"nodeType":"803","messageId":"804","endLine":152,"endColumn":28},{"ruleId":"801","severity":1,"message":"802","line":224,"column":17,"nodeType":"803","messageId":"804","endLine":224,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":249,"column":53,"nodeType":"803","messageId":"804","endLine":249,"endColumn":55},{"ruleId":"838","severity":1,"message":"901","line":264,"column":8,"nodeType":"840","endLine":264,"endColumn":18,"suggestions":"976"},{"ruleId":"838","severity":1,"message":"932","line":280,"column":8,"nodeType":"840","endLine":280,"endColumn":27,"suggestions":"977"},{"ruleId":"801","severity":1,"message":"802","line":310,"column":42,"nodeType":"803","messageId":"804","endLine":310,"endColumn":44},{"ruleId":"801","severity":1,"message":"802","line":331,"column":59,"nodeType":"803","messageId":"804","endLine":331,"endColumn":61},{"ruleId":"796","severity":1,"message":"903","line":7,"column":21,"nodeType":"798","messageId":"799","endLine":7,"endColumn":33},{"ruleId":"796","severity":1,"message":"904","line":7,"column":34,"nodeType":"798","messageId":"799","endLine":7,"endColumn":39},{"ruleId":"801","severity":1,"message":"802","line":48,"column":45,"nodeType":"803","messageId":"804","endLine":48,"endColumn":47},{"ruleId":"801","severity":1,"message":"802","line":54,"column":24,"nodeType":"803","messageId":"804","endLine":54,"endColumn":26},{"ruleId":"796","severity":1,"message":"832","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"888","line":2,"column":21,"nodeType":"798","messageId":"799","endLine":2,"endColumn":32},{"ruleId":"796","severity":1,"message":"939","line":3,"column":8,"nodeType":"798","messageId":"799","endLine":3,"endColumn":18},{"ruleId":"796","severity":1,"message":"821","line":25,"column":11,"nodeType":"798","messageId":"799","endLine":25,"endColumn":18},{"ruleId":"838","severity":1,"message":"872","line":35,"column":8,"nodeType":"840","endLine":35,"endColumn":10,"suggestions":"978"},{"ruleId":"796","severity":1,"message":"905","line":2,"column":9,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},"no-native-reassign",["979"],"no-negated-in-lhs",["980"],"no-unused-vars","'TAG_TEXT_INPUT' is defined but never used.","Identifier","unusedVar","'ss' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.",["979"],["980"],"'RESET_TAG' is defined but never used.","'TestReplyData' is defined but never used.","'TestTagListData' is defined but never used.","'FormedTagInputData' is defined but never used.","'axios' is defined but never used.","'height' is assigned a value but never used.",["979"],["980"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'classes' is assigned a value but never used.",["979"],["980"],"'LoginButton' is defined but never used.","'CirculerLoading' is defined but never used.","'CardMedia' is defined but never used.","'history' is assigned a value but never used.",["979"],["980"],["979"],["980"],"'useSelector' is defined but never used.",["979"],["980"],"'Button' is defined but never used.","'APICallController' is defined but never used.","'followOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'error', and 'tag_list'. Either include them or remove the dependency array.","ArrayExpression",["981"],"'SideSet' is assigned a value but never used.",["979"],["980"],"'react' is defined but never used.","'open' is assigned a value but never used.","'view_name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchTagArray'. Either include it or remove the dependency array.",["982"],"'onClose' is assigned a value but never used.","'ts' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["983","984"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["985"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["986"],["979"],["980"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'OPEN_PASSWORD' is defined but never used.","'LogOutButton' is defined but never used.","'drawerWidth' is assigned a value but never used.",["979"],["980"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["987"],"'startnum' is assigned a value but never used.","'setStartNum' is assigned a value but never used.",["979"],["980"],"'useSnackbar' is defined but never used.","'INIT_USER_TAG' is assigned a value but never used.","'INIT_USER_STATE' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["988"],"Expected '!==' and instead saw '!='.","'useDispatch' is defined but never used.","'TestFreeTagPutModal' is defined but never used.","'TestLoading' is defined but never used.","'getUserName' is defined but never used.","'tag_list' is assigned a value but never used.","React Hook useEffect contains a call to 'setBoxStyle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo] as a second argument to the useEffect Hook.",["989"],"'FormHelperText' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TextField' is defined but never used.","'TYPE_TAG_GUEST' is defined but never used.","'TYPE_TAG_MENBER' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["990"],"'createStyles' is defined but never used.","'Theme' is defined but never used.","'connect' is defined but never used.","'LinearProgress' is defined but never used.",["979"],["980"],"'loadNewMemo' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'setEnd' is assigned a value but never used.","React Hook useEffect contains a call to 'setCanSubmit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selected.length, mainText.length, hasTime, registTime] as a second argument to the useEffect Hook.",["991"],"'Menu' is defined but never used.","'MenuItem' is defined but never used.","'BorderColorSharpIcon' is defined but never used.","'EmailOutlined' is defined but never used.","'useHistory' is defined but never used.","'Switch' is defined but never used.","'SlideRoutes' is defined but never used.","'TestMain' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Collapse' is defined but never used.","'GetTagName' is defined but never used.","'tagRanks' is assigned a value but never used.","'viewmode' is assigned a value but never used.","'setViewMode' is assigned a value but never used.","'changFlg' is assigned a value but never used.",["992"],"React Hook useEffect has a missing dependency: 'changeViewList'. Either include it or remove the dependency array.",["993"],"'getTimeStampNow' is defined but never used.","React Hook useEffect has missing dependencies: 'selected' and 'sendSelectedTag'. Either include them or remove the dependency array.",["994"],["979"],["980"],"'MainHeader' is defined but never used.",["979"],["980"],"'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'onClick' is assigned a value but never used.",["995"],"React Hook useEffect has missing dependencies: 'dispatch' and 'timeline.length'. Either include them or remove the dependency array.",["996"],"'setMainText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.keyMemoMain.keySender' and 'data.numNoticeType'. Either include them or remove the dependency array.",["997"],"'Modal' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ButtonSample' is defined but never used.","'PageRouter' is defined but never used.","'ScrollUpdater' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'startnum'. Either include them or remove the dependency array.",["998"],["979"],["980"],["999"],["979"],["980"],["1000"],["979"],["980"],["1001"],["1002"],["1003"],["1004"],["979"],["980"],["1005"],["1006"],["1007"],["1008"],["1009"],"no-global-assign","no-unsafe-negation",{"desc":"1010","fix":"1011"},{"desc":"1012","fix":"1013"},{"messageId":"1014","fix":"1015","desc":"1016"},{"messageId":"1017","fix":"1018","desc":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1034","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1034","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1041","fix":"1047"},{"desc":"1045","fix":"1048"},{"desc":"1038","fix":"1049"},{"desc":"1020","fix":"1050"},{"desc":"1043","fix":"1051"},{"desc":"1010","fix":"1052"},{"desc":"1030","fix":"1053"},{"desc":"1034","fix":"1054"},{"desc":"1034","fix":"1055"},{"desc":"1036","fix":"1056"},{"desc":"1024","fix":"1057"},"Update the dependencies array to be: [dispatch, error, tag_list]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [searchTagArray, selected, tag_source]",{"range":"1060","text":"1061"},"removeEscape",{"range":"1062","text":"1063"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1064","text":"1065"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [enqueueSnackbar, snacklist]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [error, history, location]",{"range":"1072","text":"1073"},"Add dependencies array: [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",{"range":"1074","text":"1075"},"Update the dependencies array to be: [dispatch]",{"range":"1076","text":"1077"},"Add dependencies array: [selected.length, mainText.length, hasTime, registTime]",{"range":"1078","text":"1079"},"Update the dependencies array to be: [changFlg, dispatch]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [viewtype, tag_list, changeViewList]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [changeFlg, selected, sendSelectedTag]",{"range":"1084","text":"1085"},{"range":"1086","text":"1081"},"Update the dependencies array to be: [changFlg, dispatch, timeline.length]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [data.keyMemoMain.keySender, data.numNoticeType, userlist]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [dispatch, startnum]",{"range":"1091","text":"1092"},{"range":"1093","text":"1088"},{"range":"1094","text":"1092"},{"range":"1095","text":"1085"},{"range":"1096","text":"1067"},{"range":"1097","text":"1090"},{"range":"1098","text":"1059"},{"range":"1099","text":"1077"},{"range":"1100","text":"1081"},{"range":"1101","text":"1081"},{"range":"1102","text":"1083"},{"range":"1103","text":"1071"},[2561,2563],"[dispatch, error, tag_list]",[2254,2275],"[searchTagArray, selected, tag_source]",[5708,5709],"",[5708,5708],"\\",[774,776],"[props]",[487,498],"[enqueueSnackbar, snacklist]",[856,858],"[dispatch, props.match.params.id]",[643,659],"[error, history, location]",[5028,5028],", [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",[3216,3218],"[dispatch]",[1928,1928],", [selected.length, mainText.length, hasTime, registTime]",[7450,7460],"[changFlg, dispatch]",[7764,7783],"[viewtype, tag_list, changeViewList]",[2254,2265],"[changeFlg, selected, sendSelectedTag]",[797,807],[1461,1471],"[changFlg, dispatch, timeline.length]",[1647,1657],"[data.keyMemoMain.keySender, data.numNoticeType, userlist]",[1087,1089],"[dispatch, startnum]",[1461,1471],[1087,1089],[2254,2265],[774,776],[1647,1657],[2561,2563],[3216,3218],[797,807],[7450,7460],[7764,7783],[856,858]]