[{"D:\\dev\\JS\\taglead_react\\src\\store\\index.js":"1","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js":"2","D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js":"3","D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js":"4","D:\\dev\\JS\\taglead_react\\src\\actions\\index.js":"5","D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js":"6","D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js":"7","D:\\dev\\JS\\taglead_react\\src\\pages\\SingleButtonPage.js":"8","D:\\dev\\JS\\taglead_react\\src\\pages\\LogoutPage.js":"9","D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js":"10","D:\\dev\\JS\\taglead_react\\src\\pages\\ErrorPage.js":"11","D:\\dev\\JS\\taglead_react\\src\\PageBase.js":"12","D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js":"13","D:\\dev\\JS\\taglead_react\\src\\components\\FormedTagPutModal.js":"14","D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js":"15","D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js":"16","D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js":"17","D:\\dev\\JS\\taglead_react\\src\\components\\FeedbackSnackBar.js":"18","D:\\dev\\JS\\taglead_react\\src\\components\\SideDrawer.js":"19","D:\\dev\\JS\\taglead_react\\src\\reportWebVitals.js":"20","D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js":"21","D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js":"22","D:\\dev\\JS\\taglead_react\\src\\test\\TestTagPutModal.js":"23","D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js":"24","D:\\dev\\JS\\taglead_react\\src\\App.js":"25","D:\\dev\\JS\\taglead_react\\src\\lib\\ActionTypeString.js":"26","D:\\dev\\JS\\taglead_react\\src\\components\\TagInputList.js":"27","D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js":"28","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumns.js":"29","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js":"30","D:\\dev\\JS\\taglead_react\\src\\test\\TestMemoColumn.js":"31","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js":"32","D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js":"33","D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js":"34","D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js":"35","D:\\dev\\JS\\taglead_react\\src\\components\\FreeTagInputModal.js":"36","D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js":"37","D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js":"38","D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js":"39","D:\\dev\\JS\\taglead_react\\src\\routers.js":"40","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js":"41","D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js":"42","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ShowInfoSet.js":"43","D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js":"44","D:\\dev\\JS\\taglead_react\\src\\test\\TestFreeTagPutModal.js":"45","D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js":"46","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js":"47","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumnList.js":"48","D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js":"49","D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js":"50","D:\\dev\\JS\\taglead_react\\src\\lib\\ServiceConfig.js":"51","D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js":"52","D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js":"53","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js":"54","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\SummaryMemo.js":"55","D:\\dev\\JS\\taglead_react\\src\\test\\TestLoading.js":"56","D:\\dev\\JS\\taglead_react\\src\\index.js":"57","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js":"58","D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js":"59","D:\\dev\\JS\\taglead_react\\src\\pages\\FirstLoginEndPage.js":"60","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ExpandText.js":"61","D:\\dev\\JS\\taglead_react\\src\\lib\\GlobalCSS.js":"62"},{"size":629,"mtime":1608112287878,"results":"63","hashOfConfig":"64"},{"size":873,"mtime":1640765964484,"results":"65","hashOfConfig":"64"},{"size":12538,"mtime":1640871920951,"results":"66","hashOfConfig":"64"},{"size":2872,"mtime":1640875270559,"results":"67","hashOfConfig":"64"},{"size":8232,"mtime":1639749906571,"results":"68","hashOfConfig":"64"},{"size":3850,"mtime":1640936104228,"results":"69","hashOfConfig":"64"},{"size":1206,"mtime":1639922966640,"results":"70","hashOfConfig":"64"},{"size":1385,"mtime":1639985313201,"results":"71","hashOfConfig":"64"},{"size":657,"mtime":1635512955730,"results":"72","hashOfConfig":"64"},{"size":736,"mtime":1635513014440,"results":"73","hashOfConfig":"64"},{"size":1128,"mtime":1636015857034,"results":"74","hashOfConfig":"64"},{"size":4179,"mtime":1639889585286,"results":"75","hashOfConfig":"64"},{"size":1949,"mtime":1638882178426,"results":"76","hashOfConfig":"64"},{"size":13138,"mtime":1638802419612,"results":"77","hashOfConfig":"64"},{"size":4133,"mtime":1626508415759,"results":"78","hashOfConfig":"64"},{"size":608,"mtime":1608113414217,"results":"79","hashOfConfig":"64"},{"size":1418,"mtime":1635551732984,"results":"80","hashOfConfig":"64"},{"size":543,"mtime":1638802353262,"results":"81","hashOfConfig":"64"},{"size":1983,"mtime":1635768204681,"results":"82","hashOfConfig":"64"},{"size":362,"mtime":1608110817498,"results":"83","hashOfConfig":"84"},{"size":3576,"mtime":1638966235429,"results":"85","hashOfConfig":"64"},{"size":2204,"mtime":1638778006318,"results":"86","hashOfConfig":"64"},{"size":2826,"mtime":1633508682534,"results":"87","hashOfConfig":"84"},{"size":12020,"mtime":1641194982923,"results":"88","hashOfConfig":"64"},{"size":1390,"mtime":1639888983249,"results":"89","hashOfConfig":"64"},{"size":2664,"mtime":1639749987847,"results":"90","hashOfConfig":"64"},{"size":6114,"mtime":1641561733649,"results":"91","hashOfConfig":"64"},{"size":2093,"mtime":1638080443908,"results":"92","hashOfConfig":"64"},{"size":7582,"mtime":1638777272633,"results":"93","hashOfConfig":"64"},{"size":4023,"mtime":1637238377007,"results":"94","hashOfConfig":"64"},{"size":1764,"mtime":1626698918356,"results":"95","hashOfConfig":"84"},{"size":1800,"mtime":1641472540352,"results":"96","hashOfConfig":"64"},{"size":742,"mtime":1636015804423,"results":"97","hashOfConfig":"64"},{"size":865,"mtime":1635283732731,"results":"98","hashOfConfig":"64"},{"size":1761,"mtime":1624076656491,"results":"99","hashOfConfig":"64"},{"size":8182,"mtime":1641600901927,"results":"100","hashOfConfig":"64"},{"size":3037,"mtime":1638779013292,"results":"101","hashOfConfig":"64"},{"size":694,"mtime":1633504141508,"results":"102","hashOfConfig":"64"},{"size":2849,"mtime":1641608543545,"results":"103","hashOfConfig":"64"},{"size":2523,"mtime":1639889058039,"results":"104","hashOfConfig":"64"},{"size":10516,"mtime":1641433548198,"results":"105","hashOfConfig":"64"},{"size":3611,"mtime":1638777324928,"results":"106","hashOfConfig":"64"},{"size":778,"mtime":1638801990980,"results":"107","hashOfConfig":"64"},{"size":697,"mtime":1633426374627,"results":"108","hashOfConfig":"64"},{"size":851,"mtime":1633508725140,"results":"109","hashOfConfig":"64"},{"size":890,"mtime":1637042313118,"results":"110","hashOfConfig":"64"},{"size":5732,"mtime":1641108336877,"results":"111","hashOfConfig":"64"},{"size":2013,"mtime":1638948694336,"results":"112","hashOfConfig":"64"},{"size":381,"mtime":1608118434578,"results":"113","hashOfConfig":"64"},{"size":1587,"mtime":1634390355401,"results":"114","hashOfConfig":"64"},{"size":162,"mtime":1641108973227,"results":"115","hashOfConfig":"64"},{"size":1056,"mtime":1637328471555,"results":"116","hashOfConfig":"64"},{"size":2952,"mtime":1638953185422,"results":"117","hashOfConfig":"64"},{"size":2341,"mtime":1638777257314,"results":"118","hashOfConfig":"64"},{"size":2316,"mtime":1641620971306,"results":"119","hashOfConfig":"64"},{"size":1090,"mtime":1633677651670,"results":"120","hashOfConfig":"64"},{"size":781,"mtime":1639895698680,"results":"121","hashOfConfig":"64"},{"size":1782,"mtime":1630108056249,"results":"122","hashOfConfig":"64"},{"size":1101,"mtime":1638187297824,"results":"123","hashOfConfig":"64"},{"size":1194,"mtime":1639895158016,"results":"124","hashOfConfig":"64"},{"size":1151,"mtime":1640849875148,"results":"125","hashOfConfig":"64"},{"size":1057,"mtime":1641473941326,"results":"126","hashOfConfig":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"m51bgq",{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"133"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"150"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"1j3t54r",{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"133"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"146"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"133"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"150"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"163"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"146"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"230"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"167"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"133"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"133"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"146"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"140"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\JS\\taglead_react\\src\\store\\index.js",[],["302","303"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagText.js",["304","305","306","307"],"import { TAG_TEXT_INPUT } from \"../../lib/TagTypeNames\";\r\n\r\nimport React  from 'react';\r\nimport {useSelector } from 'react-redux';\r\n\r\nconst TagText=({tagtextarray})=>{\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n\r\n    let ss=\"\";\r\n    if (!tagtextarray) return (<span/>);\r\n\r\n    return tagtextarray.split(\",\").map((d)=>{\r\n\r\n        if (d.includes(\":\")){\r\n            const sd=d.split(\":\");\r\n            const tagname=tag_list.find(el=> el.id==sd[0]);\r\n            if( !tagname ) return  (<span> タグ不明 {d} :</span>)\r\n            \r\n            return tagname.strTagName+\":\"+sd[1];\r\n        }\r\n\r\n        const tagname=tag_list.find(el=> el.id==d );\r\n        //console.log(tagname);\r\n        if( !tagname ) return  <span> タグ不明 {d} :</span>\r\n\r\n        return  <span>{tagname.strTagName} :</span> \r\n    });\r\n};\r\n\r\nexport default  TagText;",["308","309"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoColumn.js",["310","311"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport {IconButton,Box, Button}  from '@material-ui/core';\r\nimport {Menu,MenuItem} from '@material-ui/core';\r\n\r\nimport {DoubleArrowOutlined} from '@material-ui/icons';\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\nimport StarBorderTwoToneIcon from  '@material-ui/icons/StarBorderTwoTone';\r\nimport { Typography } from '@material-ui/core';\r\nimport TagFaces from '@material-ui/icons/TagFaces';\r\n\r\nimport  {getDateMessage} from  '../lib/UtilityLibrary';\r\nimport ExpandText from './parts/ExpandText';\r\nimport {TagChipList} from './parts/TagChip';\r\nimport {MAKE_NEWFOLLOW_MODAL,MAKE_NEW_REPLY_MODAL} from '../lib/ActionTypeString';\r\nimport {hasreadCheck,hasfavCheck,editMemo, deleteMemo} from '../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n    box11:{\r\n        width:\"85%\",\r\n        padding: \"0.5em 1em\",\r\n        margin: \"2em 0\",\r\n        color: \"#5d627b\",\r\n        background: \"white\",\r\n        borderTop: \"solid 5px #5d627b\",\r\n        boxShadow: \"0 3px 5px rgba(0, 0, 0, 0.22)\",\r\n        p:{\r\n            margin: 0, \r\n            padding: 0    \r\n        }\r\n    },\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1,2),\r\n        borderTop: '2px solid #ccc',\r\n        fontSize:'15px'\r\n      },\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    \r\n    topset:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\"\r\n\r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n    toName:{\r\n        textAlign:\"right\",\r\n    },\r\n    todatePublish:{\r\n        textAlign:\"right\",\r\n    },\r\n    toFooter:{\r\n        margin:\"0 0 0 auto\"\r\n    },\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",  \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    followarea:{\r\n        marginLeft:\"5%\",\r\n        border:'2px solid #888',\r\n        width:\"90%\",\r\n        fontSize:\"12px\"\r\n    },\r\n\r\n    editable:{\r\n        border:\"2px solid\",\r\n        borderColor:\"#ffd700\",\r\n        borderRadius:\"10px\",\r\n       \r\n        focus:{\r\n            outline:\"none\"\r\n        }\r\n    },\r\n    deleted:{\r\n        textAlign:\"center\",\r\n        verticalAlign:\"middle\",\r\n        display:\"table-cell\",\r\n        height:\"50px\",\r\n        borderRadius:\"5px\",\r\n        backgroundColor:\"#ddd\",\r\n        color:\"#888\",\r\n        fontStyle:\"italic\"\r\n\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst MemoColumn=({data,read,fav,rep=false})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n    const menuOpen=Boolean(anchorEl);\r\n\r\n    const [editable,setEditable]=useState(false);\r\n    const [bdelete,setDelete]=useState(false);\r\n    const [editText,setEditText]=useState(data.strMainText);\r\n    //const editform=useRef(data.strMainText.replace(/\\n/g,'<br>'));\r\n    \r\n    const userId = useSelector(state => state.auth_login.userId,-1);\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [isFav, setFavorite] = useState(fav.includes(data.id),[]);\r\n    const [hasRead, setRead] = useState(read.includes(data.id),[]);\r\n    \r\n    const history=useHistory();\r\n    const classes=useStyles();\r\n    const dispatch= useDispatch();\r\n\r\n    const onFavClick=()=>{\r\n        setFavorite(!isFav);\r\n        dispatch(hasfavCheck(data.id,!isFav));\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!hasRead);\r\n        dispatch(hasreadCheck(data.id,!hasRead));\r\n    };\r\n\r\n     const getNames=(arr)=>{\r\n         //console.log(\"arr:\", arr);\r\n         const ars=String(arr).split(\",\");\r\n         const names=ars.map((d)=>{\r\n             if( String(userId) ===d ) return \"自分\";\r\n\r\n            const tg=user_list.find((el)=>el.id===parseInt(d));\r\n            //console.log(\"tg\",tg);\r\n            if (typeof(tg)==\"undefined\") return \"不明\";\r\n            return tg.strName;\r\n         });\r\n         \r\n         return names.reduce((acc,value)=>acc+\",\"+value);\r\n     };\r\n\r\n\r\n     const MemoManipulate=()=>{\r\n         const openFunc=()=>{\r\n            setEditable(true);\r\n            setAnchorEl(null);\r\n         }\r\n    \r\n        const menuClick=(e)=>{\r\n            setAnchorEl(e.currentTarget);            \r\n        };\r\n\r\n        const menuClose=()=>{\r\n            setAnchorEl(null);\r\n        }\r\n        const startDelete=()=>{\r\n            setDelete(true);\r\n            setAnchorEl(null);\r\n        }\r\n\r\n         return(\r\n             <span>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={menuClick} ><TagFaces/></IconButton>\r\n            <Menu\r\n            id=\"basic-menu\"\r\n            anchorEl={anchorEl}\r\n            open={menuOpen}\r\n            onClose={menuClose}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'basic-button',\r\n            }}\r\n            >\r\n                <MenuItem onClick={()=>openFunc(data.strMainText)}>メモを修正</MenuItem>\r\n                <MenuItem onClick={startDelete}>メモを削除</MenuItem>\r\n            </Menu>\r\n          </span>\r\n         )\r\n     }\r\n\r\n    const EditableColumn=(str)=>{\r\n        \r\n        const checkEditable=(str)=>{\r\n            setEditText(str);\r\n        }\r\n        const cancelEditable=()=>{\r\n            setEditable(false);\r\n        }\r\n\r\n        const onEditEnd=()=>{\r\n        \r\n            const sendTxt=editText.replace(/<br>/g,'\\n');\r\n            dispatch(editMemo(data.id,sendTxt));\r\n            setEditable(false);    \r\n        }\r\n    \r\n        return(\r\n            <Box >\r\n                <div>\r\n                <div><Typography variant='h6' >編集</Typography></div>\r\n                <div className={classes.editable}>\r\n                 <span  contentEditable dangerouslySetInnerHTML={{__html:data.strMainText.replace(/\\n/g,'<br>')}} onInput={(e)=>checkEditable(e.target.innerHTML)} />\r\n                 </div>\r\n                </div>\r\n                <div className={classes.toFooter}>\r\n                    <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onEditEnd()} ><Typography variant='button' >投稿</Typography></Button> </span>\r\n                    <span><Button color=\"default\" variant=\"contained\" onClick={()=>cancelEditable()} ><Typography variant='button' >キャンセル</Typography></Button> </span>\r\n                </div>\r\n            \r\n            </Box>\r\n        )\r\n     };\r\n\r\n\r\n\r\n    const DeleteColumn=()=>{\r\n        \r\n        const cancelDelete=()=>{\r\n            setDelete(false);\r\n   \r\n        }\r\n        const onDeleteEnd=()=>{\r\n            dispatch(deleteMemo(data.id));    \r\n        }\r\n    \r\n        return(\r\n            <Box >\r\n                <div><Typography variant='h6' >このメモを削除する</Typography></div>\r\n                <div className={classes.toFooter}>\r\n                    <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onDeleteEnd()} ><Typography variant='button' >削除</Typography></Button> </span>\r\n                    <span><Button color=\"default\" variant=\"contained\" onClick={()=>cancelDelete()} ><Typography variant='button' >キャンセル</Typography></Button> </span>\r\n                </div>\r\n            \r\n            </Box>\r\n        )\r\n     };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.box11}>\r\n                    <div className={classes.topset} >\r\n                        <span className={classes.headertext}>\r\n                        <div><Typography variant='h6' >{getDateMessage(data.dateRegist) }</Typography></div>\r\n                        <div><Typography variant='subtitle2' >{getNames(data.keySender)}より </Typography></div> \r\n                        </span>\r\n                        <span className={classes.ulbutton}>\r\n                            <span className={classes.ulbutton}>\r\n                                <IconButton onClick={!hasRead ?  onReadClick : ()=>{} }>\r\n                                    {hasRead ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                                </IconButton>\r\n                            </ span>\r\n                        \r\n                            <span className={classes.icons} >\r\n                                <IconButton onClick={onFavClick} >\r\n                                    {isFav ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                                </IconButton>\r\n                            \r\n                            </span>\r\n\r\n                            {userId===data.keySender & !data.boolHasDeleted ?\r\n                                <span className={classes.icons} >\r\n                                    {MemoManipulate()}\r\n                                </span>\r\n                                :\r\n                                <span/>\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                          \r\n                    {!editable ?\r\n                        <div>\r\n                            <div><span > <TagChipList listStr={data.strTaglist} /></span></div>\r\n                            { data.boolHasDeleted ?\r\n                                <div className={classes.deleted}><Typography variant='h6' >このメモは削除されました</Typography></div>\r\n                              :\r\n                                <ExpandText txtSource={data.strMainText} limit={TEXT_LIMIT} />\r\n                              \r\n                            } \r\n\r\n                        </div>\r\n                    :\r\n                        EditableColumn(editText)\r\n                    }\r\n\r\n                    { data.keyFollowId &&\r\n                        <div className={classes.followarea}>\r\n                        < div><div>{getDateMessage(data.keyFollowId.dateRegist) }</div><div> <TagChipList listStr={data.keyFollowId.strTaglist} /> </div> <ExpandText txtSource={data.keyFollowId.strMainText} limit={TEXT_LIMIT}/></div>\r\n                        </div>\r\n                    }\r\n                    {bdelete ?\r\n                        DeleteColumn()\r\n                    :\r\n                        <div className={classes.ulbutton} >\r\n                            <span><IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} onClick={()=>dispatch({type:MAKE_NEW_REPLY_MODAL,reply_source:data})} ><ReplyTwoToneIcon size=\"small\"/></IconButton></span>\r\n                            <span><IconButton edge=\"start\" ize=\"small\" color=\"inherit\" onClick={()=>dispatch({type:MAKE_NEWFOLLOW_MODAL,follow_data:data})} ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton></span>\r\n                            {data.keyReplyBase &  !rep　?\r\n                                <span><Button edge=\"start\" ize=\"small\" color=\"inherit\" onClick={()=>history.push(\"/reply/\"+data.id)}   endIcon={<DoubleArrowOutlined />}> 応答を開く </Button></span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            {data.boolHasModified &&\r\n                                <span> 修正あり </span>\r\n                            }\r\n                            <span className={classes.toFooter}>\r\n                                <div className={classes.todatePublish}> { getDateMessage(data.datePublish) }</div>\r\n                                {  data.listReceiver & data.listReceiver!==\"\" ?\r\n                                    <div className={classes.toName} >宛先:{getNames(data.listReceiver)}</div>\r\n                                    :\r\n                                    <div/>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MemoColumn;","D:\\dev\\JS\\taglead_react\\src\\components\\SideMenu.js",["312","313"],"import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {LogOutButton} from './parts/AuthButtons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        //position: \"relative\"\r\n      },\r\n      \r\n      header: {\r\n        color: \"#ffffff\",\r\n        borderLeft: \"solid 6px #3f51b5\",/*左側の線*/\r\n        background: \"#3f51b5\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      },\r\n      column: {\r\n        color: \"#3f51b5\",\r\n        borderLeft: \"solid 6px #3f51b5\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideMenu=({onClose=null})=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n    const username=useSelector(state=>state.auth_login.username);\r\n    const facName=useSelector(state=>state.auth_login.facName);\r\n    const userRank=useSelector(state=>state.auth_login.userRank);\r\n\r\n    const onMove=(path=\"none\")=>{\r\n        if (path!==\"none\"){\r\n          history.push(path);\r\n        }\r\n        if (onClose){\r\n          onClose();\r\n        }\r\n\r\n    };\r\n\r\n    const menuList=[\r\n      {path:\"/favorite\" , name:\"お気に入り一覧\"},\r\n      {path:\"/notice\" , name:\"通知一覧\"},\r\n      {path:\"/tagconfig\" , name:\"タグ設定\"},\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.listShelf}>\r\n\r\n            <div className={classes.header}>\r\n              <div><Typography variant='caption'>-{facName}-</Typography></div>\r\n              <div><Typography variant='button'>{username}</Typography></div>\r\n            </div>\r\n            {\r\n              menuList.map((menu)=>(\r\n                <div className={classes.column} onClick={()=>onMove(menu.path)}><Typography variant='subtitle1' gutterBottom > {menu.name} </Typography></div>\r\n              ))\r\n            }\r\n            {userRank>1 ?\r\n              <div className={classes.column} onClick={()=>onMove(\"/tagadmin\")}><Typography variant='subtitle1' gutterBottom > タグ管理メニュー </Typography></div>\r\n              :\r\n              <div/>\r\n            }\r\n            <div className={classes.column}>\r\n              <LogOutButton />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideMenu;\r\n        ",["314","315"],"D:\\dev\\JS\\taglead_react\\src\\actions\\index.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\MainHeader.js",["316","317"],"import React,{useEffect,useState} from 'react';\r\nimport { NavLink,useLocation,useHistory } from 'react-router-dom';\r\nimport  {useWindowDimensions} from '../lib/useWindowDimensions';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n//メモ単画像表示\r\n\r\n//現在ログインしているユーザの名前を表示する\r\n//ログインしているユーザーがいなければ施設の名前を表示する\r\n\r\n//機能メニューを表示する\r\n\r\nconst mainheaderStyle = makeStyles((theme) => ({\r\n  // root:{\r\n  //   flexGrow: 1,\r\n  //   display :\"flex\",\r\n  //   justifyContent: \"center\"\r\n  \r\n  // },\r\n  layOut:{\r\n    justifyContent: \"center\"\r\n  },\r\n    centerButton:{\r\n      display:\"flex\",\r\n      justifyContent:\"center\"\r\n\r\n    },\r\n    nav: {\r\n      \r\n//      display:\"flex\",\r\n//      justifyContent:\"center\",\r\n      display: \"grid\",\r\n      grid: \"auto / auto-flow\",\r\n      padding: \"3px\",\r\n      marginTop: \"4px\",\r\n      marginBottom: \"4px\",\r\n      background: \"#eee\",\r\n      borderRadius: \"10px\",\r\n\r\n      \"& a\" :{\r\n        display: \"block\",\r\n        color: \"#000\",\r\n        //marginRight:\"15px\",\r\n        //marginLeft:\"15px\",\r\n        padding:\" 0 20px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"32px\",\r\n        textDecoration: \"none\"\r\n      },\r\n      \"& a.active\" : {\r\n        background: \"#fff\",\r\n        fontWeight: 500,\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 1px 4px rgba(0, 0, 0, 0.1)\"\r\n      }\r\n    \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\n  \r\n\r\nconst MainHeader=(props)=>{\r\n  //console.log(\"props\"+ props);\r\n    const classes = mainheaderStyle();\r\n    const [prevPath,setPrevpath]=useState(\"\");\r\n    const location=useLocation();\r\n    const [isBack,setIsBack]=useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n      const path=location.pathname.split(\"/\")[1];\r\n      if ( \"tag\" === path || \"main\" === path ){\r\n        setIsBack(false);\r\n        setPrevpath(path);\r\n      }else{\r\n        setIsBack(true);\r\n      }\r\n\r\n    },[location]);\r\n    const history=useHistory();\r\n\r\n    const { width, height } = useWindowDimensions();\r\n    //今はサイズは適当\r\n    //if (width>500){\r\n        return (\r\n            <div   >\r\n              <AppBar position=\"fixed\"  >\r\n                <Toolbar >\r\n                  {isBack ?\r\n                    <IconButton  onClick={()=>history.push(\"/\"+prevPath)} ><ArrowBackIcon/></IconButton>\r\n                    :\r\n                    width<600  &&\r\n                          <IconButton edge=\"start\" className={classes.menuButton}  onClick={()=>props.openMenu()} color=\"inherit\" aria-label=\"menu\">\r\n                             <MenuIcon  />\r\n                          </IconButton>\r\n\r\n                  }\r\n                  {!isBack &&\r\n                    <div className={classes.centerButton}>\r\n                      <span className={classes.nav}>\r\n                          <NavLink to=\"/main\" exact><div className={classes.a}><Typography variant='h6' gutterBottom >  一覧  </Typography></div></NavLink>\r\n                          <NavLink to=\"/tag\" exact><div className={classes.a}><Typography variant='h6' gutterBottom > タグ検索 </Typography></div></NavLink>\r\n                      </span>\r\n                    </div>\r\n\r\n                  }\r\n              \r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          );\r\n\r\n    //}\r\n\r\n}\r\n\r\nexport default MainHeader;",["318","319"],"D:\\dev\\JS\\taglead_react\\src\\pages\\LoginPage.js",["320"],"import {useHistory} from 'react-router-dom';\r\nimport {FirstLoginButton, LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {CardMedia} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   buttons:{\r\n      display:\"block\",\r\n      //margin:\"0 auto\",\r\n      marginRight:\"auto\",\r\n      marginLeft:\"auto\",\r\n      alignItems:\"center\",\r\n\r\n      justifyContent:\"center\"\r\n   }\r\n\r\n}));\r\n\r\nconst LoginPage = () => {\r\n   const classes=styles();\r\n   const CardContent=(\r\n      <CardMedia  height={\"50%\"} component=\"img\" image={`${process.env.PUBLIC_URL}/tagleadlogo.png`} />\r\n   );\r\n\r\n   const CardAction=(\r\n      <div className={classes.buttons}>\r\n            <LoginButton />\r\n            <FirstLoginButton/>\r\n      </div>\r\n   );\r\n    const Footer=(\r\n      <CirculerLoading isModal={true} />\r\n    )\r\n\r\n   return (\r\n\r\n      <div>\r\n         <SingleButtonPage \r\n            Content={CardContent}\r\n            ButtonAction={CardAction}\r\n            Footer={Footer}\r\n         />\r\n      </div>\r\n\r\n   );\r\n};\r\n\r\nexport default LoginPage;",["321","322"],"D:\\dev\\JS\\taglead_react\\src\\pages\\SingleButtonPage.js",["323","324","325","326"],"import {useHistory} from 'react-router-dom';\r\nimport {LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {Card,CardContent,CardMedia,CardActions} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   loginroot:{\r\n\r\n      justifyContent:\"center\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto` \r\n   },\r\n\r\n   card: {\r\n      //:\"50%\",\r\n      justifyContent:\"center\",\r\n      marginTop: theme.spacing(20),\r\n      width:'70%',\r\n      maxWidth:\"300px\"\r\n\r\n   },\r\n   \r\n   button:{\r\n      display:\"block\",\r\n      justifyContent:\"center\",\r\n      // marginRight:\"auto\",\r\n      // marginLeft:\"auto\"\r\n      margin:\"0 auto\"\r\n   }\r\n\r\n}));\r\n\r\nconst SingleButtonPage = ({Content,ButtonAction,Footer}) => {\r\n   const history=useHistory();\r\n   const classes=styles();\r\n   \r\n   return (\r\n\r\n      <div className={classes.loginroot}>\r\n         <Card className={classes.card}>\r\n            <CardContent>\r\n               {Content}\r\n            </CardContent>\r\n            <CardActions>        \r\n               <div className={classes.button}>{ButtonAction}</div>\r\n            </CardActions>\r\n         </Card>\r\n         <div>{Footer}</div>\r\n          \r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleButtonPage;","D:\\dev\\JS\\taglead_react\\src\\pages\\LogoutPage.js",[],"D:\\dev\\JS\\taglead_react\\src\\pages\\TaggedSearchPage.js",["327"],"import React, {useEffect} from 'react';\r\nimport {useSelector}  from 'react-redux';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport TagSearchList from \"../components/TagSearchList\";\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n//テスト表示用\r\n\r\n\r\n//メインページの画面メイン\r\nconst TaggedSearchPage=(props)=>{\r\n\r\n    //const tag_list=useSelector(state=>state.auth_login.all_tag,[]);\r\n    \r\n    useEffect(() => {        \r\n        APICallController.setView(\"tag\");\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\" >\r\n            <TagSearchList />\r\n            <CirculerLoading isModal={false} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  TaggedSearchPage;",["328","329"],"D:\\dev\\JS\\taglead_react\\src\\pages\\ErrorPage.js",["330","331"],"import { Button } from '@material-ui/core';\r\nimport React ,{ useState,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { LogOutButton } from '../components/parts/AuthButtons';\r\nimport {Card} from \"@material-ui/core\";\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst ErrorPage=(props)=>{\r\n\r\n    const error=useSelector(state=>state.error_control);\r\n    const [errorCode,setErrorCode] =useState(\"\");\r\n    const [errorMsg,setErrorMsg] =useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setErrorCode(error.errorCode);\r\n        setErrorMsg(error.errorMsg);\r\n        \r\n    }, [error]);\r\n\r\n    const Content=()=>{\r\n        return(\r\n            <div>\r\n                <div> エラーが発生しました。　一度ログアウトしてください。</div>\r\n                <div>状況： {errorMsg}</div>\r\n                <div>コード:　{errorCode}</div>\r\n            </div>\r\n    )};\r\n    \r\n    return (\r\n        <SingleButtonPage\r\n            Content={Content()}\r\n            ButtonAction={<LogOutButton/>}\r\n            Footer={<div/>}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default  ErrorPage;\r\n",["332","333"],"D:\\dev\\JS\\taglead_react\\src\\PageBase.js",["334","335"],"import React, {useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport MainHeader from \"./components/MainHeader\";\r\nimport MemoInsertButton from \"./components/MemoInsertButton\";\r\nimport FreeTagInputModal from './components/FreeTagInputModal';\r\nimport  FormedTagPutModal from './components/FormedTagPutModal';\r\nimport  SideMenu from './components/SideMenu';\r\nimport  SideDrawer from './components/SideDrawer';\r\nimport FeedbackSnackBar from './components/FeedbackSnackBar';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from './lib/ActionTypeString';\r\nimport PageRouter from './routers';\r\n\r\nimport  {auth_login_success} from './actions';\r\nimport { checkHasContent } from './lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useWindowDimensions } from './lib/useWindowDimensions';\r\n\r\nconst Styles=makeStyles({\r\n    \r\n    side: {\r\n        position:\"fixed\",\r\n        marginTop:'28px',\r\n       width:'200px',\r\n       //top:'120px',\r\n       //zIndex:10,\r\n     } ,\r\n     \r\n    contentMobile: {\r\n        //left:\"150px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       //marginLeft:\"10px\"\r\n     },\r\n     \r\n     \r\n    contentDesktop: {\r\n        left:\"200px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       marginLeft:\"210px\"\r\n     },\r\n\r\n     article :{\r\n        display:\"flex\",\r\n       \r\n    }\r\n     \r\n});\r\n\r\n\r\n//メインページの画面メイン\r\nconst PageBase=(props)=>{\r\n\r\n    const dispatch=useDispatch();\r\n    const  error=useSelector(state=>state.error_control.errorFlg,false) ;\r\n    const [menuOpen,setMenuOpen]=useState(false);\r\n    const [freetagOpen,setFreeTagOpen]=useState(false);\r\n    const [formtagOpen,setformTagOpen]=useState(false);\r\n    const reply_source=useSelector(state=>state.reply_main.reply_source);\r\n    const follow_data = useSelector(state => state.follow_main.follow_data,{});\r\n    const tag_list=useSelector(state=>state.auth_login.tag_list,[]);\r\n\r\n    const classes=Styles();\r\n\r\n    const onMenuOpen=()=>{\r\n        setMenuOpen(true);\r\n    };\r\n\r\n    const onMenuClose=()=>{\r\n        setMenuOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const closeModal=()=>{\r\n        setformTagOpen(false);\r\n        setFreeTagOpen(false);\r\n\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        //認証までの実装　実際はログイン終了時のアクションで以下を行う\r\n        if ( tag_list && tag_list.length>0) return;\r\n\r\n        if(error) return;\r\n\r\n        dispatch(auth_login_success());\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(checkHasContent(follow_data)|| checkHasContent(reply_source) ){\r\n            setFreeTagOpen(true);\r\n        }\r\n\r\n    },[follow_data,reply_source]);\r\n\r\n    const onModalOpen=(action)=>{\r\n        switch (action) {\r\n            case FREE_MODAL_OPEN:\r\n                setFreeTagOpen(true);\r\n                break;\r\n        \r\n            case FORMED_MODAL_OPEN:\r\n                setformTagOpen(true);\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const {width,height}=useWindowDimensions();\r\n    const isMobile=width<500;\r\n    return (\r\n        <div>\r\n        {error ?\r\n            <div/>\r\n            :   \r\n            <div>\r\n                <MainHeader mobile={isMobile}  openMenu={onMenuOpen} />\r\n                {isMobile ?\r\n                    <SideDrawer mobile={isMobile}  open={menuOpen} onClose={ onMenuClose } />\r\n                :\r\n                    <div className={classes.side} >\r\n                        <SideMenu/>\r\n                    </div>\r\n\r\n                }\r\n\r\n                <div className={isMobile ? classes.contentMobile : classes.contentDesktop  }>\r\n                    <PageRouter/>\r\n                </div>\r\n                <FeedbackSnackBar/>\r\n                <MemoInsertButton  onModalOpen={onModalOpen} />\r\n                <FormedTagPutModal open={formtagOpen} onClose={()=>closeModal()} />\r\n                <FreeTagInputModal open={freetagOpen} onClose={()=>closeModal()}  follow_data={follow_data} reply_source={reply_source} />\r\n                \r\n            </div>\r\n        }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default  PageBase;",["336","337"],"D:\\dev\\JS\\taglead_react\\src\\lib\\ConnectionLibrary.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\FormedTagPutModal.js",["338","339"],"import {useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Button,TextField, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewFormedMemo} from '../actions';\r\n\r\nimport {TAG_DATE_INPUT,\r\n        TAG_NUMBER_INPUT, \r\n        TAG_TEXT_INPUT,\r\n        TAG_TIME_INPUT,\r\n        TAG_MULTILINE_INPUT\r\n    } from  '../lib/TagTypeNames';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left-end',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n      \r\n    modal:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      \r\n    },\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        borderRadius:\"10px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\n\r\n\r\nconst FormedTagPutModal=(props)=>{\r\n\r\n    const classes=useStyles();\r\n    //今まで設定したタグ\r\n\r\n    //現在選択中のタグ\r\n    const [selected,setSelected]=useState([]);\r\n    //最後以外の選択中のタグ\r\n    const [defs,setDefs]=useState([]);\r\n    //最後のタグ\r\n    const [lastOne,setLastOne]= useState({});\r\n\r\n    const textRef=useRef(null);\r\n    const textRefMain=useRef(null);\r\n    const tag_source=useSelector(state=>state.auth_login.formatted);\r\n    const [tagArray,setTagArray]=useState([]);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(()=>{\r\n        searchTagArray();\r\n    },[selected,tag_source]);\r\n\r\n    //Setを利用した積集合作成関数\r\n    const  intersection = (setA, setB)=> {\r\n        let _intersection = new Set();\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem);\r\n            }\r\n        }\r\n        return _intersection;\r\n    };\r\n\r\n\r\n    const searchTagArray=()=>{\r\n        if(!tag_source || tag_source.length===0) return;\r\n        \r\n        //現在取得しているリストをSetに変換、比較に使う\r\n        const nowTag=new Set(selected.map((d)=>{return d.keyTagMain.id;}));\r\n\r\n        const nowGroup=new Set(selected.map((d)=>{return d.strGroup;}));\r\n\r\n        const newTagArray=[];\r\n        let phaseNow=selected.reduce((acc,value)=>(acc<value.numTagPhase ? value.numTagPhase : acc),0);\r\n\r\n        const showArray=(str)=>{\r\n            const s=str.split(\",\")\r\n            if (s===[]) return [];\r\n            return s.map((d)=>parseInt(d));\r\n        }\r\n  \r\n        tag_source.forEach(element => {\r\n            //要素のdelに現在\r\n            let showFlg=false;\r\n            //新規タグの表示条件に選択中のタグが入っていたら表示候補にする\r\n            const hasEl=new Set(showArray(element.strShow));\r\n            if(intersection(hasEl,nowTag).size>0)  showFlg=true;\r\n\r\n            //自分自身がすでに選択されていたら候補に入れない\r\n            if(nowTag.has(element.id))  showFlg=false;  \r\n            //すでにグループの項目が設定されていたら候補に入れない\r\n            if(element.strGroup && nowGroup.has(element.strGroup)){\r\n                showFlg=false;\r\n            }               \r\n\r\n            //表示条件に該当したら選択候補に追加する\r\n            if(showFlg) newTagArray.push(element);\r\n        \r\n        });\r\n\r\n        //選択候補があったらそのまま選択候補を表示に回す\r\n        if(newTagArray.length>0){\r\n            setTagArray(newTagArray);\r\n            return;    \r\n        }\r\n        \r\n        //選択肢がなかった場合、一度Phaseを上げて再度探してみる\r\n        phaseNow+=1;\r\n        //この際はフェーズが合えば非表示でなければすべて表示する\r\n        tag_source.forEach(element => {\r\n            if(element.numTagPhase===phaseNow){\r\n                const delEl=new Set(element.del);    \r\n                if(intersection(delEl,nowTag).size===0) newTagArray.push(element);\r\n            }\r\n\r\n        });\r\n        setTagArray(newTagArray);\r\n    };\r\n\r\n    //selectedの新規内容をstateの書く場所に設置する\r\n    const putSelectedInPlace=(data)=>{\r\n        const ss=Object.assign([],data);\r\n        setSelected(data);\r\n        if (data.length===0){\r\n            setDefs([]);\r\n            setLastOne({});\r\n            return;\r\n        }\r\n        const la=ss.pop();\r\n        setDefs(ss);\r\n        setLastOne(la);\r\n\r\n    };\r\n\r\n\r\n    const onClick=(data)=>{\r\n        let nowselected=[...selected,data];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDelete=()=>{\r\n        let nowselected=Object.assign([],selected);\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDecide=(data,txt)=>{\r\n        let copy=Object.assign({},data);\r\n        //console.log(\"copy\",copy);\r\n        copy.keyTagMain.strTagName=copy.keyTagMain.strTagName+\":\"+txt;\r\n        let nowselected=[...selected,copy];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const sendAction=(text)=>{\r\n        const restagarray=selected.map((d)=>{\r\n            if (d.keyTagMain.strTagName.includes(\":\")){\r\n                const st=d.keyTagMain.strTagName.replace(/.+\\:/, \":\");\r\n                return d.keyTagMain.id+st; \r\n            }else{\r\n                return d.keyTagMain.id;\r\n            }\r\n        });\r\n\r\n        //console.log(\"restagarray\",restagarray);\r\n        dispatch(pushNewFormedMemo(restagarray.join(\",\"),text));\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n    }\r\n\r\n    const onEnd=(text)=>{\r\n        //console.log(\" ここで終わり　処理をDispatchする \");\r\n        sendAction(text);\r\n        closeAction();\r\n        \r\n        props.onClose();\r\n    };\r\n    \r\n    const onContinue=(text)=>{\r\n        sendAction(text);\r\n        closeAction();    };\r\n\r\n    const handleClose=()=>{\r\n        closeAction();\r\n        props.onClose();\r\n    }\r\n\r\n\r\n    const TagButton=(data)=>{\r\n       return (\r\n            <Chip    \r\n                variant={selected.some((el)=>el===data) ? 'outlined': 'default' }\r\n                color={ secondarySet.includes(data.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(data.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        \r\n                label={data.keyTagMain.strTagName}\r\n                clickable\r\n                onClick={(e)=>onClick(data)}\r\n            />\r\n\r\n       )\r\n    };\r\n\r\n    //複数行入力のテキストボックスが分岐で作成できなかったので別関数にする\r\n    const multilineText=(data)=>{\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n                    type={\"text\"}\r\n                    multiline\r\n                    rows= {4} \r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={\"\"}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CheckSpecialTag=(data)=>{\r\n        let inputType=\"none\";\r\n        let defaultValue=\"none\";\r\n        \r\n        const date=new Date();\r\n        switch (data.keyTagMain.numTagType){\r\n            case TAG_NUMBER_INPUT:\r\n                inputType=\"number\";\r\n                defaultValue=0;\r\n                break;\r\n            case TAG_TEXT_INPUT:\r\n                inputType=\"text\";\r\n                defaultValue=\"\";\r\n                break;\r\n        \r\n            case TAG_MULTILINE_INPUT:\r\n                return multilineText(data);\r\n\r\n            case TAG_DATE_INPUT:\r\n                inputType=\"date\";\r\n                defaultValue=date.getFullYear()+\"-\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"-\"+(\"0\"+date.getDate()).slice(-2);\r\n                break;\r\n\r\n            case TAG_TIME_INPUT:\r\n                \r\n                inputType=\"time\";\r\n                defaultValue=(\"0\"+(date.getHours())).slice(-2)+\":\"+(\"0\"+date.getMinutes()).slice(-2);\r\n                break;\r\n            default :\r\n                return (\r\n                    TagButton(data)\r\n                );\r\n        }\r\n\r\n\r\n        //MULTILINE以外は納めることが出来るのでまとめておく\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n\r\n                    type={inputType}\r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={defaultValue}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    const secondarySet=[1]\r\n    const primarySet=[2,3,4,11]\r\n\r\n    return (\r\n        <Modal\r\n\r\n            className={classes.modal}\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n        >\r\n            <div className={classes.paper}>\r\n            \r\n            <div className={classes.root}>\r\n                <div><Typography variant='h6' >簡単情報入力フォーム</Typography> </div>\r\n                <hr/>\r\n                <div>\r\n                {defs.length>0 ?\r\n                    defs.map((d)=>{\r\n                        \r\n                    //console.log(d);\r\n                        return (\r\n                            <Chip    \r\n                                variant='default' \r\n                                color={ secondarySet.includes(d.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　d.keyTagMain.numTagType) ? \"primary\" : \"default\" }\r\n                                label={d.keyTagMain.strTagName}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                    <div/>\r\n                }\r\n                </div>\r\n                { Object.keys(lastOne).length>0 ?    \r\n                    <Chip    \r\n                        variant='outlined'\r\n                        color={ secondarySet.includes(lastOne.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　lastOne.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        label={lastOne.keyTagMain.strTagName}\r\n                        clickable\r\n                        onClick={(e)=>onDelete(lastOne)}\r\n                    />\r\n                    :\r\n                    \r\n                    <div>登録内容を選択してください</div>\r\n\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className={classes.root}>\r\n\r\n            {\r\n            tagArray.length===1 ?\r\n                \r\n                CheckSpecialTag(tagArray[0])\r\n            :tagArray.length>0 ?\r\n                tagArray.map((d)=>{\r\n                    return (\r\n                        TagButton(d)    \r\n                    )\r\n                })\r\n            :\r\n                // 次への選択肢が一切なくなったら\r\n                <div>\r\n                    <div>\r\n                        {/* 最後に文章を書けるようにしておく */}\r\n                        <TextField\r\n                        //id=\"standard-number\"\r\n                        inputRef={textRefMain}\r\n                        className={classes.textField}\r\n\r\n                        label=\"補足\"\r\n                        placeholder=\"特に書くことがなければ登録ボタンを押してください\"\r\n                        InputLabelProps={{\r\n                            shrink: true, }}\r\n                        //onChange={(e)=>onInput(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n\r\n\r\n                        <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onEnd(textRefMain.current.value)}>登録</Button>\r\n                        <Button size={\"small\"} variant='contained' color=\"secondary\" onClick={()=>onContinue()}>さらに登録</Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default FormedTagPutModal;","D:\\dev\\JS\\taglead_react\\src\\lib\\TestTagListData.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\useWindowDimensions.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\windowScrollControll.js",["340"],"import React from 'react';\r\nimport {throttle} from 'lodash';\r\n\r\nexport const ScrollUpdater=(props)=>{\r\n\r\n    //実行関数　setNewTimeLine\r\n\r\n    //監視パラメータ　timeline\r\n    \r\n\r\n    const checkInEnd=throttle(() => {\r\n        const m1=Math.round(window.innerHeight + document.documentElement.scrollTop);\r\n        const m2=Math.round(document.documentElement.scrollHeight);\r\n        //console.log(\"m1 \",m1,\"m2 \",m2);\r\n\r\n        if (\r\n            //ブラウザによってずれが起きるためトリガーに少しだけ範囲を作る\r\n            Math.abs(m1-m2)>5\r\n        ) {\r\n            return;\r\n        }\r\n        if (!props.endflg)  props.scrollFunc();\r\n    \r\n        }, 200\r\n    );\r\n    \r\n    \r\n    React.useEffect(()=>{\r\n        //画面を切り替えたらとりあえずトップに戻す\r\n        document.documentElement.scrollTop=0;\r\n        props.scrollFunc();\r\n    },[]);\r\n    \r\n    React.useEffect(() => {\r\n        \r\n        window.removeEventListener('scroll', checkInEnd);\r\n        window.addEventListener('scroll', checkInEnd);\r\n        \r\n    \r\n        return () => {\r\n        window.removeEventListener('scroll', checkInEnd);\r\n        \r\n        };\r\n        //propsの中身は随時更新しないと同じ初期値を使いまわすことになる\r\n    }, [props.checkParam]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return (\r\n        <div/>\r\n    )\r\n\r\n}\r\n\r\n",["341","342"],"D:\\dev\\JS\\taglead_react\\src\\components\\FeedbackSnackBar.js",["343"],"import {useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport  {useSnackbar} from 'notistack';\r\n\r\n\r\nconst FeedbackSnackbar=()=> {\r\n\r\n    const {enqueueSnackbar}= useSnackbar();\r\n    const snacklist=useSelector(state=>state.notice_main.snack);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"SNACK!!\");\r\n        if(snacklist.length>0){\r\n           enqueueSnackbar(snacklist.slice(-1)[0],{ variant: 'info',autoHideDuration:1000});\r\n        }\r\n    }, [snacklist]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default FeedbackSnackbar;","D:\\dev\\JS\\taglead_react\\src\\components\\SideDrawer.js",["344","345","346","347","348","349","350","351","352","353","354","355"],"import React,{useEffect,useState} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SideMenu from './SideMenu';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Drawer  from '@material-ui/core/Drawer';\r\nimport {OPEN_PASSWORD}  from '../lib/ActionTypeString';\r\nimport {LogOutButton} from './parts/AuthButtons';\r\n\r\n\r\nconst drawerWidth=240;\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n  \r\n  \r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideDrawer=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n\r\n    //console.log(\" props.ismobile in drawer\",props.isMobile);\r\n\r\n    return (\r\n        <Drawer \r\n          anchor={\"left\"}\r\n          width={200}          \r\n          variant={ props.mobile ? \"temporary\" :\"permanent\" }\r\n          open={props.open} \r\n          onClose={props.onClose}\r\n          >\r\n            {props.mobile &&\r\n              <IconButton onClick={()=>props.onClose()} ><ArrowBackIcon/></IconButton>\r\n            }\r\n            <SideMenu  onClose={ props.mobile &&  props.onClose }/>\r\n      </Drawer>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideDrawer;\r\n        ","D:\\dev\\JS\\taglead_react\\src\\reportWebVitals.js",[],["356","357"],"D:\\dev\\JS\\taglead_react\\src\\pages\\ReplyThreadPage.js",["358","359"],"import React, {useEffect} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport  {getReplyData} from '../actions';\r\nimport ReplyColumnList  from '../components/ReplyColumnList';\r\nimport ReplyColumn from '../components/ReplyColumns';\r\nimport MemoColumn from '../components/MemoColumn';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst ReplyThreadPage=(props)=>{\r\n    const reply_main=useSelector(state=>state.reply_main);\r\n    console.log(\"reply_main\",reply_main);\r\n    const dispatch=useDispatch();\r\n\r\n    const classes=listStyles();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getReplyData(props.match.params.id));\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"reply_main\",reply_main);\r\n        \r\n    }, [reply_main]);\r\n\r\n    const normalSceane=()=>{\r\n        return (\r\n            <div >\r\n                \r\n                {reply_main.past_thread.length!==0 ?\r\n                　　<div>\r\n                        <div> 過去の履歴 <div/>\r\n                        <ReplyColumnList   \r\n                            data={ reply_main.past_thread } \r\n                            fav={ reply_main.fav}  \r\n                            read={reply_main.read}  \r\n                            boxstyle={\"thread\"} \r\n                            mark={\"a\"} /></div></div> \r\n                    :\r\n                     <div/> \r\n                }\r\n    \r\n                {Object.keys(reply_main.parent_data).length!==0 ? \r\n                     <div><div> 直近の応答</div><ReplyColumn  data={ reply_main.parent_data } mark={\"b\"}/></div> \r\n                :\r\n                     <div/> \r\n                }\r\n                <div>\r\n                    <MemoColumn data={reply_main.self_data } fav={ reply_main.fav} read={reply_main.read} rep={true} mark={\"e\"} />\r\n                </div>\r\n                {reply_main.child_data.length!==0 ?\r\n                    <div>\r\n                        <div> 関連する応答 </div>\r\n                        <div>\r\n                            <ReplyColumnList   \r\n                                data={ reply_main.child_data } \r\n                                fav={ reply_main.fav}  \r\n                                read={reply_main.read}                              \r\n                                boxstyle={\"thread\"} \r\n                                mark={\"c\"}/>\r\n                        </div>\r\n                    </div> \r\n                    : <div/> \r\n                }\r\n                {reply_main.future_thread.length!==0 ?\r\n                    <div>\r\n                        <div> その後の履歴 </div>\r\n                        <div>\r\n                            <ReplyColumnList   \r\n                                data={ reply_main.future_thread } \r\n                                fav={ reply_main.fav}  \r\n                                read={reply_main.read}                              \r\n                                boxstyle={\"thread\"} \r\n                                mark={\"c\"}/>\r\n                        </div>\r\n                    </div> \r\n                    : <div/> \r\n                }\r\n\r\n\r\n            </div>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        reply_main.load_flg ? normalSceane() :<LinearProgress/> \r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default  ReplyThreadPage;","D:\\dev\\JS\\taglead_react\\src\\components\\FavoriteList.js",["360"],"import React ,{useState}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {showFavorite} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Typography } from '@material-ui/core';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst FavoriteList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    \r\n    const timeline=useSelector(state=>state.show_favorite.timeline,[]);\r\n    const read=useSelector(state=>state.show_favorite.read,[]);\r\n    const fav=useSelector(state=>state.show_favorite.fav,[]);\r\n    const endflg=useSelector(state=>state.show_favorite.endflg);\r\n    const dispatch = useDispatch();\r\n\r\n    const setNewTimeLine=()=>{\r\n        dispatch(showFavorite());\r\n    };\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            <div><Typography variant='h5' gutterBottom >お気に入り一覧</Typography></div>\r\n            <hr/>\r\n            <ScrollUpdater scrollFunc={()=>setNewTimeLine() }  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            {timeline && \r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }\r\n            {endflg ?  <div><Typography variant='h6' gutterBottom >現在の表示内容は以上です。</Typography></div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FavoriteList;\r\n","D:\\dev\\JS\\taglead_react\\src\\test\\TestTagPutModal.js",["361"],"import React,{useEffect,useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Button} from '@material-ui/core'\r\nimport FormedTagPutModal from '../components/FormedTagPutModal';\r\n//import {tag_start} from '../actions';\r\n\r\nexport const TestTagPutModal=(props)=>{\r\n    const dispatch = useDispatch();\r\n    \r\n    const [open,setOpen] =useState(false);\r\n\r\n\r\n    const TagData=[\r\n        {id:1,type:1,name:\"7番街\",phase:1,　group:\"unit\",  show:[],del:[] },\r\n        {id:2,type:1,name:\"1番街\",phase:1, 　group:\"unit\", show:[],del:[] },\r\n\r\n        {id:42,type:1,name:\"長谷川\",phase:-1,　group:\"user\", show:[1],del:[] },\r\n        {id:43,type:1,name:\"山上\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:54,type:1,name:\"山本\" ,phase:-1, 　group:\"user\",show:[1],del:[] },\r\n        {id:66,type:1,name:\"小林\" ,phase:-1, 　group:\"user\",show:[2],del:[] },\r\n        {id:102,type:14,name:\"登録時間\" , phase:-1,show:[42,43],del:[] },\r\n        \r\n\r\n        {id:8,type:2,name:\"排泄\"  , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:10,type:2,name:\"入浴\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:11,type:2,name:\"食事\" , group:\"action\",phase:2,show:[],del:[]},\r\n        {id:12,type:2,name:\"自力\" , group:\"meel_style\", phase:-1,show:[11],del:[13]},\r\n        {id:13,type:2,name:\"介助\" ,group:\"meel_style\",phase:-1,show:[11],del:[12]},\r\n        \r\n        {id:15,type:2,name:\"徘徊\" ,group:\"action\",phase:2,show:[],del:[8,10,11]},\r\n        {id:19,type:3,name:\"少し\" , group:\"meel_amount\", phase:-1,show:[12,13],del:[20,21]},\r\n        {id:20,type:3,name:\"半分\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,21]},\r\n        {id:21,type:3,name:\"全て\", group:\"meel_amount\", phase:-1,show:[12,13],del:[19,20]},\r\n        {id:34,type:3,name:\"シャワー\",  group:\"bath_style\",phase:-1,show:[10],del:[46]},\r\n        {id:46,type:3,name:\"洗身\", group:\"bath_style\", phase:-1,show:[10],del:[34]},\r\n        {id:70,type:2,name:\"バイタル\", group:\"action\", phase:2,show:[],del:[8,10,11,15]},\r\n        {id:71,type:2,name:\"血圧\", group:\"bytal_type\", phase:-1,show:[70],del:[72]},\r\n        {id:72,type:2,name:\"脈拍\",  group:\"bytal_type\", phase:-1,show:[70],del:[71]},\r\n        \r\n        {id:73,type:11,name:\"最高\",phase:-1,show:[71],del:[]},\r\n        {id:74,type:11,name:\"最低\",phase:-1,show:[73],del:[]},\r\n    ];\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n    //    dispatch(tag_start());\r\n        \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>setOpen(true)}>開く</Button>\r\n            \r\n            <hr/>\r\n                <FormedTagPutModal data={TagData} open={open} onClose={()=>setOpen(false)} />\r\n\r\n            \r\n            <hr/>   \r\n        </div>\r\n    )\r\n\r\n}",["362","363"],"D:\\dev\\JS\\taglead_react\\src\\reducers\\index.js",["364","365","366","367","368","369"],"D:\\dev\\JS\\taglead_react\\src\\App.js",["370","371"],"D:\\dev\\JS\\taglead_react\\src\\lib\\ActionTypeString.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\TagInputList.js",["372","373","374","375","376","377","378"],"D:\\dev\\JS\\taglead_react\\src\\pages\\TestMain.js",["379","380"],"import React from 'react';\r\n\r\n// import TestHooks  from './TestHooks';\r\n// import TestMemoInsertButton  from './TestMemoInsertButton';\r\n// import TestMakeMemoModal  from './TestMemoMakeModal';\r\n// import TestMemoDeleteModal  from './TestMemoDeleteModal';\r\n// import {TestMemoColumn} from '../test/TestMemoColumn';\r\n// import {TestMainHeader} from './TestMainHeader';\r\n//import TestPasswordModal from '../test/TestPasswordModal';\r\n//import TestLogoutModal from '../test/TestLogoutModal';\r\n//import TestSearchForm from '../test/TestSearchForm';\r\n// import TestMemoThread from '../test/TestMemoThread';\r\n// import TestFollowColumn from './TestFollowColumn';\r\n// import TestFollowList from './TestFollowList';\r\n// import {TestMemoList} from './TestMemoList';\r\n import TestAuthAction  from '../test/TestAuthAction';\r\n//import { TestTagSearchPanel } from '../test/TestTagSearcPanel';\r\n//import { TestTagSearchList } from '../test/TestTagSearcList';\r\n//import TestReplyColumnList from '../test/TestReplyColumnList';\r\n// import {TestTagPutModal} from '../test/TestTagPutModal';\r\n//import {TestNoticeColumn} from '../test/TestNoticeColumn';\r\n//import {TestNoticeList} from '../test/TestNoticeList ';\r\nimport {TestFreeTagPutModal} from '../test/TestFreeTagPutModal';\r\nimport TestLoading from '../test/TestLoading';\r\n\r\nconst TestMain=(props)=>{\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test Main</h1>\r\n            <TestAuthAction/> \r\n            {/*  <TestMemoInsertButton/>\r\n            <TestMakeMemoModal/>\r\n             \r\n            <TestPasswordModal/>\r\n            <TestLoading/>\r\n            {/*<TestMemoDeleteModal/>\r\n            <TestMemoList/>\r\n            <TestTagSearchPanel/>\r\n            <TestTagSearchList/>\r\n            <TestReplyColumnList/>\r\n            <TestTagPutModal/>\r\n            <TestNoticeColumn/>\r\n            <TestNoticeList />\r\n            \r\n            <TestFreeTagPutModal/>\r\n\r\n            <TestSearchForm/>\r\n            <TestMainHeader/> \r\n            <TestFollowColumn/>\r\n            <TestFollowList/>*/}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TestMain;\r\n","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumns.js",["381","382","383"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\nimport  {useSelector} from 'react-redux'\r\nimport {Collapse,IconButton,Box}  from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\n\r\n\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport  {getDateMessage,getUserName} from  '../lib/UtilityLibrary';\r\n\r\n//重要\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoSub:{            \r\n        width: '80%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoChild:{            \r\n        width: '85%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n    memoParent:{            \r\n        width: '85%',\r\n        //right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #555555',\r\n      },\r\n\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n\r\n\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n        \r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",\r\n        \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    textarea:{\r\n       // width:\"100%\",\r\n       // height:100\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst ReplyColumn=({data,boxstyle,mark})=>{\r\n    const TEXT_LIMIT=40;\r\n    const dd=data;\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        //if (typeof txt ===\"undefined\") console.log(\"txt undefined \");\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    const classes=useStyles();\r\n    //const [maintext,setMainText] =useState(setHeaderText(dd.strMainText));\r\n    const [maintext,setMainText] =useState(dd.strMainText);\r\n\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n    const tag_list = useSelector(state => state.auth_login.all_tag,[]);\r\n    const hasRead=useSelector(state=>state.memo_main.read);\r\n    const favorite=useSelector(state=>state.memo_main.fav);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [hasStar, setHasStar] = useState(favorite.includes(data.id));\r\n    const [read, setRead] = useState(hasRead.includes(data.id));\r\n    const [bstyle,setBoxStyle]=useState(classes.memo);\r\n\r\n    const checkText=(exp)=>{\r\n        if(exp){\r\n            setMainText(dd.strMainText);\r\n        }else{\r\n            setMainText(setHeaderText(dd.strMainText) );\r\n        }\r\n    }\r\n\r\n    const onExpanded=()=>{\r\n        // if(!expanded){\r\n        //     setMainText(dd.strMainText);\r\n        // }else{\r\n        //     setMainText(setHeaderText(dd.strMainText) );\r\n        // }\r\n        checkText(!expanded);\r\n\r\n        setExpanded(!expanded);\r\n\r\n    };\r\n\r\n    const onStarClick=()=>{\r\n        setHasStar(!hasStar);\r\n        //後はidとstar情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!read);\r\n        //後はidとread情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const getNames=(arr)=>{\r\n        const ars=String(arr).split(\",\");\r\n        const names=ars.map((d)=>{\r\n           const tg=user_list.find((el)=>el.id===parseInt(d))\r\n           return tg.strName;\r\n        })\r\n        \r\n        return names.reduce((acc,value)=>acc+\",\"+value)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //setMainText(dd.strMainText);\r\n       // setMainText(setHeaderText(dd.strMainText) );\r\n       checkText(expanded);\r\n        switch(boxstyle){\r\n            case \"thread\":\r\n                 setBoxStyle(classes.memoSub);\r\n                break;\r\n            case \"parent\":\r\n\r\n                setBoxStyle(classes.memoParent);\r\n                break;\r\n            \r\n            case \"child\" :\r\n                setBoxStyle(classes.memoChild);\r\n                break;\r\n            default:\r\n                setBoxStyle(classes.memo);\r\n                break;\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box  className={bstyle}>\r\n                    <div className={classes.ulbutton} >\r\n                        <span className={classes.headertext}>\r\n                        <div> { getDateMessage(data.datePublish) }</div> <div>{getNames(data.keySender)}より </div> \r\n                        </span>\r\n                        <span className={classes.icons}>\r\n                            <IconButton onClick={onStarClick}>\r\n                                {hasStar ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                            </IconButton>\r\n                            \r\n                        </ span>\r\n                      \r\n                        <span className={classes.icons} >\r\n                            <IconButton onClick={onReadClick} >\r\n                                {read ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                            </IconButton>\r\n                        \r\n                        </span>\r\n\r\n                        <div className={classes.icons} >\r\n                                <IconButton onClick={onExpanded} >\r\n                                    {expanded ? ( <ExpandLessIcon/> ):( <ExpandMoreIcon/> )}\r\n                                </IconButton>    \r\n                            </div>\r\n                          \r\n    \r\n                    </div>\r\n                          \r\n                    <Collapse in={expanded} collapsedHeight={30}> \r\n                        <div onClick={onExpanded} className={classes.ulbutton}>\r\n                            <div className={classes.textarea}>{maintext}</div>\r\n                            \r\n                        </div>\r\n                        <div className={classes.ulbutton} >\r\n                            <div>\r\n                                <IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} ><ReplyTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" ize=\"small\" color=\"inherit\"  ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" size=\"small\" color=\"inherit\"  ><DeleteOutlinedIcon size=\"small\"/></IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n     \r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ReplyColumn;","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagConfigList.js",["384","385","386","387","388","389","390","391","392","393","394"],"import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TYPE_TAG_GUEST,TYPE_TAG_MENBER} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport {loadUserConfig,changeUserConfig,resetUserConfig} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nexport const UserTagConfigColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.tag_list);\r\n    const [status,setStatus]=useState(props.data.numTagStatus);\r\n    const [isShow,setIsShow]=useState(props.data.boolIsShownInList);\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n    const onChangeTabSearch=(e,id)=>{\r\n        //変更はSnackBarのみで知らせる\r\n        const stnow=e.target.value;\r\n\r\n        setStatus(stnow);\r\n        dispatch(changeUserConfig(id,stnow,isShow));\r\n\r\n\r\n    };\r\n\r\n    const onChangeListView=(id)=>{\r\n        setIsShow(!isShow);        \r\n        dispatch(changeUserConfig(id,status,!isShow));\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div  >\r\n        <span> <GetTagName id={props.data.keyTag}/> </span>\r\n        <span>\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                value={status}\r\n                onChange={(e)=>onChangeTabSearch(e,props.data.keyTag)}\r\n                name=\"status\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option　defaultChecked value=\"1\">メインリスト</option>\r\n                    <option value=\"2\">サブリスト</option>\r\n                    <option value=\"-1\">検索のみ</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n\r\n        </span>\r\n        <span>\r\n          <FormControlLabel\r\n                control={\r\n                <Checkbox\r\n                    checked={isShow}\r\n                    onChange={(e)=>onChangeListView(props.data.keyTag)}\r\n                    //name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n                }\r\n                label=\"一覧表示\"\r\n            />\r\n          </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst UserTagConfigList=()=>{\r\n    \r\n\r\n    const uConfigList=useSelector(state=>state.auth_login.user_config,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n    const classes=useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserConfig());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get config change\");\r\n    }, [uConfigList]);\r\n\r\n    const onResetClick=()=>{\r\n        dispatch(resetUserConfig()); \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button \r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    onClick={onResetClick} \r\n                    >全タグリセット</Button>\r\n            </div>\r\n\r\n        {uConfigList.length>0 &&\r\n            uConfigList.map((d)=>{\r\n                return ( <UserTagConfigColumn\r\n                    data={d}/>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagConfigList;\r\n",["395","396"],"D:\\dev\\JS\\taglead_react\\src\\test\\TestMemoColumn.js",[],["397","398"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\TagChip.js",["399","400","401","402"],"D:\\dev\\JS\\taglead_react\\src\\pages\\UserConfigListPage.js",["403","404","405","406","407","408"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagConfigList from '../components/UserTagConfigList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst UserConfigListPage=(props)=>{\r\n    \r\n    const classes=listStyles();\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagConfigList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  UserConfigListPage;","D:\\dev\\JS\\taglead_react\\src\\pages\\MainListPage.js",["409","410","411"],"D:\\dev\\JS\\taglead_react\\src\\lib\\TestReplyThreadData.js",[],["412","413"],"D:\\dev\\JS\\taglead_react\\src\\components\\FreeTagInputModal.js",["414"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoInsertButton.js",["415"],"import React,{useState} from 'react';\r\nimport {Fab,Popover,Breadcrumbs,Link,Typography}  from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from '../lib/ActionTypeString';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    fabButton:{\r\n        position:\"fixed\",\r\n        bottom:10,\r\n        right:10,\r\n        zIndex:100\r\n\r\n    },\r\n    Iconspace:{\r\n      marginRight:theme.spacing(2),\r\n      marginLeft:theme.spacing(2),\r\n\r\n    }\r\n\r\n\r\n  }));\r\n  \r\n\r\nconst MemoInsertButton=(props)=>{\r\n\r\n    //どこをクリックしても消せるようにしたいのでstateはreduxに振る\r\n    const [bmenu,showMenu]=React.useState(null);\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n\r\n    const onClick=(event)=>{\r\n        showMenu(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuPushEvent =(action,e )=>{\r\n        e.preventDefault();\r\n        setAnchorEl(null);\r\n        \r\n        showMenu(null);\r\n        props.onModalOpen(action);\r\n    };\r\n    const onClose=(event)=>{\r\n        showMenu(null);\r\n        setAnchorEl(null);\r\n    };\r\n   \r\n    const modalIcons=[\r\n      {action: FREE_MODAL_OPEN ,icon: <MailOutlineIcon fontSize=\"large\" />},\r\n      {action: \"dm\" ,icon: <RecordVoiceOverIcon fontSize=\"large\" />},\r\n      {action: FORMED_MODAL_OPEN ,icon: <CreateIcon fontSize=\"large\" />},\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div >\r\n            <Fab \r\n            className={classes.fabButton}\r\n            onClick={onClick}\r\n            color=\"primary\" \r\n            aria-label=\"add\"\r\n            aria-haspopup=\"true\">\r\n                <AddIcon/>\r\n            </Fab>\r\n            <Popover\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                open={Boolean(bmenu)}\r\n                anchorOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'right',\r\n                }}\r\n            >\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                {\r\n                  modalIcons.map((d)=>{\r\n                    return (\r\n                        <Link color=\"inherit\" href=\"/\" onClick={(e)=>menuPushEvent(d.action,e)}>\r\n                          <div className={classes.Iconspace}>{d.icon}</div>\r\n                      </Link>\r\n                    )\r\n                  })\r\n                }\r\n\r\n            </Breadcrumbs>\r\n          </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoInsertButton;\r\n\r\n","D:\\dev\\JS\\taglead_react\\src\\pages\\FavoriteListPage.js",["416","417","418","419","420","421","422"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport FavoriteList from '../components/FavoriteList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst FavoriteListPage=(props)=>{\r\n    const classes=listStyles();\r\n    \r\n    return (    \r\n        <div >\r\n            <FavoriteList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  FavoriteListPage;","D:\\dev\\JS\\taglead_react\\src\\lib\\UtilityLibrary.js",[],"D:\\dev\\JS\\taglead_react\\src\\routers.js",["423","424","425","426"],"import React,{useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {Route,useLocation,Switch,withRouter} from 'react-router-dom';\r\nimport SlideRoutes from 'react-slide-routes';\r\nimport TestMain  from './pages/TestMain';\r\nimport MainListPage from './pages/MainListPage';\r\nimport TaggedSearchPage from './pages/TaggedSearchPage';\r\nimport  ReplyThreadPage  from './pages/ReplyThreadPage';\r\nimport NoticeListPage from './pages/NoticeListPage';\r\nimport FavoriteListPage from './pages/FavoriteListPage';\r\nimport UserConfigListPage from './pages/UserConfigListPage';\r\nimport TagAdminListPage from './pages/TagAdminListPage';\r\nimport {CSSTransition}  from 'react-transition-group';\r\nimport {TransitionGroup} from 'react-transition-group';\r\nimport './pageSlider.scss';\r\n\r\n\r\nconst PageRouter=(props)=>{\r\n\r\n    const location=useLocation();\r\n\r\n    const getPathDepth=(location)=> {\r\n      let pathArr = location.pathname.split(\"/\");\r\n      pathArr = pathArr.filter(n => n !== \"\");\r\n      return pathArr.length;\r\n    };\r\n\r\n    const [prevDepth,setPrevDepth]=useState(getPathDepth(location));\r\n\r\n    useEffect(() => {\r\n      setPrevDepth(getPathDepth(location));\r\n    },[location]);\r\n\r\n    const currentKey = location.pathname.split(\"/\")[1] || \"/\";\r\n    const timeout = { enter: 800, exit: 400 };\r\n\r\n    \r\n    \r\n    return (\r\n      <div>\r\n          <TransitionGroup component=\"div\" className=\"App\">\r\n           <CSSTransition\r\n              key={currentKey}\r\n              timeout={timeout}\r\n              classNames=\"pageSlider\"\r\n              mountOnEnter={true}\r\n              unmountOnExit={true}\r\n            >\r\n\r\n              <div  className={ getPathDepth(location) - prevDepth >= 0    ? \"left\" : \"right\" }>\r\n          \r\n                <Route  path='/main' exact  component={MainListPage} />\r\n                <Route  path='/tag' exact component={TaggedSearchPage} />\r\n                {/* <Route  path='/test'  exact > <TestMain/> </Route> */}\r\n                <Route  path='/notice' exact component={NoticeListPage} />\r\n                <Route  path='/favorite' exact component={FavoriteListPage} />\r\n                <Route  path='/tagconfig' exact component={UserConfigListPage} />\r\n                <Route  path='/tagadmin' exact component={TagAdminListPage} />\r\n                <Route  path='/reply/:id' exact  component={ReplyThreadPage}  />\r\n              </div>\r\n              </CSSTransition>\r\n          </TransitionGroup>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  withRouter(PageRouter);","D:\\dev\\JS\\taglead_react\\src\\components\\UserTagAdminList.js",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"D:\\dev\\JS\\taglead_react\\src\\components\\TagSearchList.js",["451","452","453","454"],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ShowInfoSet.js",["455"],"//共通で使いそうな関数をまとめておく　stateとかは取らず　共通のデータ構造にのみ依存するように作っておく\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const GetUserName=({id , prefix=\"\", suffix=\"\"})=>{\r\n    const user_list=useSelector(state=>state.auth_login.user_list);\r\n\r\n    const us=user_list.find(u=>u.id===id);\r\n    if (!us) return ( <span>名称未設定</span> );\r\n\r\n    return ( <span>{prefix}{us.strName} {suffix} </span> );\r\n};\r\n\r\nexport const GetTagName=({id})=>{\r\n\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n    const tagname=tag_list.find(el=> el.id==id );\r\n    if( !tagname ) return  <span> タグ不明 {id} :</span>\r\n\r\n    return  <span>{tagname.strTagName} :</span> \r\n\r\n}\r\n\r\n","D:\\dev\\JS\\taglead_react\\src\\pages\\NoticeListPage.js",["456","457","458","459"],"import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport MainHeader from \"../components/MainHeader\";\r\nimport {  makeStyles } from '@material-ui/core';\r\nimport NoticeList from '../components/NoticeList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst NoticeListPage=(props)=>{\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        \r\n        <div >\r\n            <NoticeList />\r\n        </div> \r\n\r\n    )\r\n}\r\n\r\nexport default  NoticeListPage;","D:\\dev\\JS\\taglead_react\\src\\test\\TestFreeTagPutModal.js",["460"],"import React,{useEffect,useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Button} from '@material-ui/core'\r\nimport FreeTagInputModal from '../components/FreeTagInputModal';\r\n//import {tag_start} from '../actions';\r\n\r\nexport const TestFreeTagPutModal=(props)=>{\r\n    const dispatch = useDispatch();\r\n    \r\n    const [open,setOpen] =useState(false);\r\n    \r\n    useEffect(() => {\r\n        \r\n        ////dispatch(tag_start());\r\n        \r\n\r\n    }, []);\r\n\r\n    const onClose=()=>{\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>setOpen(!open)}>開く</Button>\r\n            \r\n            <hr/>\r\n                <FreeTagInputModal open={open} onClose={onClose}/>\r\n\r\n            \r\n            <hr/>   \r\n        </div>\r\n    )\r\n\r\n}",["461","462"],"D:\\dev\\JS\\taglead_react\\src\\lib\\TagTypeNames.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\parts\\AuthButtons.js",["463","464","465","466"],"import axios from \"axios\";\r\nimport { API_URL } from \"../../lib/ServiceConfig\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport {GoogleLogin,GoogleLogout} from 'react-google-login';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState,useEffect } from \"react\";\r\nimport {CONNECT_ERROR,ERROR_RESET, MEMO_END, RESET_AUTH} from '../../lib/ActionTypeString';\r\n\r\n\r\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconst drfClientId = process.env.REACT_APP_DRF_CLIENT_ID;\r\nconst drfClientSecret = process.env.REACT_APP_DRF_CLIENT_SECRET;\r\nconst LOGIN_URL=`${API_URL}/auth/convert-token`;\r\n\r\nconst styles=makeStyles((theme)=>({\r\n    buttons:{\r\n        display:\"block\",\r\n        //margin:\"0 auto\",\r\n        marginRight:\"auto\",\r\n        marginLeft:\"auto\",\r\n        alignItems:\"center\",\r\n    \r\n        justifyContent:\"center\"\r\n    }\r\n    \r\n    })\r\n);\r\n\r\nexport const LoginButton=({red, callback})=>{\r\n    console.log(\"LOGIN_URL :\",LOGIN_URL);\r\n    const dispatch = useDispatch();\r\n    const history=useHistory();\r\n    //const LOGIN_URL=`${API_URL}/auth/convert-token`;\r\n    const classes=styles();\r\n\r\n    const SetAuthConnection = (response) => {\r\n        axios.post(LOGIN_URL, {\r\n            token: response.accessToken,\r\n            backend: \"google-oauth2\",\r\n            grant_type: \"convert_token\",\r\n            client_id: drfClientId,\r\n            client_secret: drfClientSecret,\r\n        })\r\n        .then((res) => {\r\n            const { access_token, refresh_token } = res.data;\r\n            localStorage.setItem(\"access_token\", access_token);\r\n            localStorage.setItem(\"refresh_token\", refresh_token);\r\n            \r\n            history.push(\"/main\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.messages);\r\n            dispatch({type:CONNECT_ERROR});\r\n        });\r\n    };\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n            clientId={googleClientId}\r\n            buttonText=\"LOGIN WITH GOOGLE\"\r\n            isSignedIn={true}\r\n            cookiePolicy={'single_host_origin'}\r\n\r\n            onSuccess={(response) => SetAuthConnection(response)}\r\n            render={(renderProps) => (\r\n            <Button\r\n                className={classes.buttons}\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                variant=\"contained\"\r\n                color='primary'\r\n                type=\"button\"\r\n                class=\"login-with-google-btn\"\r\n            >\r\n                <Typography variant=\"h6\" gutterBottom >\r\n                ログイン\r\n                </Typography>\r\n            </Button>\r\n            )}\r\n            onFailure={(err) => console.log(err.error,err.details)}\r\n            />\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\n//初期登録用ボタン\r\nexport const FirstLoginButton=({red, callback})=>{\r\n    const [clicked,setClicked]=useState(false);\r\n    const dispatch = useDispatch();\r\n    const history=useHistory();\r\n    const classes=styles();\r\n\r\n    const CreateAuthConnection = (response) => {\r\n        console.log(\"認証開始\")\r\n        axios.post(LOGIN_URL, {\r\n            token: response.accessToken,\r\n            backend: \"google-oauth2\",\r\n            grant_type: \"convert_token\",\r\n            client_id: drfClientId,\r\n            client_secret: drfClientSecret,\r\n        })\r\n        .then((res) => {\r\n            console.log(\"認証成功\")\r\n            const { access_token, refresh_token } = res.data;\r\n            localStorage.setItem(\"access_token\", access_token);\r\n            localStorage.setItem(\"refresh_token\", refresh_token);\r\n            \r\n            history.push(\"/firstend\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"認証失敗\",err);\r\n            dispatch({type:CONNECT_ERROR});\r\n        });\r\n    };\r\n    \r\n    return(\r\n        <div >\r\n            <GoogleLogin\r\n            clientId={googleClientId}\r\n            buttonText=\"LOGIN WITH GOOGLE\"\r\n            isSignedIn={true}\r\n            cookiePolicy={'single_host_origin'}\r\n\r\n            onSuccess={(response) => CreateAuthConnection(response)}\r\n            render={(renderProps) => (\r\n            <Button\r\n                className={classes.buttons}\r\n                onClick={renderProps.onClick}\r\n            >\r\n                <Typography variant=\"button\" gutterBottom >\r\n                初期登録\r\n                </Typography>\r\n            </Button>\r\n            )}\r\n            onFailure={(err) => console.log(err.error,err.details)}\r\n            />\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport const LogOutButton=(props)=>{\r\n    const dispatch = useDispatch();\r\n    const history=useHistory();\r\n    const handleLogOutAction = () => {\r\n        localStorage.setItem(\"access_token\", \"\");\r\n        localStorage.setItem(\"refresh_token\", \"\");\r\n        dispatch({type:ERROR_RESET});\r\n        dispatch({type:MEMO_END});\r\n        dispatch({type:RESET_AUTH});\r\n        history.push(\"/logout\");    \r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <GoogleLogout\r\n                clientId={googleClientId}\r\n                buttonText=\"Logout\"\r\n                icon={false}\r\n                onLogoutSuccess={()=>handleLogOutAction()}\r\n            >\r\n                <Button\r\n                        onClick={handleLogOutAction}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"button\"\r\n                        //class=\"login-with-google-btn\"\r\n                >\r\n                ログアウト\r\n                </Button>\r\n            </GoogleLogout>\r\n\r\n        </div>\r\n  \r\n    )\r\n}\r\n\r\n\r\n     ","D:\\dev\\JS\\taglead_react\\src\\components\\ReplyColumnList.js",["467","468"],"D:\\dev\\JS\\taglead_react\\src\\test\\ButtonSample.js",["469","470"],"// onLoad問題を再現できるかテスト\r\nimport React from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nconst ButtonSample=(props)=>{\r\n\r\n    const onClick=()=>{\r\n        props.onClick();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <Button onClick={onClick}>押すと屁が出る</Button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonSample;","D:\\dev\\JS\\taglead_react\\src\\components\\CirculerLoading.js",[],"D:\\dev\\JS\\taglead_react\\src\\lib\\ServiceConfig.js",[],"D:\\dev\\JS\\taglead_react\\src\\pages\\TagAdminListPage.js",["471","472","473","474"],"import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagAdminList from '../components/UserTagAdminList';\r\nimport { auth_login_success } from '../actions';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst TagAdminListPage=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    \r\n    const classes=listStyles();\r\n    //タグ設定を更新したら初期設定内の更新も行ってしまう\r\n    useEffect(() => {\r\n        dispatch(auth_login_success());\r\n    }, [changFlg]);\r\n\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagAdminList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TagAdminListPage;",["475","476"],"D:\\dev\\JS\\taglead_react\\src\\components\\MemoList.js",["477","478"],"import React ,{useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {loadNewMemo} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n}));\r\nconst MemoList=(props)=>{\r\n    const user_list=useSelector(state=>state.auth_login.user_list,[]);\r\n    const timeline=useSelector(state=>state.memo_main.timeline,[]);\r\n    const read=useSelector(state=>state.memo_main.read,[]);\r\n    const fav=useSelector(state=>state.memo_main.fav,[]);\r\n    const endflg=useSelector(state=>state.memo_main.endflg);\r\n    const dispatch = useDispatch();\r\n    const changFlg=useSelector(state=>state.memo_main.change);\r\n    \r\n    const resetCheck=()=>{\r\n\r\n        console.log(\" start loadNewMemo \",changFlg);\r\n        dispatch(loadNewMemo(\"-1\"));\r\n    };\r\n    useEffect(() => {\r\n        console.log(\" init useeffect \");\r\n        resetCheck();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(timeline.length>0 & changFlg!==0){\r\n            resetCheck();\r\n        }\r\n    }, [changFlg]);\r\n\r\n    const setNewTimeLine=()=>{\r\n        let fromDay=\"-1\";\r\n       // if (timeline.length>0) {\r\n            fromDay=new Date(timeline.slice(-1)[0].dateRegist).toJSON();\r\n        //} \r\n        if(endflg) return;\r\n        \r\n        console.log(\" setNewTimeLine \",fromDay);\r\n\r\n        dispatch(loadNewMemo(fromDay));\r\n    };\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {user_list.length>0 && \r\n            <ScrollUpdater scrollFunc={()=>{\r\n                    if(timeline.length>0){\r\n                        setNewTimeLine();\r\n                    }\r\n                    \r\n                }}\r\n                  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            }\r\n            \r\n            <Grid spacing={2}>\r\n            {\r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }            \r\n            </Grid>\r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoList;\r\n","D:\\dev\\JS\\taglead_react\\src\\components\\NoticeColumn.js",["479","480"],"//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState,useEffect} from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport {Box}  from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getUserName,getDateMessage}  from  '../lib/UtilityLibrary';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #000',\r\n      },\r\n\r\n    mainExp:{\r\n        fontSize:\"12pt\",\r\n        color:\"#555555\"\r\n    },\r\n    \r\n    subExp:{\r\n        fontSize:\"10pt\",\r\n        color:\"#aaa\"\r\n    },\r\n\r\n     \r\n  }));\r\n\r\n\r\n/*\r\n  ・届いた時間\r\n  ・送り元\r\n  ・メッセージ\r\n\r\n*/\r\n\r\n\r\nconst NoticeColumn=({data})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    \r\n    const userlist = useSelector(state => state.auth_login.user_list);\r\n    const classes=useStyles();\r\n    const [maintext,setMainText] =useState(setHeaderText(data.keyMemoMain.strMainText));\r\n \r\n    const [senderMsg,setSenderMsg]= useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!userlist || userlist.length===0) return;\r\n\r\n        const sender=getUserName(userlist,data.keyMemoMain.keySender);\r\n\r\n        if (data.numNoticeType===1){\r\n            setSenderMsg(sender+\"からメモが来ています。\");\r\n        } else{\r\n            setSenderMsg(sender+\"から返信が来ています。\");\r\n        }\r\n    },[userlist]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.memo}>\r\n                    <Link underline=\"none\" to={\"/reply/\" +  data.keyMemoMain.id} replace >\r\n                        <div className={classes.mainExp}>\r\n                        {getDateMessage(data.keyMemoMain.dateRegist) } : {senderMsg}  \r\n                        </div>\r\n                        <div className={classes.subExp}>{maintext} </div>\r\n                    </Link>\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NoticeColumn;","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\SummaryMemo.js",["481"],"D:\\dev\\JS\\taglead_react\\src\\test\\TestLoading.js",["482","483","484","485","486","487","488","489"],"D:\\dev\\JS\\taglead_react\\src\\index.js",[],"D:\\dev\\JS\\taglead_react\\src\\components\\NoticeList.js",["490","491","492"],"import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport NoticeColumn from './NoticeColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {getNoticeData} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst NoticeList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    const notices=useSelector(state=>state.notice_main.notices);\r\n    const endflg=useSelector(state=>state.notice_main.endflg);\r\n    const [startnum,setStartNum]=useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        console.log(\" Add Start\");\r\n         dispatch(getNoticeData(startnum));\r\n    },[]);\r\n\r\n\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {notices.length>0 ?\r\n\r\n                notices.map((d)=>{\r\n                    return (<NoticeColumn\r\n                        data={d}\r\n                    />)\r\n                })\r\n\r\n            :\r\n            <div>ロード中</div>\r\n            }\r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NoticeList;\r\n","D:\\dev\\JS\\taglead_react\\src\\test\\TestAuthAction.js",["493"],"import React from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport {Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n// axios.defaults.headers.common['Accept'] = 'application/json'\r\n// axios.defaults.headers.common['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n// 　axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n　//axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n\r\nconst TestAuthAction=(props)=>{\r\n    const onClick=()=>{\r\n        axios.get('http://itohkun55.pythonanywhere.com/api/ok')\r\n        .then(results=>{\r\n            console.log(results);\r\n        }).catch(error=>{\r\n            console.log(error.request);\r\n            console.log(error.config);\r\n            \r\n            console.log(error.name);\r\n            console.log(error.message);\r\n            \r\n        });\r\n\r\n        \r\n\r\n    \r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick={onClick}> 押してみそ </Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default TestAuthAction;\r\n","D:\\dev\\JS\\taglead_react\\src\\pages\\FirstLoginEndPage.js",["494","495","496"],"import { Button } from '@material-ui/core';\r\nimport React,{useEffect}  from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setFirstAccess } from '../actions';\r\nimport { LogOutButton } from '../components/parts/AuthButtons';\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\n\r\nconst FirstLoginEndPage=(props)=>{\r\n    const history=useHistory();\r\n    // const classes=styles();\r\n    const dispatch=useDispatch();\r\n    const firstEnd = useSelector(state => state.auth_login.firstend,false);\r\n\r\n    const onPress=()=>{\r\n        history.push(\"/\");\r\n    };\r\n    useEffect(() => {\r\n        dispatch(setFirstAccess());\r\n    }, []);\r\n\r\n    return (\r\n        <>{firstEnd ?\r\n            <SingleButtonPage \r\n                Content={ <div>初期登録が完了しました。<br/>一度ログアウトして運営から登録確認の連絡を待ち、利用を開始してください。</div> }\r\n                ButtonAction={<LogOutButton/>}\r\n                Footer={<div/>}\r\n            />\r\n        :\r\n            <div/>\r\n        }\r\n\r\n            \r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default  FirstLoginEndPage;\r\n","D:\\dev\\JS\\taglead_react\\src\\components\\parts\\ExpandText.js",["497"],"import { Typography } from '@material-ui/core';\r\nimport React, {useState} from 'react';\r\nimport {useSelector } from 'react-redux';\r\n\r\nconst ExpandText=({txtSource,limit})=>{\r\n    const [expanded,setExpanded]=useState(false);\r\n    if (!txtSource) return (<div/>);\r\n    \r\n    if (txtSource.length<limit) return (\r\n        <div style={{whiteSpace: 'pre-line'}}>\r\n            <Typography variant='body1' >{txtSource}</Typography>\r\n        </div>); \r\n\r\n    return (\r\n        <div>\r\n        {expanded?\r\n            <div>\r\n                <span style={{whiteSpace: 'pre-line'}} ><Typography variant='body1' >{txtSource}</Typography></span>\r\n                <span onClick={()=>setExpanded(false)} ><Typography variant='body1' ><b>元に戻す</b></Typography></span>\r\n            </div>\r\n        :\r\n        <div>\r\n            <span style={{whiteSpace: 'pre-line'}}><Typography variant='body1' >{txtSource.substring(0,limit)}....</Typography></span>\r\n            <span onClick={()=>setExpanded(true)} ><Typography variant='body1' ><b>残りを開く</b></Typography></span>\r\n        </div>\r\n        }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default  ExpandText;","D:\\dev\\JS\\taglead_react\\src\\lib\\GlobalCSS.js",[],{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","replacedBy":"501"},{"ruleId":"502","severity":1,"message":"503","line":1,"column":10,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"506","line":9,"column":9,"nodeType":"504","messageId":"505","endLine":9,"endColumn":11},{"ruleId":"507","severity":1,"message":"508","line":16,"column":51,"nodeType":"509","messageId":"510","endLine":16,"endColumn":53},{"ruleId":"507","severity":1,"message":"508","line":22,"column":47,"nodeType":"509","messageId":"510","endLine":22,"endColumn":49},{"ruleId":"498","replacedBy":"511"},{"ruleId":"500","replacedBy":"512"},{"ruleId":"502","severity":1,"message":"513","line":138,"column":12,"nodeType":"504","messageId":"505","endLine":138,"endColumn":20},{"ruleId":"502","severity":1,"message":"514","line":138,"column":22,"nodeType":"504","messageId":"505","endLine":138,"endColumn":33},{"ruleId":"502","severity":1,"message":"515","line":4,"column":10,"nodeType":"504","messageId":"505","endLine":4,"endColumn":14},{"ruleId":"502","severity":1,"message":"516","line":48,"column":11,"nodeType":"504","messageId":"505","endLine":48,"endColumn":19},{"ruleId":"498","replacedBy":"517"},{"ruleId":"500","replacedBy":"518"},{"ruleId":"502","severity":1,"message":"519","line":4,"column":8,"nodeType":"504","messageId":"505","endLine":4,"endColumn":18},{"ruleId":"502","severity":1,"message":"520","line":98,"column":20,"nodeType":"504","messageId":"505","endLine":98,"endColumn":26},{"ruleId":"498","replacedBy":"521"},{"ruleId":"500","replacedBy":"522"},{"ruleId":"502","severity":1,"message":"523","line":1,"column":9,"nodeType":"504","messageId":"505","endLine":1,"endColumn":19},{"ruleId":"498","replacedBy":"524"},{"ruleId":"500","replacedBy":"525"},{"ruleId":"502","severity":1,"message":"526","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":20},{"ruleId":"502","severity":1,"message":"527","line":3,"column":8,"nodeType":"504","messageId":"505","endLine":3,"endColumn":23},{"ruleId":"502","severity":1,"message":"528","line":4,"column":26,"nodeType":"504","messageId":"505","endLine":4,"endColumn":35},{"ruleId":"502","severity":1,"message":"529","line":37,"column":10,"nodeType":"504","messageId":"505","endLine":37,"endColumn":17},{"ruleId":"502","severity":1,"message":"530","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":20},{"ruleId":"498","replacedBy":"531"},{"ruleId":"500","replacedBy":"532"},{"ruleId":"502","severity":1,"message":"533","line":1,"column":10,"nodeType":"504","messageId":"505","endLine":1,"endColumn":16},{"ruleId":"502","severity":1,"message":"534","line":5,"column":9,"nodeType":"504","messageId":"505","endLine":5,"endColumn":13},{"ruleId":"498","replacedBy":"535"},{"ruleId":"500","replacedBy":"536"},{"ruleId":"537","severity":1,"message":"538","line":89,"column":8,"nodeType":"539","endLine":89,"endColumn":10,"suggestions":"540"},{"ruleId":"502","severity":1,"message":"520","line":114,"column":18,"nodeType":"504","messageId":"505","endLine":114,"endColumn":24},{"ruleId":"498","replacedBy":"541"},{"ruleId":"500","replacedBy":"542"},{"ruleId":"537","severity":1,"message":"543","line":74,"column":7,"nodeType":"539","endLine":74,"endColumn":28,"suggestions":"544"},{"ruleId":"545","severity":1,"message":"546","line":180,"column":61,"nodeType":"547","messageId":"548","endLine":180,"endColumn":62,"suggestions":"549"},{"ruleId":"537","severity":1,"message":"550","line":32,"column":7,"nodeType":"539","endLine":32,"endColumn":9,"suggestions":"551"},{"ruleId":"498","replacedBy":"552"},{"ruleId":"500","replacedBy":"553"},{"ruleId":"537","severity":1,"message":"554","line":16,"column":8,"nodeType":"539","endLine":16,"endColumn":19,"suggestions":"555"},{"ruleId":"502","severity":1,"message":"556","line":1,"column":15,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"557","line":1,"column":25,"nodeType":"504","messageId":"505","endLine":1,"endColumn":33},{"ruleId":"502","severity":1,"message":"530","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":20},{"ruleId":"502","severity":1,"message":"515","line":4,"column":10,"nodeType":"504","messageId":"505","endLine":4,"endColumn":14},{"ruleId":"502","severity":1,"message":"533","line":10,"column":8,"nodeType":"504","messageId":"505","endLine":10,"endColumn":14},{"ruleId":"502","severity":1,"message":"558","line":11,"column":8,"nodeType":"504","messageId":"505","endLine":11,"endColumn":18},{"ruleId":"502","severity":1,"message":"559","line":15,"column":9,"nodeType":"504","messageId":"505","endLine":15,"endColumn":22},{"ruleId":"502","severity":1,"message":"560","line":16,"column":9,"nodeType":"504","messageId":"505","endLine":16,"endColumn":21},{"ruleId":"502","severity":1,"message":"561","line":19,"column":7,"nodeType":"504","messageId":"505","endLine":19,"endColumn":18},{"ruleId":"502","severity":1,"message":"516","line":50,"column":11,"nodeType":"504","messageId":"505","endLine":50,"endColumn":19},{"ruleId":"502","severity":1,"message":"562","line":51,"column":11,"nodeType":"504","messageId":"505","endLine":51,"endColumn":18},{"ruleId":"502","severity":1,"message":"529","line":52,"column":11,"nodeType":"504","messageId":"505","endLine":52,"endColumn":18},{"ruleId":"498","replacedBy":"563"},{"ruleId":"500","replacedBy":"564"},{"ruleId":"502","severity":1,"message":"562","line":31,"column":11,"nodeType":"504","messageId":"505","endLine":31,"endColumn":18},{"ruleId":"537","severity":1,"message":"565","line":36,"column":8,"nodeType":"539","endLine":36,"endColumn":10,"suggestions":"566"},{"ruleId":"502","severity":1,"message":"557","line":1,"column":16,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"516","line":8,"column":11,"nodeType":"504","messageId":"505","endLine":8,"endColumn":19},{"ruleId":"498","replacedBy":"567"},{"ruleId":"500","replacedBy":"568"},{"ruleId":"502","severity":1,"message":"569","line":12,"column":9,"nodeType":"504","messageId":"505","endLine":12,"endColumn":18},{"ruleId":"502","severity":1,"message":"570","line":38,"column":10,"nodeType":"504","messageId":"505","endLine":38,"endColumn":21},{"ruleId":"502","severity":1,"message":"571","line":157,"column":7,"nodeType":"504","messageId":"505","endLine":157,"endColumn":20},{"ruleId":"502","severity":1,"message":"572","line":165,"column":7,"nodeType":"504","messageId":"505","endLine":165,"endColumn":22},{"ruleId":"507","severity":1,"message":"508","line":268,"column":39,"nodeType":"509","messageId":"510","endLine":268,"endColumn":41},{"ruleId":"573","severity":1,"message":"574","line":387,"column":36,"nodeType":"575","messageId":"576","endLine":387,"endColumn":38},{"ruleId":"502","severity":1,"message":"577","line":11,"column":10,"nodeType":"504","messageId":"505","endLine":11,"endColumn":26},{"ruleId":"537","severity":1,"message":"578","line":23,"column":6,"nodeType":"539","endLine":23,"endColumn":22,"suggestions":"579"},{"ruleId":"502","severity":1,"message":"580","line":2,"column":10,"nodeType":"504","messageId":"505","endLine":2,"endColumn":21},{"ruleId":"502","severity":1,"message":"558","line":9,"column":8,"nodeType":"504","messageId":"505","endLine":9,"endColumn":18},{"ruleId":"502","severity":1,"message":"581","line":53,"column":12,"nodeType":"504","messageId":"505","endLine":53,"endColumn":23},{"ruleId":"502","severity":1,"message":"582","line":53,"column":24,"nodeType":"504","messageId":"505","endLine":53,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":91,"column":26,"nodeType":"509","messageId":"510","endLine":91,"endColumn":28},{"ruleId":"537","severity":1,"message":"583","line":95,"column":8,"nodeType":"539","endLine":95,"endColumn":35,"suggestions":"584"},{"ruleId":"507","severity":1,"message":"508","line":106,"column":20,"nodeType":"509","messageId":"510","endLine":106,"endColumn":22},{"ruleId":"502","severity":1,"message":"585","line":23,"column":9,"nodeType":"504","messageId":"505","endLine":23,"endColumn":28},{"ruleId":"502","severity":1,"message":"586","line":24,"column":8,"nodeType":"504","messageId":"505","endLine":24,"endColumn":19},{"ruleId":"502","severity":1,"message":"587","line":22,"column":25,"nodeType":"504","messageId":"505","endLine":22,"endColumn":36},{"ruleId":"502","severity":1,"message":"588","line":112,"column":11,"nodeType":"504","messageId":"505","endLine":112,"endColumn":19},{"ruleId":"537","severity":1,"message":"589","line":164,"column":5,"nodeType":"504","endLine":164,"endColumn":14,"suggestions":"590"},{"ruleId":"502","severity":1,"message":"591","line":1,"column":8,"nodeType":"504","messageId":"505","endLine":1,"endColumn":13},{"ruleId":"502","severity":1,"message":"592","line":1,"column":34,"nodeType":"504","messageId":"505","endLine":1,"endColumn":40},{"ruleId":"502","severity":1,"message":"593","line":7,"column":5,"nodeType":"504","messageId":"505","endLine":7,"endColumn":19},{"ruleId":"502","severity":1,"message":"594","line":10,"column":5,"nodeType":"504","messageId":"505","endLine":10,"endColumn":8},{"ruleId":"502","severity":1,"message":"595","line":11,"column":5,"nodeType":"504","messageId":"505","endLine":11,"endColumn":9},{"ruleId":"502","severity":1,"message":"596","line":12,"column":5,"nodeType":"504","messageId":"505","endLine":12,"endColumn":14},{"ruleId":"502","severity":1,"message":"558","line":14,"column":8,"nodeType":"504","messageId":"505","endLine":14,"endColumn":18},{"ruleId":"502","severity":1,"message":"597","line":16,"column":10,"nodeType":"504","messageId":"505","endLine":16,"endColumn":24},{"ruleId":"502","severity":1,"message":"598","line":16,"column":25,"nodeType":"504","messageId":"505","endLine":16,"endColumn":40},{"ruleId":"502","severity":1,"message":"588","line":51,"column":11,"nodeType":"504","messageId":"505","endLine":51,"endColumn":19},{"ruleId":"537","severity":1,"message":"599","line":124,"column":8,"nodeType":"539","endLine":124,"endColumn":10,"suggestions":"600"},{"ruleId":"498","replacedBy":"601"},{"ruleId":"500","replacedBy":"602"},{"ruleId":"498","replacedBy":"603"},{"ruleId":"500","replacedBy":"604"},{"ruleId":"502","severity":1,"message":"605","line":7,"column":21,"nodeType":"504","messageId":"505","endLine":7,"endColumn":33},{"ruleId":"502","severity":1,"message":"606","line":7,"column":34,"nodeType":"504","messageId":"505","endLine":7,"endColumn":39},{"ruleId":"507","severity":1,"message":"508","line":30,"column":45,"nodeType":"509","messageId":"510","endLine":30,"endColumn":47},{"ruleId":"507","severity":1,"message":"508","line":35,"column":24,"nodeType":"509","messageId":"510","endLine":35,"endColumn":26},{"ruleId":"502","severity":1,"message":"557","line":1,"column":16,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"556","line":1,"column":25,"nodeType":"504","messageId":"505","endLine":1,"endColumn":34},{"ruleId":"502","severity":1,"message":"607","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":16},{"ruleId":"502","severity":1,"message":"530","line":2,"column":17,"nodeType":"504","messageId":"505","endLine":2,"endColumn":28},{"ruleId":"502","severity":1,"message":"580","line":2,"column":29,"nodeType":"504","messageId":"505","endLine":2,"endColumn":40},{"ruleId":"502","severity":1,"message":"608","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":24},{"ruleId":"502","severity":1,"message":"556","line":1,"column":15,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"580","line":5,"column":21,"nodeType":"504","messageId":"505","endLine":5,"endColumn":32},{"ruleId":"502","severity":1,"message":"609","line":6,"column":10,"nodeType":"504","messageId":"505","endLine":6,"endColumn":21},{"ruleId":"498","replacedBy":"610"},{"ruleId":"500","replacedBy":"611"},{"ruleId":"537","severity":1,"message":"612","line":121,"column":5,"nodeType":"504","endLine":121,"endColumn":14,"suggestions":"613"},{"ruleId":"502","severity":1,"message":"558","line":2,"column":38,"nodeType":"504","messageId":"505","endLine":2,"endColumn":48},{"ruleId":"502","severity":1,"message":"557","line":1,"column":16,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"556","line":1,"column":25,"nodeType":"504","messageId":"505","endLine":1,"endColumn":34},{"ruleId":"502","severity":1,"message":"607","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":16},{"ruleId":"502","severity":1,"message":"530","line":2,"column":17,"nodeType":"504","messageId":"505","endLine":2,"endColumn":28},{"ruleId":"502","severity":1,"message":"580","line":2,"column":29,"nodeType":"504","messageId":"505","endLine":2,"endColumn":40},{"ruleId":"502","severity":1,"message":"608","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":24},{"ruleId":"502","severity":1,"message":"562","line":24,"column":11,"nodeType":"504","messageId":"505","endLine":24,"endColumn":18},{"ruleId":"502","severity":1,"message":"523","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":19},{"ruleId":"502","severity":1,"message":"614","line":3,"column":27,"nodeType":"504","messageId":"505","endLine":3,"endColumn":33},{"ruleId":"502","severity":1,"message":"615","line":4,"column":8,"nodeType":"504","messageId":"505","endLine":4,"endColumn":19},{"ruleId":"502","severity":1,"message":"616","line":5,"column":8,"nodeType":"504","messageId":"505","endLine":5,"endColumn":16},{"ruleId":"502","severity":1,"message":"591","line":1,"column":8,"nodeType":"504","messageId":"505","endLine":1,"endColumn":13},{"ruleId":"502","severity":1,"message":"592","line":1,"column":34,"nodeType":"504","messageId":"505","endLine":1,"endColumn":40},{"ruleId":"502","severity":1,"message":"617","line":4,"column":5,"nodeType":"504","messageId":"505","endLine":4,"endColumn":13},{"ruleId":"502","severity":1,"message":"558","line":13,"column":8,"nodeType":"504","messageId":"505","endLine":13,"endColumn":18},{"ruleId":"502","severity":1,"message":"618","line":24,"column":9,"nodeType":"504","messageId":"505","endLine":24,"endColumn":19},{"ruleId":"502","severity":1,"message":"619","line":52,"column":7,"nodeType":"504","messageId":"505","endLine":52,"endColumn":15},{"ruleId":"502","severity":1,"message":"620","line":63,"column":12,"nodeType":"504","messageId":"505","endLine":63,"endColumn":20},{"ruleId":"502","severity":1,"message":"621","line":63,"column":21,"nodeType":"504","messageId":"505","endLine":63,"endColumn":32},{"ruleId":"502","severity":1,"message":"622","line":66,"column":11,"nodeType":"504","messageId":"505","endLine":66,"endColumn":19},{"ruleId":"507","severity":1,"message":"508","line":96,"column":47,"nodeType":"509","messageId":"510","endLine":96,"endColumn":49},{"ruleId":"507","severity":1,"message":"508","line":97,"column":47,"nodeType":"509","messageId":"510","endLine":97,"endColumn":49},{"ruleId":"507","severity":1,"message":"508","line":118,"column":20,"nodeType":"509","messageId":"510","endLine":118,"endColumn":22},{"ruleId":"507","severity":1,"message":"508","line":123,"column":20,"nodeType":"509","messageId":"510","endLine":123,"endColumn":22},{"ruleId":"507","severity":1,"message":"508","line":123,"column":35,"nodeType":"509","messageId":"510","endLine":123,"endColumn":37},{"ruleId":"507","severity":1,"message":"508","line":128,"column":20,"nodeType":"509","messageId":"510","endLine":128,"endColumn":22},{"ruleId":"507","severity":1,"message":"508","line":128,"column":35,"nodeType":"509","messageId":"510","endLine":128,"endColumn":37},{"ruleId":"507","severity":1,"message":"508","line":139,"column":26,"nodeType":"509","messageId":"510","endLine":139,"endColumn":28},{"ruleId":"507","severity":1,"message":"623","line":157,"column":30,"nodeType":"509","messageId":"510","endLine":157,"endColumn":32},{"ruleId":"507","severity":1,"message":"508","line":224,"column":17,"nodeType":"509","messageId":"510","endLine":224,"endColumn":19},{"ruleId":"507","severity":1,"message":"508","line":247,"column":53,"nodeType":"509","messageId":"510","endLine":247,"endColumn":55},{"ruleId":"537","severity":1,"message":"599","line":262,"column":8,"nodeType":"539","endLine":262,"endColumn":18,"suggestions":"624"},{"ruleId":"537","severity":1,"message":"625","line":278,"column":8,"nodeType":"539","endLine":278,"endColumn":27,"suggestions":"626"},{"ruleId":"507","severity":1,"message":"508","line":308,"column":42,"nodeType":"509","messageId":"510","endLine":308,"endColumn":44},{"ruleId":"507","severity":1,"message":"508","line":338,"column":63,"nodeType":"509","messageId":"510","endLine":338,"endColumn":65},{"ruleId":"502","severity":1,"message":"627","line":9,"column":10,"nodeType":"504","messageId":"505","endLine":9,"endColumn":25},{"ruleId":"507","severity":1,"message":"508","line":47,"column":40,"nodeType":"509","messageId":"510","endLine":47,"endColumn":42},{"ruleId":"507","severity":1,"message":"508","line":66,"column":16,"nodeType":"509","messageId":"510","endLine":66,"endColumn":18},{"ruleId":"537","severity":1,"message":"628","line":73,"column":7,"nodeType":"539","endLine":73,"endColumn":18,"suggestions":"629"},{"ruleId":"507","severity":1,"message":"508","line":17,"column":43,"nodeType":"509","messageId":"510","endLine":17,"endColumn":45},{"ruleId":"502","severity":1,"message":"530","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":20},{"ruleId":"502","severity":1,"message":"580","line":2,"column":21,"nodeType":"504","messageId":"505","endLine":2,"endColumn":32},{"ruleId":"502","severity":1,"message":"630","line":3,"column":8,"nodeType":"504","messageId":"505","endLine":3,"endColumn":18},{"ruleId":"502","severity":1,"message":"562","line":25,"column":11,"nodeType":"504","messageId":"505","endLine":25,"endColumn":18},{"ruleId":"502","severity":1,"message":"516","line":8,"column":11,"nodeType":"504","messageId":"505","endLine":8,"endColumn":19},{"ruleId":"498","replacedBy":"631"},{"ruleId":"500","replacedBy":"632"},{"ruleId":"502","severity":1,"message":"556","line":8,"column":19,"nodeType":"504","messageId":"505","endLine":8,"endColumn":28},{"ruleId":"633","severity":1,"message":"634","line":32,"column":31,"nodeType":"504","messageId":"635","endLine":32,"endColumn":40},{"ruleId":"502","severity":1,"message":"636","line":95,"column":12,"nodeType":"504","messageId":"505","endLine":95,"endColumn":19},{"ruleId":"502","severity":1,"message":"637","line":95,"column":20,"nodeType":"504","messageId":"505","endLine":95,"endColumn":30},{"ruleId":"502","severity":1,"message":"556","line":1,"column":51,"nodeType":"504","messageId":"505","endLine":1,"endColumn":60},{"ruleId":"502","severity":1,"message":"638","line":3,"column":8,"nodeType":"504","messageId":"505","endLine":3,"endColumn":19},{"ruleId":"502","severity":1,"message":"533","line":4,"column":9,"nodeType":"504","messageId":"505","endLine":4,"endColumn":15},{"ruleId":"502","severity":1,"message":"639","line":9,"column":11,"nodeType":"504","messageId":"505","endLine":9,"endColumn":18},{"ruleId":"502","severity":1,"message":"557","line":1,"column":16,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"607","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":16},{"ruleId":"502","severity":1,"message":"608","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":24},{"ruleId":"537","severity":1,"message":"599","line":32,"column":8,"nodeType":"539","endLine":32,"endColumn":18,"suggestions":"640"},{"ruleId":"498","replacedBy":"641"},{"ruleId":"500","replacedBy":"642"},{"ruleId":"537","severity":1,"message":"643","line":39,"column":8,"nodeType":"539","endLine":39,"endColumn":10,"suggestions":"644"},{"ruleId":"537","severity":1,"message":"645","line":45,"column":8,"nodeType":"539","endLine":45,"endColumn":18,"suggestions":"646"},{"ruleId":"502","severity":1,"message":"647","line":59,"column":21,"nodeType":"504","messageId":"505","endLine":59,"endColumn":32},{"ruleId":"537","severity":1,"message":"648","line":74,"column":7,"nodeType":"539","endLine":74,"endColumn":17,"suggestions":"649"},{"ruleId":"502","severity":1,"message":"587","line":2,"column":25,"nodeType":"504","messageId":"505","endLine":2,"endColumn":36},{"ruleId":"502","severity":1,"message":"533","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":15},{"ruleId":"502","severity":1,"message":"650","line":2,"column":16,"nodeType":"504","messageId":"505","endLine":2,"endColumn":21},{"ruleId":"502","severity":1,"message":"651","line":2,"column":22,"nodeType":"504","messageId":"505","endLine":2,"endColumn":31},{"ruleId":"502","severity":1,"message":"652","line":2,"column":32,"nodeType":"504","messageId":"505","endLine":2,"endColumn":48},{"ruleId":"502","severity":1,"message":"653","line":2,"column":49,"nodeType":"504","messageId":"505","endLine":2,"endColumn":65},{"ruleId":"502","severity":1,"message":"617","line":2,"column":66,"nodeType":"504","messageId":"505","endLine":2,"endColumn":74},{"ruleId":"502","severity":1,"message":"654","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":24},{"ruleId":"502","severity":1,"message":"655","line":6,"column":8,"nodeType":"504","messageId":"505","endLine":6,"endColumn":20},{"ruleId":"502","severity":1,"message":"656","line":7,"column":9,"nodeType":"504","messageId":"505","endLine":7,"endColumn":22},{"ruleId":"502","severity":1,"message":"657","line":31,"column":21,"nodeType":"504","messageId":"505","endLine":31,"endColumn":32},{"ruleId":"537","severity":1,"message":"658","line":37,"column":7,"nodeType":"539","endLine":37,"endColumn":9,"suggestions":"659"},{"ruleId":"502","severity":1,"message":"607","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":16},{"ruleId":"502","severity":1,"message":"533","line":1,"column":10,"nodeType":"504","messageId":"505","endLine":1,"endColumn":16},{"ruleId":"502","severity":1,"message":"660","line":16,"column":11,"nodeType":"504","messageId":"505","endLine":16,"endColumn":18},{"ruleId":"537","severity":1,"message":"599","line":21,"column":8,"nodeType":"539","endLine":21,"endColumn":10,"suggestions":"661"},{"ruleId":"502","severity":1,"message":"530","line":3,"column":9,"nodeType":"504","messageId":"505","endLine":3,"endColumn":20},"no-native-reassign",["662"],"no-negated-in-lhs",["663"],"no-unused-vars","'TAG_TEXT_INPUT' is defined but never used.","Identifier","unusedVar","'ss' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["662"],["663"],"'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.",["662"],["663"],"'SearchIcon' is defined but never used.","'height' is assigned a value but never used.",["662"],["663"],"'useHistory' is defined but never used.",["662"],["663"],"'LoginButton' is defined but never used.","'CirculerLoading' is defined but never used.","'CardMedia' is defined but never used.","'history' is assigned a value but never used.","'useSelector' is defined but never used.",["662"],["663"],"'Button' is defined but never used.","'Card' is defined but never used.",["662"],["663"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'error', and 'tag_list'. Either include them or remove the dependency array.","ArrayExpression",["664"],["662"],["663"],"React Hook useEffect has a missing dependency: 'searchTagArray'. Either include it or remove the dependency array.",["665"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["666","667"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["668"],["662"],["663"],"React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["669"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'OPEN_PASSWORD' is defined but never used.","'LogOutButton' is defined but never used.","'drawerWidth' is assigned a value but never used.","'classes' is assigned a value but never used.",["662"],["663"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["670"],["662"],["663"],"'RESET_TAG' is defined but never used.","'useSnackbar' is defined but never used.","'INIT_USER_TAG' is assigned a value but never used.","'INIT_USER_STATE' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FirstLoginButton' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["671"],"'useDispatch' is defined but never used.","'defSelected' is assigned a value but never used.","'setDefSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTagData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["672"],"'TestFreeTagPutModal' is defined but never used.","'TestLoading' is defined but never used.","'getUserName' is defined but never used.","'tag_list' is assigned a value but never used.","React Hook useEffect contains a call to 'setBoxStyle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo] as a second argument to the useEffect Hook.",["673"],"'react' is defined but never used.","'useRef' is defined but never used.","'FormHelperText' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TextField' is defined but never used.","'TYPE_TAG_GUEST' is defined but never used.","'TYPE_TAG_MENBER' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["674"],["662"],["663"],["662"],["663"],"'createStyles' is defined but never used.","'Theme' is defined but never used.","'connect' is defined but never used.","'LinearProgress' is defined but never used.","'loadNewMemo' is defined but never used.",["662"],["663"],"React Hook useEffect contains a call to 'setCanSubmit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selected.length, mainText.length, hasTime, registTime] as a second argument to the useEffect Hook.",["675"],"'Switch' is defined but never used.","'SlideRoutes' is defined but never used.","'TestMain' is defined but never used.","'Collapse' is defined but never used.","'GetTagName' is defined but never used.","'tagRanks' is assigned a value but never used.","'viewmode' is assigned a value but never used.","'setViewMode' is assigned a value but never used.","'changFlg' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["676"],"React Hook useEffect has a missing dependency: 'changeViewList'. Either include it or remove the dependency array.",["677"],"'getTimeStampNow' is defined but never used.","React Hook useEffect has missing dependencies: 'selected' and 'sendSelectedTag'. Either include them or remove the dependency array.",["678"],"'MainHeader' is defined but never used.",["662"],["663"],"no-use-before-define","'LOGIN_URL' was used before it was defined.","usedBeforeDefined","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","'ReplyColumn' is defined but never used.","'onClick' is assigned a value but never used.",["679"],["662"],["663"],"React Hook useEffect has a missing dependency: 'resetCheck'. Either include it or remove the dependency array.",["680"],"React Hook useEffect has missing dependencies: 'resetCheck' and 'timeline.length'. Either include them or remove the dependency array.",["681"],"'setMainText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.keyMemoMain.keySender' and 'data.numNoticeType'. Either include them or remove the dependency array.",["682"],"'Modal' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ButtonSample' is defined but never used.","'ScrollUpdater' is defined but never used.","'setStartNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'startnum'. Either include them or remove the dependency array.",["683"],"'onPress' is assigned a value but never used.",["684"],"no-global-assign","no-unsafe-negation",{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"messageId":"689","fix":"690","desc":"691"},{"messageId":"692","fix":"693","desc":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"711","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"707","fix":"726"},"Update the dependencies array to be: [dispatch, error, tag_list]",{"range":"727","text":"728"},"Update the dependencies array to be: [searchTagArray, selected, tag_source]",{"range":"729","text":"730"},"removeEscape",{"range":"731","text":"732"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"733","text":"734"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"735","text":"736"},"Update the dependencies array to be: [enqueueSnackbar, snacklist]",{"range":"737","text":"738"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"739","text":"740"},"Update the dependencies array to be: [error, history, location]",{"range":"741","text":"742"},"Update the dependencies array to be: [props.defSelected, all_tag, getTagData, props]",{"range":"743","text":"744"},"Add dependencies array: [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",{"range":"745","text":"746"},"Update the dependencies array to be: [dispatch]",{"range":"747","text":"748"},"Add dependencies array: [selected.length, mainText.length, hasTime, registTime]",{"range":"749","text":"750"},"Update the dependencies array to be: [changFlg, dispatch]",{"range":"751","text":"752"},"Update the dependencies array to be: [viewtype, tag_list, changeViewList]",{"range":"753","text":"754"},"Update the dependencies array to be: [changeFlg, selected, sendSelectedTag]",{"range":"755","text":"756"},{"range":"757","text":"752"},"Update the dependencies array to be: [resetCheck]",{"range":"758","text":"759"},"Update the dependencies array to be: [changFlg, resetCheck, timeline.length]",{"range":"760","text":"761"},"Update the dependencies array to be: [data.keyMemoMain.keySender, data.numNoticeType, userlist]",{"range":"762","text":"763"},"Update the dependencies array to be: [dispatch, startnum]",{"range":"764","text":"765"},{"range":"766","text":"748"},[2423,2425],"[dispatch, error, tag_list]",[1879,1900],"[searchTagArray, selected, tag_source]",[5096,5097],"",[5096,5096],"\\",[774,776],"[props]",[470,481],"[enqueueSnackbar, snacklist]",[909,911],"[dispatch, props.match.params.id]",[777,793],"[error, history, location]",[2369,2396],"[props.defSelected, all_tag, getTagData, props]",[4924,4924],", [checkText, expanded, boxstyle, classes.memoSub, classes.memoParent, classes.memoChild, classes.memo]",[3216,3218],"[dispatch]",[3510,3510],", [selected.length, mainText.length, hasTime, registTime]",[7730,7740],"[changFlg, dispatch]",[8044,8063],"[viewtype, tag_list, changeViewList]",[2211,2222],"[changeFlg, selected, sendSelectedTag]",[797,807],[1391,1393],"[resetCheck]",[1514,1524],"[changFlg, resetCheck, timeline.length]",[1601,1611],"[data.keyMemoMain.keySender, data.numNoticeType, userlist]",[1087,1089],"[dispatch, startnum]",[700,702]]